from transformers import AutoModelForCausalLM, AutoTokenizer
device = "cuda" # the device to load the model onto

model = AutoModelForCausalLM.from_pretrained(
    "j869903116/Qwen1.5_7B_text_to_sql_mrking",
    device_map="auto"
)
tokenizer = AutoTokenizer.from_pretrained("j869903116/Qwen1.5_7B_text_to_sql_mrking")

prompt = "You are a MySQL expert. Given an input question, first create a syntactically correct SQL\n    Query to run, then look at the results of the query and return the answer to the input question.\n    You must query only the columns that are needed to answer the question.\n    Pay attention to use only the column names you can see in the tables below. Be careful to not query for columns that do not exist.\n    pay attention to which columns is in which table.\n    Pay attention to that the constraint variables are case sensitive and must match the columns name.\n    Pay attention to return an executable sql query.\n    Pay attention to that the values of variables need to be enclosed in quotation marks, for example: it should be ' SELECT col_1 FROM Table_69d3e454334311e9831e542696d6e445\n    WHERE col_7 < abc ' instead of 'SELECT col_1 FROM Table_69d3e454334311e9831e542696d6e445 WHERE col_7 < \"abc\"'.\n    Pay attention to that SQL tables need to be given aliases when using join, for example: it should be 'SELECT a.name FROM actor AS a JOIN cast AS c ON a.aid = c.aid JOIN\n    movie AS m ON c.msid = m.mid WHERE m.title = '霸王别姬\" AND c.role = '程蝶衣'' instead of 'SELECT actor.name FROM actor JOIN cast ON actor.aid = cast.aid JOIN\n    movie ON cast.msid = movie.mid WHERE movie.title = '霸王别姬' AND cast.role = '程蝶衣''.\n\n    Output the final SQL query only.\n    \n    Use the following format:\n    SQLQuery:  SQL Query here.\n    Only use the following tables:\n    \n    CREATE TABLE \"school_detail\" (\"admissions\" TEXT, \"answerurl\" TEXT, \"belong\" TEXT, \"central\" TEXT, \"city_id\" TEXT, \"city_name\" TEXT, \"code_enroll\" TEXT,\n        \"colleges_level\" TEXT, \"county_id\" TEXT, \"county_name\" TEXT, \"department\" TEXT, \"doublehigh\" TEXT, \"dual_class\" TEXT, \"dual_class_name\" TEXT, \"f211\" INTEGER,\n        \"f985\" INTEGER, \"hightitle\" TEXT, \"inner_rate\" TEXT, \"is_recruitment\" TEXT, \"level\" TEXT, \"level_name\" TEXT, \"name\" TEXT, \"nature\" TEXT, \"nature_name\" TEXT,\n        \"outer_rate\" TEXT, \"province_id\" TEXT, \"province_name\" TEXT, \"rank\" TEXT, \"rank_type\" TEXT, \"rate\" TEXT, \"school_id\" INTEGER, \"school_type\" TEXT, \"tag_name\" TEXT,\n        \"type\" TEXT, \"type_name\" TEXT, \"view_month\" TEXT, \"view_total\" TEXT, \"view_total_number\" TEXT, \"view_week\" TEXT, \"short\" TEXT, \"old_name\" TEXT, \"proid\" TEXT);\n        /*The table school_detail description is: '学校详情'.\n     \n        The admissions field of school_detail means 强基计划 and has possible values as: ['1', '2'].\nThe answerurl field of school_detail means 招生办网址(官方招生咨询平台) and has possible values as: ['https://answer.eol.cn/question/index?id=878&source=zsgk_app', 'https://answer.eol.cn/fillmess/index?id=978&source=zsgk_app', 'https://answer.eol.cn/question/index?id=918&source=zsgk_app', 'https://answer.eol.cn/question/index?id=623&source=zsgk_app', 'https://answer.eol.cn/question/index?id=651&source=zsgk_app'].\nThe belong field of school_detail means 隶属(学校属于哪个组织或机构) and has possible values as: ['中国科学院', '上海市 中国科学院', '西南财经大学', '上海市教委', '中国社会科学院'].\nThe central field of school_detail means 中央部委 and has possible values as: ['1', '2'].\nThe city_id field of school_detail means 学校所在城市的ID and has possible values as: ['3715', '3713', '3403', '3703', '5113'].\nThe city_name field of school_detail means 学校所在城市的名称 and has possible values as: ['大庆市', '大连市', '淄博市', '长春市', '自治区直辖县级行政区划'].\nThe code_enroll field of school_detail means 招生代码 and has possible values as: ['1000100', '1003600', '1071200', '1005400', '1003400'].\nThe colleges_level field of school_detail means 学校层次,(省级示范、国家级骨干等) and has possible values as: ['', '76003', '76001', '76001,76004', '76004,76005'].\nThe county_id field of school_detail means 学校所在区县的ID and has possible values as: ['350103', '120113', '230103', '110108', '110102'].\nThe county_name field of school_detail means 学校所在区县的名称 and has possible values as: ['延吉市', '东西湖区', '郑州高新技术产业开发区', '合肥经济技术开发区', '浦东新区'].\nThe department field of school_detail means 学校所在部门 and has possible values as: ['1', '2'].\nThe doublehigh field of school_detail means 双高计划 and has possible values as: ['0', '77003', '77001', '77005', '77006'].\nThe dual_class field of school_detail means 双一流代码(38000(一流学科建设高校)38001(一流大学建设高校A类) 38002(一流大学建设高校B类)) and has possible values as: ['38003', '38001', '38000'].\nThe dual_class_name field of school_detail means 双一流学科名称 and has possible values as: ['双一流', ''].\nThe f211 field of school_detail means 211工程 and has possible values as: ['1', '2'].\nThe f985 field of school_detail means 985工程 and has possible values as: ['1', '2'].\nThe hightitle field of school_detail means 高校名称 and has possible values as: ['清华大学', '厦门大学', '重庆大学', '深圳大学', '复旦大学'].\nThe inner_rate field of school_detail means 内部排名 and has possible values as: ['23.61', '21.26', '41.61', '51.51', '35.29'].\nThe is_recruitment field of school_detail means 是否招生 and has possible values as: ['1', '2'].\nThe level field of school_detail means 教育等级, \"普通本科\":2001, \"专科（高职）\": 2002 and has possible values as: ['2001', '2002'].\nThe level_name field of school_detail means 办学层次名称 and has possible values as: ['专科（高职）', '普通本科'].\nThe name field of school_detail means 学校名称 and has possible values as: ['清华大学', '厦门大学', '重庆大学', '深圳大学', '复旦大学'].\nThe nature field of school_detail means 办学类型，36000: \"公办\", 36001: \"民办\" and has possible values as: ['36003', '0', '36001', '36000', '36002'].\nThe nature_name field of school_detail means 办学类型名称 and has possible values as: ['境外高校独立办学', '独立学院', '中外合作办学', '公办', '内地与港澳台地区合作办学'].\nThe outer_rate field of school_detail means 外部排名 and has possible values as: ['15.29', '20.19', '24.44', '10.20', '8.42'].\nThe province_id field of school_detail means 学校所在省份的ID and has possible values as: ['37', '11', '45', '23', '46'].\nThe province_name field of school_detail means 学校所在省份的名称 and has possible values as: ['重庆', '澳门', '甘肃', '辽宁', '陕西'].\nThe rank field of school_detail means 学校排名 and has possible values as: .\nThe rank_type field of school_detail means 学校排名类型 and has possible values as: .\nThe rate field of school_detail means 学校评分 and has possible values as: ['96.19', '89.12', '91.29', '91.39', '96.90'].\nThe school_id field of school_detail means 学校ID and has possible values as: ['127', '121', '107', '113', '116'].\nThe school_type field of school_detail means 办学类型：\"普通本科\": \"6000\",\"专科（高职)\": , 6002: \"独立学院\", 6003: \"中外合作办学\", 6007: \"其他\" and has possible values as: ['6000', '6001'].\nThe tag_name field of school_detail means 学校类型名称 and has possible values as: ['教育部直属', '中央部委院', ''].\nThe type field of school_detail means 学校类型 and has possible values as: ['5003', '0', '5009', '5007', '5008'].\nThe type_name field of school_detail means 学校的类型，以及类型的名称 and has possible values as: ['军事类', '综合类', '其他', '政法类', '理工类'].\nThe view_month field of school_detail means 学校浏览量(月) and has possible values as: ['17247', '3912', '14649', '5739', '3722'].\nThe view_total field of school_detail means 学校浏览量(总) and has possible values as: ['1644.2w', '1648.6w', '1626.1w', '1363.2w', '1824w'].\nThe view_total_number field of school_detail means 学校浏览量(总数) and has possible values as: ['16486180', '18240400', '16261136', '13631944', '16442157'].\nThe view_week field of school_detail means 学校浏览量(周) and has possible values as: ['1929', '1579', '1365', '393', '1566'].\nThe short field of school_detail means 学校简称 and has possible values as: ['清华大学医学部,协和医学院', '北京清华,清华', '兰大', '扬大', '云大'].\nThe old_name field of school_detail means 学校旧名称 and has possible values as: ['清华大学医学部', '大连医学院', '甘肃师范大学', '大连工学院分院', '大连海运学院'].\nThe proid field of school_detail means 学校项目ID and has possible values as: ['37', '11', '45', '23', '46'].\n\n        */ \n        \"Question\":  想了解一下清华大学？\n        \"SQLQuery\": \n        "
messages = [
    {"role": "system", "content": "You are a MySQL expert.Output the final SQL query only."},
    {"role": "user", "content": prompt}
]
text = tokenizer.apply_chat_template(
    messages,
    tokenize=False,
    add_generation_prompt=True
)
model_inputs = tokenizer([text], return_tensors="pt").to(device)

generated_ids = model.chat(
    model_inputs.input_ids,
    max_new_tokens=512
)
generated_ids = [
    output_ids[len(input_ids):] for input_ids, output_ids in zip(model_inputs.input_ids, generated_ids)
]

response = tokenizer.batch_decode(generated_ids, skip_special_tokens=True)[0]
print(response)