[
  {
    "conversations": [
      {
        "from": "user",
        "value": "部门中有多少人年龄大于56岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM head WHERE age  >  56"
      }
    ],
    "system": "CREATE TABLE head (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按年龄排序的部门负责人的姓名、出生地和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  born_state ,  age FROM head ORDER BY age"
      }
    ],
    "system": "CREATE TABLE head (born_state VARCHAR, age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每个部门的创建年份、名称和预算。"
      },
      {
        "from": "assistant",
        "value": "SELECT creation ,  name ,  budget_in_billions FROM department"
      }
    ],
    "system": "CREATE TABLE department (budget_in_billions VARCHAR, name VARCHAR, creation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "部门的最高预算和最低预算是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department"
      }
    ],
    "system": "CREATE TABLE department (budget_in_billions INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "排名在10到15之间的部门的平均雇员人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(num_employees) FROM department WHERE ranking BETWEEN 10 AND 15"
      }
    ],
    "system": "CREATE TABLE department (num_employees INTEGER, ranking INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "出生在“浙江”州以外的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM head WHERE born_state != '浙江'"
      }
    ],
    "system": "CREATE TABLE head (born_state VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "出生于“河南”州的秘书所管理的各部门的不同创建年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  '河南'"
      }
    ],
    "system": "CREATE TABLE department (creation VARCHAR, department_id VARCHAR), CREATE TABLE management (head_id VARCHAR, department_id VARCHAR), CREATE TABLE head (head_id VARCHAR, born_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有3个负责人出生的州的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT born_state FROM head GROUP BY born_state HAVING count(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE head (born_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "大多数部门在哪一年成立？"
      },
      {
        "from": "assistant",
        "value": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE department (creation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示由临时代理值为“是”的负责人所管理的部门的员工姓名和数目？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  '是'"
      }
    ],
    "system": "CREATE TABLE department (num_employees VARCHAR, name VARCHAR, department_id VARCHAR), CREATE TABLE management (department_id VARCHAR, temporary_acting VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个代理状态？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT temporary_acting) FROM management"
      }
    ],
    "system": "CREATE TABLE management (temporary_acting VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少部门由没有提到的负责人领导？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM department WHERE department_id NOT IN (SELECT department_id FROM management);"
      }
    ],
    "system": "CREATE TABLE department (department_id VARCHAR), CREATE TABLE management (department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些正在代理的负责人有哪些不同的年龄？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  '是'"
      }
    ],
    "system": "CREATE TABLE management (head_id VARCHAR, temporary_acting VARCHAR), CREATE TABLE head (head_id VARCHAR, age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“财政部”部门秘书和“国土安全部”秘书出生的州。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  '财政部' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  '国土安全部'"
      }
    ],
    "system": "CREATE TABLE department (name VARCHAR, department_id VARCHAR), CREATE TABLE management (head_id VARCHAR, department_id VARCHAR), CREATE TABLE head (head_id VARCHAR, born_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个部门有不止一个负责人？列出ID、姓名和人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE management (department_id VARCHAR), CREATE TABLE department (name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个负责人的名字有“强”这个子串？列出ID和姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT head_id ,  name FROM head WHERE name LIKE '强'"
      }
    ],
    "system": "CREATE TABLE head (head_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少个农场？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM farm"
      }
    ],
    "system": "CREATE TABLE farm (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算农场的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM farm"
      }
    ],
    "system": "CREATE TABLE farm (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按升序列出农场里的马的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"
      }
    ],
    "system": "CREATE TABLE farm (Total_Horses VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照升序排列，每一个农场的马的总数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Total_Horses FROM farm ORDER BY Total_Horses ASC"
      }
    ],
    "system": "CREATE TABLE farm (Total_Horses VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么主持人所主持比赛的主题不是“外星人”？"
      },
      {
        "from": "assistant",
        "value": "SELECT Hosts FROM farm_competition WHERE Theme !=  '外星人'"
      }
    ],
    "system": "CREATE TABLE farm_competition (Theme VARCHAR, Hosts VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回主题不是“外星人”的竞赛的主持人？"
      },
      {
        "from": "assistant",
        "value": "SELECT Hosts FROM farm_competition WHERE Theme !=  '外星人'"
      }
    ],
    "system": "CREATE TABLE farm_competition (Theme VARCHAR, Hosts VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年份排序的农场比赛的主题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC"
      }
    ],
    "system": "CREATE TABLE farm_competition (Theme VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回农场比赛的主题，按年份排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT Theme FROM farm_competition ORDER BY YEAR ASC"
      }
    ],
    "system": "CREATE TABLE farm_competition (Theme VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有超过5000匹马的农场中，平均的工作马的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000"
      }
    ],
    "system": "CREATE TABLE farm (Total_Horses INTEGER, Working_Horses INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出有5000多匹马的农场的平均工作马的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Working_Horses) FROM farm WHERE Total_Horses  >  5000"
      }
    ],
    "system": "CREATE TABLE farm (Total_Horses INTEGER, Working_Horses INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有农场中，奶牛的最大和最小数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Cows) ,  min(Cows) FROM farm"
      }
    ],
    "system": "CREATE TABLE farm (Cows INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有农场奶牛的最大和最小数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Cows) ,  min(Cows) FROM farm"
      }
    ],
    "system": "CREATE TABLE farm (Cows INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "城市有多少种不同的地位？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Status) FROM city"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计不同地位的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Status) FROM city"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按人口降序列出城市的官方名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_Name FROM city ORDER BY Population DESC"
      }
    ],
    "system": "CREATE TABLE city (Population VARCHAR, Official_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按人口降序排列的城市的官方名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_Name FROM city ORDER BY Population DESC"
      }
    ],
    "system": "CREATE TABLE city (Population VARCHAR, Official_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出人口最多的城市的官方名称和状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, Population VARCHAR, Official_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "居住人数最多的城市的官方名称和状态是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_Name ,  Status FROM city ORDER BY Population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, Population VARCHAR, Official_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示主办比赛城市的年份和正式名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID"
      }
    ],
    "system": "CREATE TABLE city (City_ID VARCHAR, Official_Name VARCHAR), CREATE TABLE farm_competition (Year VARCHAR, Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出每个竞赛的城市的年份和官方名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Year ,  T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID"
      }
    ],
    "system": "CREATE TABLE city (City_ID VARCHAR, Official_Name VARCHAR), CREATE TABLE farm_competition (Year VARCHAR, Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示举办了不止一次比赛的城市的官方名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE city (City_ID VARCHAR, Official_Name VARCHAR), CREATE TABLE farm_competition (Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "举办了不止一次比赛的城市的官方名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE city (City_ID VARCHAR, Official_Name VARCHAR), CREATE TABLE farm_competition (Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示主办城市数量最多的城市的状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, City_ID VARCHAR), CREATE TABLE farm_competition (Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "主办过最多比赛的城市的状态如何？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, City_ID VARCHAR), CREATE TABLE farm_competition (Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示拥有超过1000人的主办城市的比赛主题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000"
      }
    ],
    "system": "CREATE TABLE city (Population INTEGER, City_ID VARCHAR), CREATE TABLE farm_competition (Theme VARCHAR, Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过1000居民的主办城市的比赛主题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000"
      }
    ],
    "system": "CREATE TABLE city (Population INTEGER, City_ID VARCHAR), CREATE TABLE farm_competition (Theme VARCHAR, Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示不同城市的地位和各个地位的城市平均人口。"
      },
      {
        "from": "assistant",
        "value": "SELECT Status ,  avg(Population) FROM city GROUP BY Status"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个城市的状态和平均人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Status ,  avg(Population) FROM city GROUP BY Status"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请按每个状态的城市的数量排列，显示不同的状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回城市的不同状态，按频率递增排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) ASC"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出城市中最常见的一种状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有城市中最常见的状态是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有比赛的城市的官方名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)"
      }
    ],
    "system": "CREATE TABLE city (City_ID VARCHAR, Official_Name VARCHAR, Host_city_ID VARCHAR), CREATE TABLE farm_competition (City_ID VARCHAR, Official_Name VARCHAR, Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有举办过农场比赛的城市的官方名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)"
      }
    ],
    "system": "CREATE TABLE city (City_ID VARCHAR, Official_Name VARCHAR, Host_city_ID VARCHAR), CREATE TABLE farm_competition (City_ID VARCHAR, Official_Name VARCHAR, Host_city_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示人口大于1500和小于500的城市的状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口超过1500的城市和人口低于500的城市，其状态分别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Status FROM city WHERE Population  >  1500 INTERSECT SELECT Status FROM city WHERE Population  <  500"
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找人口大于1500或小于500的城市的官方名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500"
      }
    ],
    "system": "CREATE TABLE city (Population INTEGER, Official_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口超过1500或少于500的城市的官方名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500"
      }
    ],
    "system": "CREATE TABLE city (Population INTEGER, Official_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不属于“乡村”的城市的人口普查排名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Census_Ranking FROM city WHERE Status !=  \"乡村\""
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, Census_Ranking VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“乡村”状态的城市的人口普查排名是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Census_Ranking FROM city WHERE Status !=  \"乡村\""
      }
    ],
    "system": "CREATE TABLE city (Status VARCHAR, Census_Ranking VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册学生最多的是哪门课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE student_course_registrations (course_Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多注册学生的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE student_course_registrations (course_Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册一些课程但注册课程最少的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册课程数量最少但是注册了一些课程的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有候选人的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id"
      }
    ],
    "system": "CREATE TABLE candidates (candidate_id VARCHAR), CREATE TABLE people (last_name VARCHAR, first_name VARCHAR, person_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有候选人的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id"
      }
    ],
    "system": "CREATE TABLE candidates (candidate_id VARCHAR), CREATE TABLE people (last_name VARCHAR, first_name VARCHAR, person_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出从不上课的学生的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
      }
    ],
    "system": "CREATE TABLE students (student_id VARCHAR), CREATE TABLE student_course_attendance (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个从未上过课的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM students WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
      }
    ],
    "system": "CREATE TABLE students (student_id VARCHAR), CREATE TABLE student_course_attendance (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出参加过一些课程的学生的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_attendance"
      }
    ],
    "system": "CREATE TABLE student_course_attendance (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有参加过至少一门课程的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_attendance"
      }
    ],
    "system": "CREATE TABLE student_course_attendance (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有上课学生ID是什么？这些课程的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.course_name FROM student_course_registrations AS T1 JOIN courses AS T2 ON T1.course_id = T2.course_id"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR), CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近注册课程的学生的具体信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (registration_date VARCHAR, student_id VARCHAR), CREATE TABLE students (student_id VARCHAR, student_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于最近注册课程的学生，我们有哪些信息？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (registration_date VARCHAR, student_id VARCHAR), CREATE TABLE students (student_id VARCHAR, student_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生参加英语课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"英语\""
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE student_course_attendance (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加英语课程的有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"英语\""
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE student_course_attendance (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID为171的学生参加了多少门课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171"
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR), CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID 171的学生实际参加了多少门课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171"
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR), CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到电子邮箱为“stanley.monahan@example.org”的候选人的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\""
      }
    ],
    "system": "CREATE TABLE people (person_id VARCHAR, email_address VARCHAR), CREATE TABLE candidates (candidate_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "候选人的ID是什么，他的电子邮件是“stanley.monahan@example.org”？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\""
      }
    ],
    "system": "CREATE TABLE people (person_id VARCHAR, email_address VARCHAR), CREATE TABLE candidates (candidate_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最近访问课程的候选人的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE candidate_assessments (assessment_date VARCHAR, candidate_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近访问课程的候选人的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE candidate_assessments (assessment_date VARCHAR, candidate_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册最多课程的学生的具体信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE students (student_id VARCHAR, student_details VARCHAR), CREATE TABLE student_course_registrations (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册课程最多的学生的详细情况是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE students (student_id VARCHAR, student_details VARCHAR), CREATE TABLE student_course_registrations (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出注册一些课程的学生的ID和注册课程的数量？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"
      }
    ],
    "system": "CREATE TABLE students (student_id VARCHAR), CREATE TABLE student_course_registrations (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个注册了某些课程的学生，他们注册了多少课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id"
      }
    ],
    "system": "CREATE TABLE students (student_id VARCHAR), CREATE TABLE student_course_registrations (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每门课程有多少注册学生？列出课程名称和注册的学生人数？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"
      }
    ],
    "system": "CREATE TABLE students (student_id VARCHAR), CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR), CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个课程ID，注册了多少学生，课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id"
      }
    ],
    "system": "CREATE TABLE students (student_id VARCHAR), CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR), CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到评估码为“通过”的候选人ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"通过\""
      }
    ],
    "system": "CREATE TABLE candidate_assessments (candidate_id VARCHAR, asessment_outcome_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "成绩代码为及格的候选人的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT candidate_id FROM candidate_assessments WHERE asessment_outcome_code = \"通过\""
      }
    ],
    "system": "CREATE TABLE candidate_assessments (candidate_id VARCHAR, asessment_outcome_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找评估代码是“失败”的考生的手机号码？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"失败\""
      }
    ],
    "system": "CREATE TABLE candidates (candidate_id VARCHAR), CREATE TABLE candidate_assessments (candidate_id VARCHAR, asessment_outcome_code VARCHAR), CREATE TABLE people (cell_mobile_number VARCHAR, person_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "收到“失败”评估码的候选人的手机号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"失败\""
      }
    ],
    "system": "CREATE TABLE candidates (candidate_id VARCHAR), CREATE TABLE candidate_assessments (candidate_id VARCHAR, asessment_outcome_code VARCHAR), CREATE TABLE people (cell_mobile_number VARCHAR, person_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些注册301课程的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301"
      }
    ],
    "system": "CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册301课程的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301"
      }
    ],
    "system": "CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近注册301课程的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR, date_of_attendance VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于最近注册301课程的学生，他们的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR, date_of_attendance VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到人的地址的不同城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id"
      }
    ],
    "system": "CREATE TABLE addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE people_addresses (address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人们居住的不同城市有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id"
      }
    ],
    "system": "CREATE TABLE addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE people_addresses (address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出学生地址的不同城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id"
      }
    ],
    "system": "CREATE TABLE addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE people_addresses (address_id VARCHAR, person_id VARCHAR), CREATE TABLE students (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生居住的不同城市有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id"
      }
    ],
    "system": "CREATE TABLE addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE people_addresses (address_id VARCHAR, person_id VARCHAR), CREATE TABLE students (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出课程名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_name FROM courses ORDER BY course_name"
      }
    ],
    "system": "CREATE TABLE courses (course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_name FROM courses ORDER BY course_name"
      }
    ],
    "system": "CREATE TABLE courses (course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出人的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name FROM people ORDER BY first_name"
      }
    ],
    "system": "CREATE TABLE people (first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name FROM people ORDER BY first_name"
      }
    ],
    "system": "CREATE TABLE people (first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册课程或参加课程的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (student_id VARCHAR), CREATE TABLE student_course_attendance (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册或参加课程的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (student_id VARCHAR), CREATE TABLE student_course_attendance (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找ID为121的学生注册或参加的课程的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR), CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID是121的学生所注册或参加的课程的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR), CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册课程但不参加课程的学生都有哪些信息？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (student_id VARCHAR), CREATE TABLE student_course_attendance (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "注册但没有参加任何课程的学生的详细情况是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)"
      }
    ],
    "system": "CREATE TABLE student_course_registrations (student_id VARCHAR), CREATE TABLE student_course_attendance (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照注册日期的顺序列出注册“统计学”课程的学生的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"统计学\" ORDER BY T2.registration_date"
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR, registration_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按注册日期顺序排序，注册“统计学”课程的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"统计学\" ORDER BY T2.registration_date"
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE student_course_registrations (course_id VARCHAR, student_id VARCHAR, registration_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照出勤日期的顺序列出参加“统计学”课程的学生的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"统计学\" ORDER BY T2.date_of_attendance"
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR, date_of_attendance VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照出勤日期的顺序，上“统计学”学院课程的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"统计学\" ORDER BY T2.date_of_attendance"
      }
    ],
    "system": "CREATE TABLE courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE student_course_attendance (course_id VARCHAR, student_id VARCHAR, date_of_attendance VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我最高温度高于85的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date FROM weather WHERE max_temperature_f  >  85"
      }
    ],
    "system": "CREATE TABLE weather (max_temperature_f INTEGER, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高温度高于85的日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date FROM weather WHERE max_temperature_f  >  85"
      }
    ],
    "system": "CREATE TABLE weather (max_temperature_f INTEGER, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "纬度低于37.5的车站名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM station WHERE lat  <  37.5"
      }
    ],
    "system": "CREATE TABLE station (name VARCHAR, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "纬度小于37.5的所有车站的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM station WHERE lat  <  37.5"
      }
    ],
    "system": "CREATE TABLE station (name VARCHAR, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个城市，返回所有车站的最高纬度。"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  max(lat) FROM station GROUP BY city"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个城市来说，其车站的最高纬度是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  max(lat) FROM station GROUP BY city"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我三个ID最老的路线的起始站和结束站。"
      },
      {
        "from": "assistant",
        "value": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3"
      }
    ],
    "system": "CREATE TABLE trip (start_station_name VARCHAR, id VARCHAR, end_station_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "三个最小ID的路线的起始站和终点站是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3"
      }
    ],
    "system": "CREATE TABLE trip (start_station_name VARCHAR, id VARCHAR, end_station_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长沙”市车站平均纬度和经度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"长沙\""
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, long INTEGER, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长沙”市的平均纬度和经度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"长沙\""
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, long INTEGER, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "长度最短的路线的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM trip ORDER BY duration LIMIT 1"
      }
    ],
    "system": "CREATE TABLE trip (duration VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最短路线的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM trip ORDER BY duration LIMIT 1"
      }
    ],
    "system": "CREATE TABLE trip (duration VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID为636的自行车的路线的总时间和最大持续时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636"
      }
    ],
    "system": "CREATE TABLE trip (bike_id VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID为636自行车的所有路线的总时间和最大持续时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636"
      }
    ],
    "system": "CREATE TABLE trip (bike_id VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个邮编，返回那里8月的平均温度。"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"八月\" GROUP BY zip_code"
      }
    ],
    "system": "CREATE TABLE weather (mean_temperature_f INTEGER, zip_code VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个邮政编码，以“8”开头的所有日期的平均温度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code  ,  avg(mean_temperature_f) FROM weather WHERE date LIKE \"八月\" GROUP BY zip_code"
      }
    ],
    "system": "CREATE TABLE weather (mean_temperature_f INTEGER, zip_code VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从路线记录，找出不同的自行车的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT bike_id) FROM trip"
      }
    ],
    "system": "CREATE TABLE trip (bike_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个不同的自行车ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT bike_id) FROM trip"
      }
    ],
    "system": "CREATE TABLE trip (bike_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "车站所处的不同城市的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT city) FROM station"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这些车站在多少个不同的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT city) FROM station"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”城有多少个车站？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM station WHERE city  =  \"重庆\""
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”有多少车站？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM station WHERE city  =  \"重庆\""
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回曾经有7辆可用自行车的车站的唯一名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7"
      }
    ],
    "system": "CREATE TABLE station (id VARCHAR, name VARCHAR), CREATE TABLE status (bikes_available VARCHAR, station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个曾经有7辆可用自行车的车站都有哪些不同的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7"
      }
    ],
    "system": "CREATE TABLE station (id VARCHAR, name VARCHAR), CREATE TABLE status (bikes_available VARCHAR, station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个起点站从8月份开始的路线最多？请告诉我车站的名字和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"八月\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE trip (start_station_id VARCHAR, start_date VARCHAR, start_station_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "八月份出发次数最多的那个出发站的名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"八月\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE trip (start_station_id VARCHAR, start_date VARCHAR, start_station_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪辆自行车路线在邮政编码94002的地区旅行最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE trip (bike_id VARCHAR, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在邮政编码94002的地区中的旅行最多的自行车的ID是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE trip (bike_id VARCHAR, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少天平均湿度在50以上，平均能见度在8以上？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8"
      }
    ],
    "system": "CREATE TABLE weather (mean_humidity INTEGER, mean_visibility_miles INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均湿度超过50，平均能见度超过8天的天数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8"
      }
    ],
    "system": "CREATE TABLE weather (mean_humidity INTEGER, mean_visibility_miles INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最短的路线开始的车站是的纬度、经度、城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1"
      }
    ],
    "system": "CREATE TABLE station (long VARCHAR, lat VARCHAR, city VARCHAR, id VARCHAR), CREATE TABLE trip (duration VARCHAR, start_station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从什么纬度、经度和城市的车站开始的路线最短？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1"
      }
    ],
    "system": "CREATE TABLE station (long VARCHAR, lat VARCHAR, city VARCHAR, id VARCHAR), CREATE TABLE trip (duration VARCHAR, start_station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均自行车可用数在10以上的“厦门”的站台ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM station WHERE city  =  \"厦门\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, station_id VARCHAR, id VARCHAR, bikes_available INTEGER), CREATE TABLE status (city VARCHAR, station_id VARCHAR, id VARCHAR, bikes_available INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”通常有超过10辆可用自行车的车站ID有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM station WHERE city  =  \"厦门\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, station_id VARCHAR, id VARCHAR, bikes_available INTEGER), CREATE TABLE status (city VARCHAR, station_id VARCHAR, id VARCHAR, bikes_available INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均有14辆以上可用自行车或在12月份安装自行车的车站的名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"十二月\""
      }
    ],
    "system": "CREATE TABLE station (id VARCHAR, name VARCHAR, installation_date VARCHAR), CREATE TABLE status (station_id VARCHAR, bikes_available INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均有14辆以上可用自行车或在12月安装自行车的所有车站的名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"十二月\""
      }
    ],
    "system": "CREATE TABLE station (id VARCHAR, name VARCHAR, installation_date VARCHAR), CREATE TABLE status (station_id VARCHAR, bikes_available INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在邮政编码94107的地区，3种最常见的云覆盖率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE weather (cloud_cover VARCHAR, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "94107邮政编码地区中最常见的3种云覆盖是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE weather (cloud_cover VARCHAR, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均海平面气压最低的地区的邮编是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE weather (mean_sea_level_pressure_inches INTEGER, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均海平面气压最低的地区邮编是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE weather (mean_sea_level_pressure_inches INTEGER, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是位于“西安”市的车站里，自行车的平均可用数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"西安\")"
      }
    ],
    "system": "CREATE TABLE status (city VARCHAR, station_id VARCHAR, bikes_available INTEGER, id VARCHAR), CREATE TABLE station (city VARCHAR, station_id VARCHAR, bikes_available INTEGER, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不在“西安”市的车站的平均自行车可用率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(bikes_available) FROM status WHERE station_id NOT IN (SELECT id FROM station WHERE city  =  \"西安\")"
      }
    ],
    "system": "CREATE TABLE status (city VARCHAR, station_id VARCHAR, bikes_available INTEGER, id VARCHAR), CREATE TABLE station (city VARCHAR, station_id VARCHAR, bikes_available INTEGER, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从来没有超过10辆可用自行车的车站的平均经度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"
      }
    ],
    "system": "CREATE TABLE station (bikes_available INTEGER, station_id VARCHAR, id VARCHAR, long INTEGER), CREATE TABLE status (bikes_available INTEGER, station_id VARCHAR, id VARCHAR, long INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于从来没有超过10辆可用自行车的所有车站，它们的平均经度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(long) FROM station WHERE id NOT IN (SELECT station_id FROM status GROUP BY station_id HAVING max(bikes_available)  >  10)"
      }
    ],
    "system": "CREATE TABLE station (bikes_available INTEGER, station_id VARCHAR, id VARCHAR, long INTEGER), CREATE TABLE status (bikes_available INTEGER, station_id VARCHAR, id VARCHAR, long INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么时候，在什么邮政编码地区最大温度达到80？"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, max_temperature_f INTEGER, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么邮政编码地区有一个最高温度大于或等于80的车站，什么时候达到这个温度？"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  zip_code FROM weather WHERE max_temperature_f  >=  80"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, max_temperature_f INTEGER, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请给出平均温度高于60度的邮政编码区进行的所有路线的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60"
      }
    ],
    "system": "CREATE TABLE trip (zip_code VARCHAR, id VARCHAR), CREATE TABLE weather (mean_temperature_f INTEGER, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个邮政编码地区，找到所有具有平均温度在60以上的路线的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id FROM trip AS T1 JOIN weather AS T2 ON T1.zip_code  =  T2.zip_code GROUP BY T2.zip_code HAVING avg(T2.mean_temperature_f)  >  60"
      }
    ],
    "system": "CREATE TABLE trip (zip_code VARCHAR, id VARCHAR), CREATE TABLE weather (mean_temperature_f INTEGER, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个邮编地区，返回最大风速达到25的次数？"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, max_wind_Speed_mph INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个邮政编码地区，多少次最大风速达到25英里每小时？"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, max_wind_Speed_mph INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一天哪个地区的最小露点低于邮编94107地区中任何一天，这些地区的邮编是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, min_dew_point_f INTEGER, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些天的最低露点比邮政编码94107中的任何一天都要小，在哪个邮政编码地区中进行测量的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  zip_code FROM weather WHERE min_dew_point_f  <  (SELECT min(min_dew_point_f) FROM weather WHERE zip_code  =  94107)"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, min_dew_point_f INTEGER, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "针对每个路线，返回其终点站的安装日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id"
      }
    ],
    "system": "CREATE TABLE trip (end_station_id VARCHAR, id VARCHAR), CREATE TABLE station (id VARCHAR, installation_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个旅程的终点站的安装日期是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T2.installation_date FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id"
      }
    ],
    "system": "CREATE TABLE trip (end_station_id VARCHAR, id VARCHAR), CREATE TABLE station (id VARCHAR, installation_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一次旅行从码头数最多的车站开始？把旅行id给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE trip (start_station_id VARCHAR, id VARCHAR), CREATE TABLE station (id VARCHAR, dock_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从码头数最高的车站出发的旅行ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id FROM trip AS T1 JOIN station AS T2 ON T1.start_station_id  =  T2.id ORDER BY T2.dock_count DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE trip (start_station_id VARCHAR, id VARCHAR), CREATE TABLE station (id VARCHAR, dock_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计不是结束在“厦门”市的旅行的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  \"厦门\""
      }
    ],
    "system": "CREATE TABLE trip (end_station_id VARCHAR), CREATE TABLE station (city VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少次旅行没有结束在“厦门”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city != \"厦门\""
      }
    ],
    "system": "CREATE TABLE trip (end_station_id VARCHAR), CREATE TABLE station (city VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在邮政编码94107，在哪一天既没有“大雨”也没有观察到“大雾”？"
      },
      {
        "from": "assistant",
        "value": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"大雾\" AND EVENTS != \"大雨\""
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, EVENTS VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在94107的邮政编码哪一天既没有“大雨”也没有“大雾”？"
      },
      {
        "from": "assistant",
        "value": "SELECT date FROM weather WHERE zip_code  =  94107 AND EVENTS != \"大雾\" AND EVENTS != \"大雨\""
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, EVENTS VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些纬度在37.4以上、自行车可用率从来在7以下的车站的ID是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"
      }
    ],
    "system": "CREATE TABLE station (bikes_available INTEGER, station_id VARCHAR, id VARCHAR, lat INTEGER), CREATE TABLE status (bikes_available INTEGER, station_id VARCHAR, id VARCHAR, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有纬度在37.4以上、从来没有少于7辆可用自行车的车站的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7"
      }
    ],
    "system": "CREATE TABLE station (bikes_available INTEGER, station_id VARCHAR, id VARCHAR, lat INTEGER), CREATE TABLE status (bikes_available INTEGER, station_id VARCHAR, id VARCHAR, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些车站的平均自行车供应量超过10而且不位于'“长沙”‘市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"长沙\""
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, name VARCHAR, bikes_available INTEGER), CREATE TABLE status (station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过十辆自行车，而且不在'“长沙”‘的所有车站都叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"长沙\""
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, name VARCHAR, bikes_available INTEGER), CREATE TABLE status (station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最低纬度的车站的名称、纬度和城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, lat VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "位于最南边的火车站的名称、纬度和城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, lat VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大阵风速度最高的3天的日期、平均温度和平均湿度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE weather (mean_humidity VARCHAR, mean_temperature_f VARCHAR, max_gust_speed_mph VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "三个最大阵风速度的日子的日期、平均温度和平均湿度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  mean_temperature_f ,  mean_humidity FROM weather ORDER BY max_gust_speed_mph DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE weather (mean_humidity VARCHAR, mean_temperature_f VARCHAR, max_gust_speed_mph VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有至少有15个站点的城市的名称和站点数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个至少有15个车站的城市叫什么名字？有多少个车站？"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  COUNT(*) FROM station GROUP BY city HAVING COUNT(*)  >=  15"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找至少有200个路线开始的站的ID和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200"
      }
    ],
    "system": "CREATE TABLE trip (start_station_name VARCHAR, start_station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少是200个路线的出发站的车站的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200"
      }
    ],
    "system": "CREATE TABLE trip (start_station_name VARCHAR, start_station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到平均能见度低于10的地区的邮政编码。"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, mean_visibility_miles INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个邮政编码，选择那些平均可见度低于10的地区的邮政编码。"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_visibility_miles)  <  10"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, mean_visibility_miles INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照每个城市站点的最高纬度的递减顺序列出所有城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个城市，按其最高站点纬度降序排列，列出它们的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM station GROUP BY city ORDER BY max(lat) DESC"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, lat INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "前5的云覆盖率的日期是什么？并告诉我云的覆盖率。"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE weather (cloud_cover VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "前5高的云覆盖率的日期是什么，覆盖率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  cloud_cover FROM weather ORDER BY cloud_cover DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE weather (cloud_cover VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "前3的持续时间的路线的ID和持续时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE trip (duration VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "持续时间最长的路线ID是什么？路线时间多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT id ,  duration FROM trip ORDER BY duration DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE trip (duration VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个站点，返回其经度和从该站点开始的路线的平均持续时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id"
      }
    ],
    "system": "CREATE TABLE station (long VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE trip (start_station_id VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个起始站ID，它的名称、经度和在那里开始的路线的平均持续时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id"
      }
    ],
    "system": "CREATE TABLE station (long VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE trip (start_station_id VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个车站，找到它的纬度和在这个车站结束的路线的最小持续时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id"
      }
    ],
    "system": "CREATE TABLE station (lat VARCHAR, name VARCHAR, id VARCHAR), CREATE TABLE trip (end_station_id VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个终点站ID，它的名称、纬度和以此为终点站的路线的最短持续时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id"
      }
    ],
    "system": "CREATE TABLE station (lat VARCHAR, name VARCHAR, id VARCHAR), CREATE TABLE trip (end_station_id VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有持续时间低于100的路线的不同起始车站。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"
      }
    ],
    "system": "CREATE TABLE trip (start_station_name VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于持续时间不到100的路线，不同的起点站名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT start_station_name FROM trip WHERE duration  <  100"
      }
    ],
    "system": "CREATE TABLE trip (start_station_name VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有最大露点从未达到70的邮政编码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, max_dew_point_f INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些地区的最大露点总是低于70，这些地区的不同邮编是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT zip_code FROM weather EXCEPT SELECT DISTINCT zip_code FROM weather WHERE max_dew_point_f  >=  70"
      }
    ],
    "system": "CREATE TABLE weather (zip_code VARCHAR, max_dew_point_f INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在邮政编码94103地区中，查找至少与路线平均持续时间一样长的路线的id。"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)"
      }
    ],
    "system": "CREATE TABLE trip (zip_code VARCHAR, id VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "邮政编码94103地区中持续时间和平均旅行持续时间一样长的所有路线的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)"
      }
    ],
    "system": "CREATE TABLE trip (zip_code VARCHAR, id VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均海平面气压在30.3到31之间的日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31"
      }
    ],
    "system": "CREATE TABLE weather (mean_sea_level_pressure_inches INTEGER, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些日子的平均海平面气压在30.3到31之间？"
      },
      {
        "from": "assistant",
        "value": "SELECT date FROM weather WHERE mean_sea_level_pressure_inches BETWEEN 30.3 AND 31"
      }
    ],
    "system": "CREATE TABLE weather (mean_sea_level_pressure_inches INTEGER, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最大温度与最小温度之差最小的一天。并报告差异。"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1"
      }
    ],
    "system": "CREATE TABLE weather (max_temperature_f VARCHAR, min_temperature_f VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些天具有最小的温度范围，那个范围是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  max_temperature_f - min_temperature_f FROM weather ORDER BY max_temperature_f - min_temperature_f LIMIT 1"
      }
    ],
    "system": "CREATE TABLE weather (max_temperature_f VARCHAR, min_temperature_f VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过12辆可用自行车的车站的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12"
      }
    ],
    "system": "CREATE TABLE station (name VARCHAR, id VARCHAR), CREATE TABLE status (station_id VARCHAR, bikes_available INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过12辆可用自行车的车站有哪些不同的ID和名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12"
      }
    ],
    "system": "CREATE TABLE station (name VARCHAR, id VARCHAR), CREATE TABLE status (station_id VARCHAR, bikes_available INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我平均湿度低于70，至少有100个路线的地区邮编。"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100"
      }
    ],
    "system": "CREATE TABLE weather (mean_humidity INTEGER, zip_code VARCHAR), CREATE TABLE trip (mean_humidity INTEGER, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均湿度低于70并且至少有100次旅行的邮政编码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100"
      }
    ],
    "system": "CREATE TABLE weather (mean_humidity INTEGER, zip_code VARCHAR), CREATE TABLE trip (mean_humidity INTEGER, zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "位于“西安”市但没能成为100次以上路线的终点的车站叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM station WHERE city  =  \"西安\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, name VARCHAR, end_station_name VARCHAR), CREATE TABLE trip (city VARCHAR, name VARCHAR, end_station_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "位于“西安”但从未成为路线终点的车站叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM station WHERE city  =  \"西安\" EXCEPT SELECT end_station_name FROM trip GROUP BY end_station_name HAVING count(*)  >  100"
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, name VARCHAR, end_station_name VARCHAR), CREATE TABLE trip (city VARCHAR, name VARCHAR, end_station_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“重庆”出发到“西安”有多少路线？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"重庆\" AND T3.city  =  \"西安\""
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, id VARCHAR), CREATE TABLE trip (end_station_id VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“重庆”的一个车站到“西安”的一个车站，总共有多少次旅行？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"重庆\" AND T3.city  =  \"西安\""
      }
    ],
    "system": "CREATE TABLE station (city VARCHAR, id VARCHAR), CREATE TABLE trip (end_station_id VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有路线起点的平均纬度和经度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id"
      }
    ],
    "system": "CREATE TABLE station (id VARCHAR, long INTEGER, lat INTEGER), CREATE TABLE trip (start_station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有出发站的平均纬度和经度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.lat) ,  avg(T1.long) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id"
      }
    ],
    "system": "CREATE TABLE station (id VARCHAR, long INTEGER, lat INTEGER), CREATE TABLE trip (start_station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少本书？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM book"
      }
    ],
    "system": "CREATE TABLE book (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出书的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Writer FROM book ORDER BY Writer ASC"
      }
    ],
    "system": "CREATE TABLE book (Writer VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按出版升序排列，列出书名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Title FROM book ORDER BY Issues ASC"
      }
    ],
    "system": "CREATE TABLE book (Issues VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者不是“钱钟书”的书名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Title FROM book WHERE Writer != \"钱钟书\""
      }
    ],
    "system": "CREATE TABLE book (Writer VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "书的题目和出版是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Title ,  Issues FROM book"
      }
    ],
    "system": "CREATE TABLE book (Issues VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按价格降序排列的出版物日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Publication_Date FROM publication ORDER BY Price DESC"
      }
    ],
    "system": "CREATE TABLE publication (Price VARCHAR, Publication_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些不同出版商有格高于5000000的出版物？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Publisher FROM publication WHERE Price  >  5000000"
      }
    ],
    "system": "CREATE TABLE publication (Price INTEGER, Publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出出版物价格最高的出版商。"
      },
      {
        "from": "assistant",
        "value": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE publication (Price VARCHAR, Publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出3个最低价格的出版物的出版日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE publication (Price VARCHAR, Publication_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示图书的书名和出版日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID"
      }
    ],
    "system": "CREATE TABLE book (Book_ID VARCHAR, Title VARCHAR), CREATE TABLE publication (Book_ID VARCHAR, Publication_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示已经出版的一本价格超过4000000的书的作家。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000"
      }
    ],
    "system": "CREATE TABLE book (Book_ID VARCHAR, Writer VARCHAR), CREATE TABLE publication (Book_ID VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按出版物价格的顺序显示书名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Price DESC"
      }
    ],
    "system": "CREATE TABLE book (Book_ID VARCHAR, Title VARCHAR), CREATE TABLE publication (Book_ID VARCHAR, Price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有不止一个出版物的出版商。"
      },
      {
        "from": "assistant",
        "value": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE publication (Publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示不同的出版商以及他们出版的出版物数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Publisher ,  COUNT(*) FROM publication GROUP BY Publisher"
      }
    ],
    "system": "CREATE TABLE publication (Publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示最常见的出版日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE publication (Publication_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出那些写过不止一本书的作家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE book (Writer VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出未出版的书名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Title FROM book WHERE Book_ID NOT IN (SELECT Book_ID FROM publication)"
      }
    ],
    "system": "CREATE TABLE book (Book_ID VARCHAR, Title VARCHAR), CREATE TABLE publication (Book_ID VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示价格高于10000000和价格低于50000000的出版物的出版商。"
      },
      {
        "from": "assistant",
        "value": "SELECT Publisher FROM publication WHERE Price  >  10000000 INTERSECT SELECT Publisher FROM publication WHERE Price  <  5000000"
      }
    ],
    "system": "CREATE TABLE publication (Price INTEGER, Publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同出版日期的出版物数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"
      }
    ],
    "system": "CREATE TABLE publication (Publication_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们的记录中有多少种不同的出版日期？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT Publication_Date) FROM publication"
      }
    ],
    "system": "CREATE TABLE publication (Publication_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示出版商是“文学”或“机械”的出版物价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT Price FROM publication WHERE Publisher  =  \"文学\" OR Publisher  =  \"机械\""
      }
    ],
    "system": "CREATE TABLE publication (Price VARCHAR, Publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那儿有多少演员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM actor"
      }
    ],
    "system": "CREATE TABLE actor (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计演员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM actor"
      }
    ],
    "system": "CREATE TABLE actor (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照升序字母顺序列出演员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM actor ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE actor (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演员的名字是什么，按字母顺序排列？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM actor ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE actor (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演员的角色和持续时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Character ,  Duration FROM actor"
      }
    ],
    "system": "CREATE TABLE actor (Character VARCHAR, Duration VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个演员的角色和持续时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT Character ,  Duration FROM actor"
      }
    ],
    "system": "CREATE TABLE actor (Character VARCHAR, Duration VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出年龄不是20岁的演员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM actor WHERE Age != 20"
      }
    ],
    "system": "CREATE TABLE actor (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是20岁的演员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM actor WHERE Age != 20"
      }
    ],
    "system": "CREATE TABLE actor (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照年龄降序，演员的角色是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Character FROM actor ORDER BY age DESC"
      }
    ],
    "system": "CREATE TABLE actor (age VARCHAR, Character VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回演员的角色，按年龄降序排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT Character FROM actor ORDER BY age DESC"
      }
    ],
    "system": "CREATE TABLE actor (age VARCHAR, Character VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最老演员的持续时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE actor (Age VARCHAR, Duration VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最大年龄的演员的持续时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE actor (Age VARCHAR, Duration VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提名“梁朝伟”的音乐剧名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM musical WHERE Nominee  =  \"梁朝伟\""
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回有提名“梁朝伟”的音乐剧名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM musical WHERE Nominee  =  \"梁朝伟\""
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "除了“金鸡奖”之外，还有哪些音乐剧的不同提名呢？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"金鸡奖\""
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR, Award VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回奖项不是“金鸡奖”的音乐剧的不同提名。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"金鸡奖\""
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR, Award VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示演员姓名和音乐剧名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID"
      }
    ],
    "system": "CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR), CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演员和他们出演的音乐剧的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID"
      }
    ],
    "system": "CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR), CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示以“歌剧魅影”为名字的音乐剧中的演员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"歌剧魅影\""
      }
    ],
    "system": "CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR), CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "音乐剧“歌剧魅影”的演员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"歌剧魅影\""
      }
    ],
    "system": "CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR), CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以出演的音乐剧获奖的年份降序排列，显示演员姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC"
      }
    ],
    "system": "CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR), CREATE TABLE musical (Musical_ID VARCHAR, Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按出演的音乐剧获奖年份降序排列，演员姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC"
      }
    ],
    "system": "CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR), CREATE TABLE musical (Musical_ID VARCHAR, Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示音乐剧的名称和在音乐剧中出现的演员的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID"
      }
    ],
    "system": "CREATE TABLE actor (Musical_ID VARCHAR), CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个音乐剧中有多少演员？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID"
      }
    ],
    "system": "CREATE TABLE actor (Musical_ID VARCHAR), CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有三个演员的音乐剧名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE actor (Musical_ID VARCHAR), CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有3个或更多演员的音乐剧名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE actor (Musical_ID VARCHAR), CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的被提名者和他们提名的音乐剧的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee"
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个被提名者有多少音乐剧被提名？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee ,  COUNT(*) FROM musical GROUP BY Nominee"
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示被提名次数最多的被提名者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是被提名音乐剧最多的的被提名人？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出音乐剧最常见的结局。"
      },
      {
        "from": "assistant",
        "value": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE musical (RESULT VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有音乐剧中最常见的结局。"
      },
      {
        "from": "assistant",
        "value": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE musical (RESULT VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出被提名超过两部音乐剧的被提名者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被提名超过两次的被提名者是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有演员的音乐剧名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"
      }
    ],
    "system": "CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR), CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有演员的音乐剧名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM musical WHERE Musical_ID NOT IN (SELECT Musical_ID FROM actor)"
      }
    ],
    "system": "CREATE TABLE musical (Name VARCHAR, Musical_ID VARCHAR), CREATE TABLE actor (Name VARCHAR, Musical_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示被提名“金鸡奖”和“金马奖”的被提名人。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee FROM musical WHERE Award  =  \"金鸡奖\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"金马奖\""
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR, Award VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁被提名过“金鸡奖”和“金马奖”？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee FROM musical WHERE Award  =  \"金鸡奖\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"金马奖\""
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR, Award VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示获得“金鸡奖”或“金像奖”奖的被提名音乐人。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee FROM musical WHERE Award  =  \"金鸡奖\" OR Award  =  \"金像奖\""
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR, Award VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁被提名过“金鸡奖”或“金像奖”奖项？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nominee FROM musical WHERE Award  =  \"金鸡奖\" OR Award  =  \"金像奖\""
      }
    ],
    "system": "CREATE TABLE musical (Nominee VARCHAR, Award VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到名为“马丽”的用户的电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT email FROM user_profiles WHERE name  =  '马丽'"
      }
    ],
    "system": "CREATE TABLE user_profiles (email VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“钢铁侠”的用户的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT partitionid FROM user_profiles WHERE name  =  '钢铁侠'"
      }
    ],
    "system": "CREATE TABLE user_profiles (name VARCHAR, partitionid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少用户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM user_profiles"
      }
    ],
    "system": "CREATE TABLE user_profiles (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个用户有多少追随者？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM follows"
      }
    ],
    "system": "CREATE TABLE follows (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个用户的追随者数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM follows GROUP BY f1"
      }
    ],
    "system": "CREATE TABLE follows (f1 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在记录中找到推文的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM tweets"
      }
    ],
    "system": "CREATE TABLE tweets (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找发布了的推文的用户的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT UID) FROM tweets"
      }
    ],
    "system": "CREATE TABLE tweets (UID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出用户名字中含有“往事随风”的人的名字和电子邮箱。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  email FROM user_profiles WHERE name LIKE '往事随风'"
      }
    ],
    "system": "CREATE TABLE user_profiles (email VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出电子邮箱中中含有“superstar”或是“edu”的用户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM user_profiles WHERE email LIKE '巨星' OR email LIKE 'qq'"
      }
    ],
    "system": "CREATE TABLE user_profiles (email VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回关于“实习”主题的推文。"
      },
      {
        "from": "assistant",
        "value": "SELECT text FROM tweets WHERE text LIKE '实习'"
      }
    ],
    "system": "CREATE TABLE tweets (text VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找拥有超过1000个追随者的用户的姓名和电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  email FROM user_profiles WHERE followers  >  1000"
      }
    ],
    "system": "CREATE TABLE user_profiles (email VARCHAR, name VARCHAR, followers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找追随者数量大于名为“蔡依林”的用户的用户名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  (SELECT count(*) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 WHERE T1.name  =  '蔡依林')"
      }
    ],
    "system": "CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR), CREATE TABLE follows (f1 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找有不止一个跟随者的用户的姓名和电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE user_profiles (email VARCHAR, name VARCHAR, uid VARCHAR), CREATE TABLE follows (f1 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找拥有不止一条推特的用户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR), CREATE TABLE tweets (uid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到被“马丽”和“苏晴”跟随的用户的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"马丽\" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"苏晴\""
      }
    ],
    "system": "CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR), CREATE TABLE follows (f1 VARCHAR, f2 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“马丽”或“苏晴”共同追随的用户的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"马丽\" OR T1.name  =  \"苏晴\""
      }
    ],
    "system": "CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR), CREATE TABLE follows (f1 VARCHAR, f2 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找有最多追随者的用户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE user_profiles (followers VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有最少追随者的用户的名字和电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  email FROM user_profiles ORDER BY followers LIMIT 1"
      }
    ],
    "system": "CREATE TABLE user_profiles (email VARCHAR, followers VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按跟随者数量的降序进行排序，列出每个用户的名称和追随者数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  followers FROM user_profiles ORDER BY followers DESC"
      }
    ],
    "system": "CREATE TABLE user_profiles (followers VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出拥有追随者的最多的前5个用户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE user_profiles (followers VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按日期顺序列出所有推文的文本。"
      },
      {
        "from": "assistant",
        "value": "SELECT text FROM tweets ORDER BY createdate"
      }
    ],
    "system": "CREATE TABLE tweets (createdate VARCHAR, text VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个用户的名字和推特的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid"
      }
    ],
    "system": "CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR), CREATE TABLE tweets (uid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找发了不到两次推特的用户的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2"
      }
    ],
    "system": "CREATE TABLE user_profiles (partitionid VARCHAR, name VARCHAR, uid VARCHAR), CREATE TABLE tweets (uid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不止一次发推特的用户的姓名，以及他们发推特的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE user_profiles (name VARCHAR, uid VARCHAR), CREATE TABLE tweets (uid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有任何推特的用户的平均追随者数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)"
      }
    ],
    "system": "CREATE TABLE user_profiles (followers INTEGER, UID VARCHAR), CREATE TABLE tweets (followers INTEGER, UID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找有一些推文的用户的平均追随者数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)"
      }
    ],
    "system": "CREATE TABLE user_profiles (followers INTEGER, UID VARCHAR), CREATE TABLE tweets (followers INTEGER, UID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有用户的追随者的最大数量和总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(followers) ,  sum(followers) FROM user_profiles"
      }
    ],
    "system": "CREATE TABLE user_profiles (followers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有目录项的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(catalog_entry_name) FROM catalog_contents"
      }
    ],
    "system": "CREATE TABLE catalog_contents (catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有目录项名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(catalog_entry_name) FROM catalog_contents"
      }
    ],
    "system": "CREATE TABLE catalog_contents (catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找拥有多于3个属性定义的属性数据类型的列表。"
      },
      {
        "from": "assistant",
        "value": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE Attribute_Definitions (attribute_data_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些属性数据类型有超过3个属性定义？"
      },
      {
        "from": "assistant",
        "value": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE Attribute_Definitions (attribute_data_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "属性名为“绿色”的属性数据类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"绿色\""
      }
    ],
    "system": "CREATE TABLE Attribute_Definitions (attribute_name VARCHAR, attribute_data_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找属性名为“绿色”的属性数据类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"绿色\""
      }
    ],
    "system": "CREATE TABLE Attribute_Definitions (attribute_name VARCHAR, attribute_data_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找级别在5到10之间的目录结构的名称和级别。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"
      }
    ],
    "system": "CREATE TABLE Catalog_Structure (catalog_level_name VARCHAR, catalog_level_number INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "级别在5到10之间的目录结构的名称和级别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_level_name ,  catalog_level_number FROM Catalog_Structure WHERE catalog_level_number BETWEEN 5 AND 10"
      }
    ],
    "system": "CREATE TABLE Catalog_Structure (catalog_level_name VARCHAR, catalog_level_number INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有名字包含“小刚”的目录出版商。"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"小刚\""
      }
    ],
    "system": "CREATE TABLE catalogs (catalog_publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些目录出版商的名字内包含\"小刚\"这个子串？"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"小刚\""
      }
    ],
    "system": "CREATE TABLE catalogs (catalog_publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个目录出版商出版了最多的目录？"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalogs (catalog_publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找目录最多的目录出版商。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalogs (catalog_publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找目录级别号大于5的所有目录的名称和发布日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5"
      }
    ],
    "system": "CREATE TABLE catalogs (date_of_publication VARCHAR, catalog_id VARCHAR, catalog_name VARCHAR), CREATE TABLE catalog_structure (catalog_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "级别号在5以上的目录的名称和发布日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5"
      }
    ],
    "system": "CREATE TABLE catalogs (date_of_publication VARCHAR, catalog_id VARCHAR, catalog_name VARCHAR), CREATE TABLE catalog_structure (catalog_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有最多条目所具有的属性所属的目录的条目名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE Catalog_Contents (catalog_entry_id VARCHAR, catalog_entry_name VARCHAR), CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_value VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有最多条目的属性所属的目录的条目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE Catalog_Contents (catalog_entry_id VARCHAR, catalog_entry_name VARCHAR), CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_value VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最贵的目录（美元）的条目名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalog_contents (price_in_dollars VARCHAR, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以最高价格（美元）查找目录的条目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalog_contents (price_in_dollars VARCHAR, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最便宜的目录（美元）的级别名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalog_contents (catalog_level_number VARCHAR, price_in_dollars VARCHAR), CREATE TABLE catalog_structure (catalog_level_name VARCHAR, catalog_level_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找价格最低的（美元）目录的级别名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.catalog_level_name FROM catalog_contents AS t1 JOIN catalog_structure AS t2 ON t1.catalog_level_number  =  t2.catalog_level_number ORDER BY t1.price_in_dollars LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalog_contents (catalog_level_number VARCHAR, price_in_dollars VARCHAR), CREATE TABLE catalog_structure (catalog_level_name VARCHAR, catalog_level_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有产品的平均价格和最低价格（欧元）是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents"
      }
    ],
    "system": "CREATE TABLE catalog_contents (price_in_euros INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我产品的平均价格和最低价格（欧元）。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents"
      }
    ],
    "system": "CREATE TABLE catalog_contents (price_in_euros INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高的产品是什么？给我目录条目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalog_contents (height VARCHAR, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个目录内容最高？给我目录条目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalog_contents (height VARCHAR, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出容量最小的产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalog_contents (capacity VARCHAR, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个目录内容的容量最小？返回目录条目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE catalog_contents (capacity VARCHAR, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有产品的名称，其库存号以“2”开头。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2\""
      }
    ],
    "system": "CREATE TABLE catalog_contents (product_stock_number VARCHAR, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些目录内容有从“2”开始的产品库存号？显示目录项名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents WHERE product_stock_number LIKE \"2\""
      }
    ],
    "system": "CREATE TABLE catalog_contents (product_stock_number VARCHAR, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找级别为“8”的目录条目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\""
      }
    ],
    "system": "CREATE TABLE Catalog_Contents (catalog_entry_id VARCHAR, catalog_entry_name VARCHAR), CREATE TABLE Catalog_Contents_Additional_Attributes (catalog_level_number VARCHAR, catalog_entry_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "级别为“8”的目录条目名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\""
      }
    ],
    "system": "CREATE TABLE Catalog_Contents (catalog_entry_id VARCHAR, catalog_entry_name VARCHAR), CREATE TABLE Catalog_Contents_Additional_Attributes (catalog_level_number VARCHAR, catalog_entry_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找长度小于3或高度大于5的产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5"
      }
    ],
    "system": "CREATE TABLE catalog_contents (width INTEGER, LENGTH INTEGER, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些目录内容的长度低于3或大于5？查找目录条目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5"
      }
    ],
    "system": "CREATE TABLE catalog_contents (width INTEGER, LENGTH INTEGER, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到属性值为0的属性定义的名称和属性ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"
      }
    ],
    "system": "CREATE TABLE Attribute_Definitions (attribute_name VARCHAR, attribute_id VARCHAR), CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_value VARCHAR, attribute_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些属性定义具有属性值0？给我属性名和属性ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0"
      }
    ],
    "system": "CREATE TABLE Attribute_Definitions (attribute_name VARCHAR, attribute_id VARCHAR), CREATE TABLE Catalog_Contents_Additional_Attributes (attribute_value VARCHAR, attribute_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找价格大于700（美元）的产品名称和容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700"
      }
    ],
    "system": "CREATE TABLE Catalog_Contents (capacity VARCHAR, catalog_entry_name VARCHAR, price_in_dollars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些目录内容的价格超过700美元？显示他们的目录条目名称和容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700"
      }
    ],
    "system": "CREATE TABLE Catalog_Contents (capacity VARCHAR, catalog_entry_name VARCHAR, price_in_dollars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出修订超过一次的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE Catalogs (date_of_latest_revision VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在哪几天内对目录进行了一次以上的修改。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE Catalogs (date_of_latest_revision VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "记录中有多少种产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM catalog_contents"
      }
    ],
    "system": "CREATE TABLE catalog_contents (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找目录内容的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM catalog_contents"
      }
    ],
    "system": "CREATE TABLE catalog_contents (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到下一个条目ID大于8的所有产品的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8"
      }
    ],
    "system": "CREATE TABLE catalog_contents (next_entry_id INTEGER, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "下一个条目ID在8以上的产品的目录条目名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT catalog_entry_name FROM catalog_contents WHERE next_entry_id  >  8"
      }
    ],
    "system": "CREATE TABLE catalog_contents (next_entry_id INTEGER, catalog_entry_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少架飞机？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Aircraft"
      }
    ],
    "system": "CREATE TABLE Aircraft (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数据库中有多少飞机？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Aircraft"
      }
    ],
    "system": "CREATE TABLE Aircraft (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有飞机的名称和距离。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  distance FROM Aircraft"
      }
    ],
    "system": "CREATE TABLE Aircraft (distance VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有飞机的名称和距离是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  distance FROM Aircraft"
      }
    ],
    "system": "CREATE TABLE Aircraft (distance VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有距离超过1000的飞机的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT aid FROM Aircraft WHERE distance  >  1000"
      }
    ],
    "system": "CREATE TABLE Aircraft (aid VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "能覆盖超过1000距离的所有飞行器的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT aid FROM Aircraft WHERE distance  >  1000"
      }
    ],
    "system": "CREATE TABLE Aircraft (aid VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少架飞机有1000到5000的距离？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000"
      }
    ],
    "system": "CREATE TABLE Aircraft (distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "距离在1000到5000之间的飞机的有多少台？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Aircraft WHERE distance BETWEEN 1000 AND 5000"
      }
    ],
    "system": "CREATE TABLE Aircraft (distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID是12的飞机的名称和距离是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12"
      }
    ],
    "system": "CREATE TABLE Aircraft (aid VARCHAR, distance VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID是12的飞机的名称和距离是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  distance FROM Aircraft WHERE aid  =  12"
      }
    ],
    "system": "CREATE TABLE Aircraft (aid VARCHAR, distance VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有飞机的最小、平均和最大距离是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft"
      }
    ],
    "system": "CREATE TABLE Aircraft (distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有飞行器的最小、平均和最大距离。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(distance) ,  avg(distance) ,  max(distance) FROM Aircraft"
      }
    ],
    "system": "CREATE TABLE Aircraft (distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最大距离的飞机的ID和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Aircraft (aid VARCHAR, distance VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可以覆盖最大距离的飞机的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Aircraft (aid VARCHAR, distance VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示前三个最低距离的飞机的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Aircraft (distance VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最短距离前3的飞机是什么？列出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Aircraft ORDER BY distance LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Aircraft (distance VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有飞机的名称，其距离超过平均值。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)"
      }
    ],
    "system": "CREATE TABLE Aircraft (name VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有能覆盖平均距离的飞机的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Aircraft WHERE distance  >  (SELECT avg(distance) FROM Aircraft)"
      }
    ],
    "system": "CREATE TABLE Aircraft (name VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Employee"
      }
    ],
    "system": "CREATE TABLE Employee (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Employee"
      }
    ],
    "system": "CREATE TABLE Employee (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "为所有员工按薪资排序，并显示姓名和薪金。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  salary FROM Employee ORDER BY salary"
      }
    ],
    "system": "CREATE TABLE Employee (name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有员工的姓名和薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  salary FROM Employee ORDER BY salary"
      }
    ],
    "system": "CREATE TABLE Employee (name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有工资至少有100000的工资员工。"
      },
      {
        "from": "assistant",
        "value": "SELECT eid FROM Employee WHERE salary  >  100000"
      }
    ],
    "system": "CREATE TABLE Employee (salary INTEGER, eid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个工资至少有100000的员工的ID是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT eid FROM Employee WHERE salary  >  100000"
      }
    ],
    "system": "CREATE TABLE Employee (salary INTEGER, eid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "薪水在100000到200000的员工有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000"
      }
    ],
    "system": "CREATE TABLE Employee (salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工工资在100000到200000的人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Employee WHERE salary BETWEEN 100000 AND 200000"
      }
    ],
    "system": "CREATE TABLE Employee (salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID为242518965的员工的姓名和薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID242518965的雇员的姓名和薪金是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有员工的平均工资和最高工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(salary) ,  max(salary) FROM Employee"
      }
    ],
    "system": "CREATE TABLE Employee (salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有员工的平均工资和最高工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(salary) ,  max(salary) FROM Employee"
      }
    ],
    "system": "CREATE TABLE Employee (salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示平均工资最高的员工的ID和姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "工资最高的员工的ID和姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT eid ,  name FROM Employee ORDER BY salary DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示工资最低的三名员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Employee (name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪3个员工的薪水最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Employee (name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有薪水高于平均水平的员工。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)"
      }
    ],
    "system": "CREATE TABLE Employee (salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "工资高于平均水平的所有员工的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)"
      }
    ],
    "system": "CREATE TABLE Employee (salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“张晓梅”的ID和薪水。"
      },
      {
        "from": "assistant",
        "value": "SELECT eid ,  salary FROM Employee WHERE name  =  '张晓梅'"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个叫“张晓梅”的员工的ID和薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT eid ,  salary FROM Employee WHERE name  =  '张晓梅'"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少班次？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Flight"
      }
    ],
    "system": "CREATE TABLE Flight (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "航班的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Flight"
      }
    ],
    "system": "CREATE TABLE Flight (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照起飞城市的字母顺序显示所有航班的航班号、起点、目的地。"
      },
      {
        "from": "assistant",
        "value": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin"
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR, flno VARCHAR, destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按起飞城市的字母顺序排列的所有航班的航班号、起点和目的地是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT flno ,  origin ,  destination FROM Flight ORDER BY origin"
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR, flno VARCHAR, destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有从“上海”起飞的航班号。"
      },
      {
        "from": "assistant",
        "value": "SELECT flno FROM Flight WHERE origin  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR, flno VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“上海”来的所有航班的号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT flno FROM Flight WHERE origin  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR, flno VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有以“海口”为目的地航班的出发地。"
      },
      {
        "from": "assistant",
        "value": "SELECT origin FROM Flight WHERE destination  =  \"海口\""
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR, destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "飞往“海口”的所有航班的出发地是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT origin FROM Flight WHERE destination  =  \"海口\""
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR, destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "告诉我从“上海”到“海口”的所有航班的出发日期和到达日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"上海\" AND destination  =  \"海口\""
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR, destination VARCHAR, arrival_date VARCHAR, departure_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“上海”到“海口”的所有航班的起飞和到达日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"上海\" AND destination  =  \"海口\""
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR, destination VARCHAR, arrival_date VARCHAR, departure_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示超过2000距离的所有航班的航班号。"
      },
      {
        "from": "assistant",
        "value": "SELECT flno FROM Flight WHERE distance  >  2000"
      }
    ],
    "system": "CREATE TABLE Flight (flno VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "能覆盖超过2000的距离的所有航班的号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT flno FROM Flight WHERE distance  >  2000"
      }
    ],
    "system": "CREATE TABLE Flight (flno VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“上海”到“海口”的航班平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM Flight WHERE origin  =  \"上海\" AND destination  =  \"海口\""
      }
    ],
    "system": "CREATE TABLE Flight (price INTEGER, origin VARCHAR, destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“上海”到“海口”的航班平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM Flight WHERE origin  =  \"上海\" AND destination  =  \"海口\""
      }
    ],
    "system": "CREATE TABLE Flight (price INTEGER, origin VARCHAR, destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示价格高于300的航班的出发地和目的地。"
      },
      {
        "from": "assistant",
        "value": "SELECT origin ,  destination FROM Flight WHERE price  >  300"
      }
    ],
    "system": "CREATE TABLE Flight (price INTEGER, origin VARCHAR, destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "价格高于300的航班的起点和目的地是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT origin ,  destination FROM Flight WHERE price  >  300"
      }
    ],
    "system": "CREATE TABLE Flight (price INTEGER, origin VARCHAR, destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最高价航班的航班号和飞行距离。"
      },
      {
        "from": "assistant",
        "value": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Flight (distance VARCHAR, flno VARCHAR, price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高价航班的航班号和距离是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT flno ,  distance FROM Flight ORDER BY price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Flight (distance VARCHAR, flno VARCHAR, price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示三个最低距离的航班号。"
      },
      {
        "from": "assistant",
        "value": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Flight (distance VARCHAR, flno VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最短航班的号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Flight (distance VARCHAR, flno VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“上海”起飞的航班的平均距离和平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE Flight (price INTEGER, origin VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“上海”起飞的所有航班的平均距离和价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(distance) ,  avg(price) FROM Flight WHERE origin  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE Flight (price INTEGER, origin VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有出发地和每个出发地的航班的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT origin ,  count(*) FROM Flight GROUP BY origin"
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个出发地，有多少航班来自那里？"
      },
      {
        "from": "assistant",
        "value": "SELECT origin ,  count(*) FROM Flight GROUP BY origin"
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有目的地和飞往每个目的地的航班数。"
      },
      {
        "from": "assistant",
        "value": "SELECT destination ,  count(*) FROM Flight GROUP BY destination"
      }
    ],
    "system": "CREATE TABLE Flight (destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "目的地有哪些？飞往每个目的地的航班数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT destination ,  count(*) FROM Flight GROUP BY destination"
      }
    ],
    "system": "CREATE TABLE Flight (destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个出发地的航班最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从哪里来的航班最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Flight (origin VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个目的地的航班最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Flight (destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个目的地的航班最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Flight (destination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "99号航班的飞机名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99"
      }
    ],
    "system": "CREATE TABLE Flight (aid VARCHAR, flno VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "99号班机叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99"
      }
    ],
    "system": "CREATE TABLE Flight (aid VARCHAR, flno VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示使用“空客”飞机的所有航班号。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"空客\""
      }
    ],
    "system": "CREATE TABLE Flight (aid VARCHAR, flno VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“空客”飞机的航班号是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"空客\""
      }
    ],
    "system": "CREATE TABLE Flight (aid VARCHAR, flno VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每架飞机的飞机名称和航班号。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid"
      }
    ],
    "system": "CREATE TABLE Flight (aid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每架飞机的名字是什么，每个飞机有多少个航班？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  count(*) FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid"
      }
    ],
    "system": "CREATE TABLE Flight (aid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两个航班的所有飞机的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2"
      }
    ],
    "system": "CREATE TABLE Flight (aid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有2个航班的所有飞机的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid GROUP BY T1.aid HAVING count(*)  >= 2"
      }
    ],
    "system": "CREATE TABLE Flight (aid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少员工有证书？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT eid) FROM Certificate"
      }
    ],
    "system": "CREATE TABLE Certificate (eid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有证书的不同雇员的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT eid) FROM Certificate"
      }
    ],
    "system": "CREATE TABLE Certificate (eid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有没有证书的员工ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR), CREATE TABLE Certificate (eid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有证书的所有员工的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR), CREATE TABLE Certificate (eid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“赵强”所拥有证件的所有飞机名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"赵强\""
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“赵强”有驾驶执照的所有飞机的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"赵强\""
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有拥有“波音 733-800”证书的员工姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"波音\""
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有持有“波音”飞行证书的员工的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"波音\""
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有拥有“波音”和“空客”证书的员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"波音\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"空客\""
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有能同时驾驶“波音”和“空客”的员工的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"波音\" INTERSECT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"空客\""
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有没有“波音 733-800”证书的员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"波音\""
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有未获得驾驶“波音”认证的雇员的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"波音\""
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最少人拥有的飞机证书名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Certificate (aid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被认证最少的飞机名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Certificate (aid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示距离超过5000并且至少有5人拥有其证书的飞机的名称和距离。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"
      }
    ],
    "system": "CREATE TABLE Certificate (aid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "能飞5000距离、至少5人能飞的飞机的名字和距离是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5"
      }
    ],
    "system": "CREATE TABLE Certificate (aid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, name VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "持有飞机证件最多的员工的工资和姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR), CREATE TABLE Certificate (eid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多飞机证件的员工的薪资和姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR, salary VARCHAR), CREATE TABLE Certificate (eid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "持有最多的距离超过5000的飞机证书的员工的工资和姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "持有距离超过5000飞机证书最多的员工的工资和姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employee (eid VARCHAR, name VARCHAR), CREATE TABLE Certificate (aid VARCHAR, eid VARCHAR), CREATE TABLE Aircraft (aid VARCHAR, distance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少过敏反应？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT allergy) FROM Allergy_type"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少过敏项目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT allergy) FROM Allergy_type"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的过敏反应类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT allergytype) FROM Allergy_type"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的过敏反应？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT allergytype) FROM Allergy_type"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有过敏类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT allergytype FROM Allergy_type"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "过敏的类型有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT allergytype FROM Allergy_type"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有过敏和他们的类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT allergy ,  allergytype FROM Allergy_type"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "过敏和它们的类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT allergy ,  allergytype FROM Allergy_type"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有类型的“食物”过敏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"食物\""
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有不同的“食物\"过敏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT allergy FROM Allergy_type WHERE allergytype  =  \"食物\""
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "过敏原是\"猫”的过敏类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"猫\""
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“猫”过敏是什么类型的？"
      },
      {
        "from": "assistant",
        "value": "SELECT allergytype FROM Allergy_type WHERE allergy  =  \"猫\""
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少“动物”过敏反应？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"动物\""
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种“动物”过敏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Allergy_type WHERE allergytype  =  \"动物\""
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有过敏类型和每种类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "过敏类型有哪些？每种类型有多少种过敏反应？"
      },
      {
        "from": "assistant",
        "value": "SELECT allergytype ,  count(*) FROM Allergy_type GROUP BY allergytype"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种过敏类型有最多的过敏反应？"
      },
      {
        "from": "assistant",
        "value": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种过敏反应类型最常见？"
      },
      {
        "from": "assistant",
        "value": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种过敏类型有最少的过敏反应？"
      },
      {
        "from": "assistant",
        "value": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种过敏类型最不常见？"
      },
      {
        "from": "assistant",
        "value": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Allergy_type (allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname ,  Lname FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学生的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname ,  Lname FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出了多少不同的顾问？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT advisor) FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少顾问？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT advisor) FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有专业。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Major FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (Major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同专业有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Major FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (Major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有学生居住的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT city_code FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生居住在什么城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT city_code FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有女学生的名、姓氏、年龄。他们的性别是“女”."
      },
      {
        "from": "assistant",
        "value": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  '女'"
      }
    ],
    "system": "CREATE TABLE Student (Age VARCHAR, Sex VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有性别为“女”的女生全名和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname ,  Lname ,  Age FROM Student WHERE Sex  =  '女'"
      }
    ],
    "system": "CREATE TABLE Student (Age VARCHAR, Sex VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有男生的学生ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE Sex  =  '男'"
      }
    ],
    "system": "CREATE TABLE Student (Sex VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有男生的学生ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE Sex  =  '男'"
      }
    ],
    "system": "CREATE TABLE Student (Sex VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "18岁的学生有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student WHERE age  =  18"
      }
    ],
    "system": "CREATE TABLE Student (age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少18岁的学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student WHERE age  =  18"
      }
    ],
    "system": "CREATE TABLE Student (age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有20岁以上的学生ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE age  >  20"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "20岁以上学生的学生ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE age  >  20"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“金”的学生住在哪个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_code FROM Student WHERE LName  =  \"金\""
      }
    ],
    "system": "CREATE TABLE Student (LName VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出姓“金”的学生所住的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT city_code FROM Student WHERE LName  =  \"金\""
      }
    ],
    "system": "CREATE TABLE Student (LName VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是ID1004的学生的导师？"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor FROM Student WHERE StuID  =  1004"
      }
    ],
    "system": "CREATE TABLE Student (Advisor VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁指导1004学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor FROM Student WHERE StuID  =  1004"
      }
    ],
    "system": "CREATE TABLE Student (Advisor VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“香港”或“深圳”有多少学生聚准？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student WHERE city_code  =  \"香港\" OR city_code  =  \"深圳\""
      }
    ],
    "system": "CREATE TABLE Student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出居住在“香港”或“深圳”学生的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student WHERE city_code  =  \"香港\" OR city_code  =  \"深圳\""
      }
    ],
    "system": "CREATE TABLE Student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有学生的最低、平均和最大年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学生的最低年龄、平均年龄和最大年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(age) ,  avg(age) ,  max(age) FROM Student"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小的学生的姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, LName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供最年轻学生的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT LName FROM Student WHERE age  =  (SELECT min(age) FROM Student)"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, LName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最老学生的学生ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最老的学生的学生ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有专业和相应的学生数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT major ,  count(*) FROM Student GROUP BY major"
      }
    ],
    "system": "CREATE TABLE Student (major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个专业有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT major ,  count(*) FROM Student GROUP BY major"
      }
    ],
    "system": "CREATE TABLE Student (major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个专业的学生最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student (major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大的专业是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student (major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有年龄和对应学生的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT age ,  count(*) FROM Student GROUP BY age"
      }
    ],
    "system": "CREATE TABLE Student (age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个学生年龄有多大？每个年龄段有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT age ,  count(*) FROM Student GROUP BY age"
      }
    ],
    "system": "CREATE TABLE Student (age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示男女学生的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  sex FROM Student GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "男女学生平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  sex FROM Student GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有城市和相应的学生数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code"
      }
    ],
    "system": "CREATE TABLE Student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个城市有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code"
      }
    ],
    "system": "CREATE TABLE Student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有的顾问和相应的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor"
      }
    ],
    "system": "CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每位导师有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT advisor ,  count(*) FROM Student GROUP BY advisor"
      }
    ],
    "system": "CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位导师的学生最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出最多学生的导师。"
      },
      {
        "from": "assistant",
        "value": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生患有“猫”过敏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"猫\""
      }
    ],
    "system": "CREATE TABLE Has_allergy (Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生受到“猫”过敏的影响？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Has_allergy WHERE Allergy  =  \"猫\""
      }
    ],
    "system": "CREATE TABLE Has_allergy (Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有至少有两种过敏症的学生。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Has_allergy (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多个过敏反应的的学生的学生ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Has_allergy (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有过敏的学生的学生ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy"
      }
    ],
    "system": "CREATE TABLE Student (StuID VARCHAR), CREATE TABLE Has_allergy (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些学生不受过敏影响？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Has_allergy"
      }
    ],
    "system": "CREATE TABLE Student (StuID VARCHAR), CREATE TABLE Has_allergy (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少女学生有“鸡蛋”或“牛奶”过敏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"女\" AND T1.allergy  =  \"牛奶\" OR T1.allergy  =  \"鸡蛋\""
      }
    ],
    "system": "CREATE TABLE has_allergy (allergy VARCHAR, StuID VARCHAR), CREATE TABLE Student (sex VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少女生对“鸡蛋”或“牛奶\"过敏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"女\" AND T1.allergy  =  \"牛奶\" OR T1.allergy  =  \"鸡蛋\""
      }
    ],
    "system": "CREATE TABLE has_allergy (allergy VARCHAR, StuID VARCHAR), CREATE TABLE Student (sex VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生有“食物”过敏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"食物\""
      }
    ],
    "system": "CREATE TABLE Has_allergy (allergy VARCHAR), CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生受“食物”过敏的影响？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"食物\""
      }
    ],
    "system": "CREATE TABLE Has_allergy (allergy VARCHAR), CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些过敏反应影响的学生数量最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Has_allergy (Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种过敏最常见？"
      },
      {
        "from": "assistant",
        "value": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Has_allergy (Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有受过敏影响的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy"
      }
    ],
    "system": "CREATE TABLE Has_allergy (Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种过敏反应有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy"
      }
    ],
    "system": "CREATE TABLE Has_allergy (Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有过敏类型与受影响的学生数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype"
      }
    ],
    "system": "CREATE TABLE Has_allergy (allergy VARCHAR), CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一种过敏类型有多少学生受影响？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype"
      }
    ],
    "system": "CREATE TABLE Has_allergy (allergy VARCHAR), CREATE TABLE Allergy_type (allergy VARCHAR, allergytype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出对“牛奶”和“猫”过敏的学生的姓氏和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"牛奶\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"猫\")"
      }
    ],
    "system": "CREATE TABLE Student (Allergy VARCHAR, lname VARCHAR, age VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR, lname VARCHAR, age VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对“牛奶”和“猫”过敏的学生的姓氏和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"牛奶\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"猫\")"
      }
    ],
    "system": "CREATE TABLE Student (Allergy VARCHAR, lname VARCHAR, age VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR, lname VARCHAR, age VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“莎莎”的学生有哪些过敏症和过敏类型？并以过敏反应的名称来分类结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"莎莎\" ORDER BY T1.Allergy"
      }
    ],
    "system": "CREATE TABLE Allergy_type (AllergyType VARCHAR, Allergy VARCHAR), CREATE TABLE Has_allergy (StuID VARCHAR, Allergy VARCHAR), CREATE TABLE Student (Fname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个叫“莎莎”的女孩有什么过敏反应？它们的类型是什么？并以过敏反应的名称来分类结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"莎莎\" ORDER BY T1.Allergy"
      }
    ],
    "system": "CREATE TABLE Allergy_type (AllergyType VARCHAR, Allergy VARCHAR), CREATE TABLE Has_allergy (StuID VARCHAR, Allergy VARCHAR), CREATE TABLE Student (Fname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出对“牛奶”过敏但不对“猫”过敏的学生的名字和性别。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"牛奶\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"猫\")"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, Allergy VARCHAR, sex VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (fname VARCHAR, Allergy VARCHAR, sex VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对“牛奶”过敏但能忍受“猫”的学生的名字和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"牛奶\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"猫\")"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, Allergy VARCHAR, sex VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (fname VARCHAR, Allergy VARCHAR, sex VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出对“动物”和“食物”类型过敏的学生的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"食物\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"动物\")"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR, StuID VARCHAR), CREATE TABLE Allergy_Type (allergytype VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对“动物”和“食物”过敏的学生的平均年龄有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"食物\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"动物\")"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR, StuID VARCHAR), CREATE TABLE Allergy_Type (allergytype VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有“食物”过敏的学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"食物\")"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, lname VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR, StuID VARCHAR), CREATE TABLE Allergy_Type (allergytype VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对任何类型的“食物”都不过敏的每个学生的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"食物\")"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, lname VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR, StuID VARCHAR), CREATE TABLE Allergy_Type (allergytype VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有“食物”类型过敏的男性(性别是“男”)的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student WHERE sex  =  \"男\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"食物\")"
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR), CREATE TABLE Allergy_Type (allergytype VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少男学生(性别是“男”)对任何类型的“食物”过敏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student WHERE sex  =  \"男\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"食物\")"
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR), CREATE TABLE Allergy_Type (allergytype VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出对“牛奶”或“猫”过敏的学生的不同名字和城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"牛奶\" OR T2.Allergy  =  \"猫\""
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, stuid VARCHAR, city_code VARCHAR), CREATE TABLE Has_Allergy (stuid VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些对“牛奶”或“猫”过敏的学生的不同名字和城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"牛奶\" OR T2.Allergy  =  \"猫\""
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, stuid VARCHAR, city_code VARCHAR), CREATE TABLE Has_Allergy (stuid VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出18岁以上、对“食物”和“动物”不过敏的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"食物\" OR T2.allergytype  =  \"动物\")"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR), CREATE TABLE Allergy_Type (allergytype VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生超过18岁，对“食物”类型或“动物”类型不过敏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"食物\" OR T2.allergytype  =  \"动物\")"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, StuID VARCHAR), CREATE TABLE Has_allergy (Allergy VARCHAR), CREATE TABLE Allergy_Type (allergytype VARCHAR, Allergy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到对“大豆”不过敏的学生的名字和专业。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"大豆\")"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, Allergy VARCHAR, major VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (fname VARCHAR, Allergy VARCHAR, major VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可以食用“大豆”的学生的名字和专业是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"大豆\")"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, Allergy VARCHAR, major VARCHAR, StuID VARCHAR), CREATE TABLE Has_allergy (fname VARCHAR, Allergy VARCHAR, major VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一个发票数量前5的国家的列表。列出国家名称和发票数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"
      }
    ],
    "system": "CREATE TABLE invoices (billing_country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发票数量最多的5个国家是什么？他们有多少发票？"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;"
      }
    ],
    "system": "CREATE TABLE invoices (billing_country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个发票总额前8的国家的列表。列出国家名称和发票总额。"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;"
      }
    ],
    "system": "CREATE TABLE invoices (total INTEGER, billing_country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按发票总额计算，前8个国家的名称是什么？那些总额有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;"
      }
    ],
    "system": "CREATE TABLE invoices (total INTEGER, billing_country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均发票大小前10的国家的列表。列出国家名称和平均发票大小。"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE invoices (total INTEGER, billing_country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均发票大小最大的国家的名称和平均发票大小是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE invoices (total INTEGER, billing_country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最近购买了东西的5个客户。列出客户的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (customer_id VARCHAR, invoice_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近买东西的5个顾客的名字和姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (customer_id VARCHAR, invoice_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从订单总数中找出前10名客户。列出客户的姓氏和总订单数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按订单总数计算，前十位客户的姓名和名字是什么？他们订了多少货？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出总销售额的前10名客户。列出客户的姓名和总销售额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (total INTEGER, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "销售总额最高的前10位客户的姓氏和名字是什么？销售量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (total INTEGER, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照曲目数列出前5的流派。列出流派名称和总曲目。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;"
      }
    ],
    "system": "CREATE TABLE genres (id VARCHAR, name VARCHAR), CREATE TABLE tracks (genre_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "前5名的流派有多少曲目，名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;"
      }
    ],
    "system": "CREATE TABLE genres (id VARCHAR, name VARCHAR), CREATE TABLE tracks (genre_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每一张专辑的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM albums;"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有专辑的标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM albums;"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按专辑标题升序排列，列出每张专辑。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM albums ORDER BY title;"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母升序排列的所有专辑的标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM albums ORDER BY title;"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "将标题以字母顺序排序，列出每个专辑。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM albums WHERE title LIKE '安' ORDER BY title;"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以字母顺序排序的所有专辑的标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM albums WHERE title LIKE '安' ORDER BY title;"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出10个最便宜的发票的客户的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最便宜的10张发票的客户的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“四川”，“成都”市发票总额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"成都\" AND billing_state  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE invoices (billing_city VARCHAR, total INTEGER, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”州“成都”市的发票金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"成都\" AND billing_state  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE invoices (billing_city VARCHAR, total INTEGER, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“四川”,“成都”的发票数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"成都\" AND billing_state  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE invoices (billing_city VARCHAR, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“四川”,“成都”开出多少发票？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"成都\" AND billing_state  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE invoices (billing_city VARCHAR, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按州分组的美国发票数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"美国\" GROUP BY billing_state;"
      }
    ],
    "system": "CREATE TABLE invoices (billing_country VARCHAR, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个州有多少发票？"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"美国\" GROUP BY billing_state;"
      }
    ],
    "system": "CREATE TABLE invoices (billing_country VARCHAR, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出美国发票最多的州。"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"美国\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE invoices (billing_country VARCHAR, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发票最多的州是什么州？"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"美国\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE invoices (billing_country VARCHAR, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“浙江”省的发票数量和发票总额。"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE invoices (total INTEGER, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”省的发票金额和总金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT billing_state ,  COUNT(*) ,  SUM(total) FROM invoices WHERE billing_state  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE invoices (total INTEGER, billing_state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“零点乐队”的专辑。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"零点乐队\";"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, artist_id VARCHAR), CREATE TABLE artists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“零点乐队”的专辑的标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"零点乐队\";"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, artist_id VARCHAR), CREATE TABLE artists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“周杰伦”有多少张专辑？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"周杰伦\";"
      }
    ],
    "system": "CREATE TABLE albums (artist_id VARCHAR), CREATE TABLE artists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“周杰伦”发行了多少张专辑？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"周杰伦\";"
      }
    ],
    "system": "CREATE TABLE albums (artist_id VARCHAR), CREATE TABLE artists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“宋” “志鹏”是哪家公司的客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT company FROM customers WHERE first_name = \"宋\" AND last_name = \"志鹏\";"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, first_name VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户为“宋” “志鹏”的公司是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT company FROM customers WHERE first_name = \"宋\" AND last_name = \"志鹏\";"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, first_name VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢” “军”的电子邮件和电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT email ,  phone FROM customers WHERE first_name = \"卢\" AND last_name = \"军\";"
      }
    ],
    "system": "CREATE TABLE customers (email VARCHAR, last_name VARCHAR, phone VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户“卢” “军”的电子邮件和电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT email ,  phone FROM customers WHERE first_name = \"卢\" AND last_name = \"军\";"
      }
    ],
    "system": "CREATE TABLE customers (email VARCHAR, last_name VARCHAR, phone VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“唐山”市有多少客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers WHERE city = \"唐山\";"
      }
    ],
    "system": "CREATE TABLE customers (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“唐山”市有多少顾客？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers WHERE city = \"唐山\";"
      }
    ],
    "system": "CREATE TABLE customers (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”州有多少客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers WHERE state = \"浙江\";"
      }
    ],
    "system": "CREATE TABLE customers (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“浙江”的客户有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers WHERE state = \"浙江\";"
      }
    ],
    "system": "CREATE TABLE customers (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“姜” “子玉”住在哪个国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM customers WHERE first_name = \"姜\" AND last_name = \"子玉\";"
      }
    ],
    "system": "CREATE TABLE customers (country VARCHAR, last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“姜” “子玉”在哪个国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM customers WHERE first_name = \"姜\" AND last_name = \"子玉\";"
      }
    ],
    "system": "CREATE TABLE customers (country VARCHAR, last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出由名为“强\"的艺术家发布的专辑名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '强'"
      }
    ],
    "system": "CREATE TABLE artists (name VARCHAR, id VARCHAR), CREATE TABLE albums (title VARCHAR, artist_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字为“强\"的艺术家发行的专辑的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '强'"
      }
    ],
    "system": "CREATE TABLE artists (name VARCHAR, id VARCHAR), CREATE TABLE albums (title VARCHAR, artist_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“马” “志强”拥有多少客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"马\" AND T1.last_name = \"志强\";"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE customers (support_rep_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“马” “志强”拥有的客户数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"马\" AND T1.last_name = \"志强\";"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE customers (support_rep_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“袁” “熙”的头衔、电话和租用日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"袁\" AND last_name = \"熙\";"
      }
    ],
    "system": "CREATE TABLE employees (phone VARCHAR, first_name VARCHAR, title VARCHAR, hire_date VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "叫“袁” “熙”的员工的头衔、电话号码和雇佣日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"袁\" AND last_name = \"熙\";"
      }
    ],
    "system": "CREATE TABLE employees (phone VARCHAR, first_name VARCHAR, title VARCHAR, hire_date VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到向“袁” “熙”汇报的员工的全名？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"袁\" AND T1.last_name = \"熙\";"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, reports_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "向“袁” “熙”汇报工作的员工的名和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"袁\" AND T1.last_name = \"熙\";"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, reports_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "雇员“袁” “熙”的地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT address FROM employees WHERE first_name = \"袁\" AND last_name = \"熙\";"
      }
    ],
    "system": "CREATE TABLE employees (address VARCHAR, last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“袁” “熙”的地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT address FROM employees WHERE first_name = \"袁\" AND last_name = \"熙\";"
      }
    ],
    "system": "CREATE TABLE employees (address VARCHAR, last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找拥有最多客户的雇员的全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE customers (support_rep_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多客户的员工的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE customers (support_rep_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "加拿大有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM employees WHERE country = \"加拿大\";"
      }
    ],
    "system": "CREATE TABLE employees (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "加拿大有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM employees WHERE country = \"加拿大\";"
      }
    ],
    "system": "CREATE TABLE employees (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“袁” “熙”的电话号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT phone FROM employees WHERE first_name = \"袁\" AND last_name = \"熙\";"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, phone VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“袁” “熙”的电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT phone FROM employees WHERE first_name = \"袁\" AND last_name = \"熙\";"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, phone VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是公司里最年轻的员工？列出员工的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, birth_date VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最年轻的雇员的名字和姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, birth_date VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出10大在公司工作最长的时间的员工。列出员工的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "前10名任职时间最长的员工的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name , last_name FROM employees ORDER BY hire_date ASC LIMIT 10;"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个城市的头衔为IT员工的数目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  city FROM employees WHERE title  =  '运维职员' GROUP BY city"
      }
    ],
    "system": "CREATE TABLE employees (title VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个城市的IT员工有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  city FROM employees WHERE title  =  '运维职员' GROUP BY city"
      }
    ],
    "system": "CREATE TABLE employees (title VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个员工管理最多的人？列出员工的姓名，以及报告该员工管理的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有员工的名字和姓氏是什么？有多少人向他们报告？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“周” “浩歌”有多少个订单？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"周\" AND T1.last_name = \"浩歌\";"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“周” “浩歌”的发票有多少个订单？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"周\" AND T1.last_name = \"浩歌\";"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“周” “浩歌”花了多少钱？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"周\" AND T1.last_name = \"浩歌\";"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (total INTEGER, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“周” “浩歌”花了多少钱？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"周\" AND T1.last_name = \"浩歌\";"
      }
    ],
    "system": "CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR), CREATE TABLE invoices (total INTEGER, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有媒体类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM media_types;"
      }
    ],
    "system": "CREATE TABLE media_types (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有媒体类型的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM media_types;"
      }
    ],
    "system": "CREATE TABLE media_types (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有不同的体裁类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM genres;"
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有什么不同的体裁名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM genres;"
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有播放列表的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM playlists;"
      }
    ],
    "system": "CREATE TABLE playlists (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有播放列表的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM playlists;"
      }
    ],
    "system": "CREATE TABLE playlists (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是“逆战”的作曲家？"
      },
      {
        "from": "assistant",
        "value": "SELECT composer FROM tracks WHERE name = \"逆战\";"
      }
    ],
    "system": "CREATE TABLE tracks (composer VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位作曲家创造了“逆战”曲子？"
      },
      {
        "from": "assistant",
        "value": "SELECT composer FROM tracks WHERE name = \"逆战\";"
      }
    ],
    "system": "CREATE TABLE tracks (composer VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "曲子“逆战”有多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT milliseconds FROM tracks WHERE name = \"逆战\";"
      }
    ],
    "system": "CREATE TABLE tracks (name VARCHAR, milliseconds VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“逆战”有多少毫秒长？"
      },
      {
        "from": "assistant",
        "value": "SELECT milliseconds FROM tracks WHERE name = \"逆战\";"
      }
    ],
    "system": "CREATE TABLE tracks (name VARCHAR, milliseconds VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“摇滚”是什么类型的曲目的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"摇滚\";"
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR, id VARCHAR), CREATE TABLE tracks (genre_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“摇滚”乐曲中所有曲目的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"摇滚\";"
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR, id VARCHAR), CREATE TABLE tracks (genre_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“奇幻旅程”这首歌所属的专辑是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"奇幻旅程\";"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, id VARCHAR), CREATE TABLE tracks (genre_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪张专辑有名字为“奇幻旅程”这首歌？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"奇幻旅程\";"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, id VARCHAR), CREATE TABLE tracks (genre_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“奇幻旅程”中的歌曲名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"奇幻旅程\";"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, id VARCHAR), CREATE TABLE tracks (genre_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这张“奇幻旅程”专辑中的所有歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"奇幻旅程\";"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, id VARCHAR), CREATE TABLE tracks (genre_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出曲目数高于10的专辑标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, id VARCHAR), CREATE TABLE tracks (album_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过10首曲目的专辑名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;"
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, id VARCHAR), CREATE TABLE tracks (album_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出属于“摇滚”类型的曲目名称，并且其媒体类型是MPEG音频文件。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"摇滚\" AND T3.name = \"MPEG\";"
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR, id VARCHAR), CREATE TABLE tracks (media_type_id VARCHAR, genre_id VARCHAR, name VARCHAR), CREATE TABLE media_types (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以MPEG音频格式存储的所有摇滚曲目的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"摇滚\" AND T3.name = \"MPEG\";"
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR, id VARCHAR), CREATE TABLE tracks (media_type_id VARCHAR, genre_id VARCHAR, name VARCHAR), CREATE TABLE media_types (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出属于摇滚风格或媒体类型是MPEG音频文件的曲目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"摇滚\" OR T3.name = \"MPEG\";"
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR, id VARCHAR), CREATE TABLE tracks (media_type_id VARCHAR, genre_id VARCHAR, name VARCHAR), CREATE TABLE media_types (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "属于摇滚音乐并且其媒体类型是MPEG的所有曲目的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"摇滚\" OR T3.name = \"MPEG\";"
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR, id VARCHAR), CREATE TABLE tracks (media_type_id VARCHAR, genre_id VARCHAR, name VARCHAR), CREATE TABLE media_types (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出属于摇滚或爵士乐类型的曲目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"摇滚\" OR T1.name = \"爵士\""
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR, id VARCHAR), CREATE TABLE tracks (genre_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "摇滚乐或爵士乐歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"摇滚\" OR T1.name = \"爵士\""
      }
    ],
    "system": "CREATE TABLE genres (name VARCHAR, id VARCHAR), CREATE TABLE tracks (genre_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出电影播放列表中所有曲目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"电影\";"
      }
    ],
    "system": "CREATE TABLE tracks (id VARCHAR, name VARCHAR), CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR), CREATE TABLE playlists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "标题为电影的播放列表中所有曲目的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"电影\";"
      }
    ],
    "system": "CREATE TABLE tracks (id VARCHAR, name VARCHAR), CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR), CREATE TABLE playlists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出有大于100首曲目的播放列表的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;"
      }
    ],
    "system": "CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR), CREATE TABLE playlists (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过100条曲目的所有播放列表的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM playlist_tracks AS T1 JOIN playlists AS T2 ON T2.id = T1.playlist_id GROUP BY T1.playlist_id HAVING count(T1.track_id)  >  100;"
      }
    ],
    "system": "CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR), CREATE TABLE playlists (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出客户'“康” “伯约”'购买的所有曲目。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"康\" AND T4.last_name = \"伯约\";"
      }
    ],
    "system": "CREATE TABLE tracks (id VARCHAR, name VARCHAR), CREATE TABLE invoice_lines (invoice_id VARCHAR, track_id VARCHAR), CREATE TABLE invoices (id VARCHAR, customer_id VARCHAR), CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“康” “伯约”'买的曲目是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"康\" AND T4.last_name = \"伯约\";"
      }
    ],
    "system": "CREATE TABLE tracks (id VARCHAR, name VARCHAR), CREATE TABLE invoice_lines (invoice_id VARCHAR, track_id VARCHAR), CREATE TABLE invoices (id VARCHAR, customer_id VARCHAR), CREATE TABLE customers (last_name VARCHAR, id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“逆战”要多少钱？"
      },
      {
        "from": "assistant",
        "value": "SELECT unit_price FROM tracks WHERE name = \"逆战\";"
      }
    ],
    "system": "CREATE TABLE tracks (name VARCHAR, unit_price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“逆战”的单价是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT unit_price FROM tracks WHERE name = \"逆战\";"
      }
    ],
    "system": "CREATE TABLE tracks (name VARCHAR, unit_price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到在电影播放列表中但不在音乐播放列表中的曲目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  '电影' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  '音乐'"
      }
    ],
    "system": "CREATE TABLE tracks (id VARCHAR, name VARCHAR), CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR), CREATE TABLE playlists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在电影播放列表中但不在音乐播放列表中的所有曲目名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  '电影' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  '音乐'"
      }
    ],
    "system": "CREATE TABLE tracks (id VARCHAR, name VARCHAR), CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR), CREATE TABLE playlists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到同时在电影和音乐播放列表中的曲目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  '电影' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  '音乐'"
      }
    ],
    "system": "CREATE TABLE tracks (id VARCHAR, name VARCHAR), CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR), CREATE TABLE playlists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在电影和音乐播放列表中共同都有哪些曲目？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  '电影' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  '音乐'"
      }
    ],
    "system": "CREATE TABLE tracks (id VARCHAR, name VARCHAR), CREATE TABLE playlist_tracks (playlist_id VARCHAR, track_id VARCHAR), CREATE TABLE playlists (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每种体裁中的曲目数量？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;"
      }
    ],
    "system": "CREATE TABLE genres (id VARCHAR, name VARCHAR), CREATE TABLE tracks (genre_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种体裁有多少条曲目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;"
      }
    ],
    "system": "CREATE TABLE genres (id VARCHAR, name VARCHAR), CREATE TABLE tracks (genre_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少编辑？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM editor"
      }
    ],
    "system": "CREATE TABLE editor (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄升序排列给出编辑的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM editor ORDER BY Age ASC"
      }
    ],
    "system": "CREATE TABLE editor (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "编辑的姓名和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Age FROM editor"
      }
    ],
    "system": "CREATE TABLE editor (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出超过25岁的编辑的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM editor WHERE Age  >  25"
      }
    ],
    "system": "CREATE TABLE editor (Name VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示24岁或25岁的编辑的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25"
      }
    ],
    "system": "CREATE TABLE editor (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最年轻的编辑的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE editor (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "编辑有哪些不同的年龄？每一个年龄段有多少编辑。"
      },
      {
        "from": "assistant",
        "value": "SELECT Age ,  COUNT(*) FROM editor GROUP BY Age"
      }
    ],
    "system": "CREATE TABLE editor (Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示编辑中最常见的年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE editor (Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示期刊的不同主题。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Theme FROM journal"
      }
    ],
    "system": "CREATE TABLE journal (Theme VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示编辑的姓名和他们作为委员会服务的期刊的主题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID"
      }
    ],
    "system": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR), CREATE TABLE editor (Editor_ID VARCHAR, Name VARCHAR), CREATE TABLE journal (Theme VARCHAR, Journal_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个期刊委员会，找出编辑名称和期刊主题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID"
      }
    ],
    "system": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR), CREATE TABLE editor (Editor_ID VARCHAR, Name VARCHAR), CREATE TABLE journal (Theme VARCHAR, Journal_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照主题的字母顺序递增排序，显示编辑的姓名和年龄以及他们作为委员会服务的期刊的主题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T2.age ,  T3.Theme FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID ORDER BY T3.Theme ASC"
      }
    ],
    "system": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR), CREATE TABLE editor (Editor_ID VARCHAR, age VARCHAR, Name VARCHAR), CREATE TABLE journal (Theme VARCHAR, Journal_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出销售量超过3000份的期刊的委员会的编辑的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T3.Sales  >  3000"
      }
    ],
    "system": "CREATE TABLE journal_committee (Editor_ID VARCHAR, Journal_ID VARCHAR), CREATE TABLE editor (Editor_ID VARCHAR, Name VARCHAR), CREATE TABLE journal (Journal_ID VARCHAR, Sales INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个编辑的ID、姓名以及他们所在的期刊委员会的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.editor_id ,  T1.Name ,  COUNT(*) FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.editor_id"
      }
    ],
    "system": "CREATE TABLE editor (Editor_ID VARCHAR, Name VARCHAR, editor_id VARCHAR), CREATE TABLE journal_committee (Editor_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示参与至少两个期刊委员会的编辑的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE editor (Editor_ID VARCHAR, Name VARCHAR), CREATE TABLE journal_committee (Editor_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出不在任何期刊委员会上的编辑的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM editor WHERE editor_id NOT IN (SELECT editor_id FROM journal_committee)"
      }
    ],
    "system": "CREATE TABLE editor (Name VARCHAR, editor_id VARCHAR), CREATE TABLE journal_committee (Name VARCHAR, editor_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有任何编辑在委员会任职的杂志的日期、主题和销售情况。"
      },
      {
        "from": "assistant",
        "value": "SELECT date ,  theme ,  sales FROM journal EXCEPT SELECT T1.date ,  T1.theme ,  T1.sales FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID"
      }
    ],
    "system": "CREATE TABLE journal (theme VARCHAR, journal_ID VARCHAR, sales VARCHAR, date VARCHAR), CREATE TABLE journal_committee (journal_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有一个工作类型是“照片”的编辑所属的期刊的平均销量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID WHERE T2.work_type  =  '照片'"
      }
    ],
    "system": "CREATE TABLE journal (sales INTEGER, journal_ID VARCHAR), CREATE TABLE journal_committee (work_type VARCHAR, journal_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少个账户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算帐号数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示ID，客户ID，所有帐户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id ,  customer_id ,  account_name FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (account_id VARCHAR, customer_id VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有账户的账户ID、客户ID和账户名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id ,  customer_id ,  account_name FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (account_id VARCHAR, customer_id VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示帐户名称有“338”的其他账户信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""
      }
    ],
    "system": "CREATE TABLE Accounts (other_account_details VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有没有这个叫“338”的账号的其他信息？"
      },
      {
        "from": "assistant",
        "value": "SELECT other_account_details FROM Accounts WHERE account_name  =  \"338\""
      }
    ],
    "system": "CREATE TABLE Accounts (other_account_details VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "帐户名“162”的客户的名字、姓氏和电话是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\""
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR, account_name VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出帐户名“162”的客户的全名和电话。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"162\""
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR, account_name VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字为“艺术”和姓“王”的客户有多少个账户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"艺术\" AND T2.customer_last_name  =  \"王\""
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有名“艺术”和姓“王”的客户的帐户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"艺术\" AND T2.customer_last_name  =  \"王\""
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有客户ID和每个客户的帐号。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个客户ID有多少个帐户？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有最多个账户的客户ID和帐户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "帐户最多的客户的客户ID是什么，这个人有多少个帐户？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "账户最少的客户的名字、姓氏和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出账户最少的客户的全名和客户ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有账户的所有客户的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户没有账户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有任何帐户的客户的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有账户的客户的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有账户的所有客户的不同的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有账户的客户的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户有账户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT customer_id) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计持有账户的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT customer_id) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有客户的ID、名字、姓氏和电话。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (customer_last_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个客户的ID、全名和电话是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  customer_first_name ,  customer_last_name ,  customer_phone FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (customer_last_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“许”姓氏是“海超”的客户的电话和电子邮箱是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"许\" AND customer_last_name  =  \"海超\""
      }
    ],
    "system": "CREATE TABLE Customers (customer_phone VARCHAR, customer_last_name VARCHAR, customer_first_name VARCHAR, customer_email VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回名字是“许”，姓氏是“海超”的客户的电话和电子邮件，。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"许\" AND customer_last_name  =  \"海超\""
      }
    ],
    "system": "CREATE TABLE Customers (customer_phone VARCHAR, customer_last_name VARCHAR, customer_first_name VARCHAR, customer_email VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示客户卡的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers_cards"
      }
    ],
    "system": "CREATE TABLE Customers_cards (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户卡？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers_cards"
      }
    ],
    "system": "CREATE TABLE Customers_cards (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有卡的ID、客户ID、卡类型代码、卡号。"
      },
      {
        "from": "assistant",
        "value": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards"
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR, card_number VARCHAR, card_id VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每张客户卡的卡ID、客户ID、卡类型和卡号是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT card_id ,  customer_id ,  card_type_code ,  card_number FROM Customers_cards"
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR, card_number VARCHAR, card_id VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示卡号“4560596484842”的卡的有效日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_number VARCHAR, date_valid_from VARCHAR, date_valid_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "号码“4560596484842”的卡的有效日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_valid_from ,  date_valid_to FROM Customers_cards WHERE card_number  =  \"4560596484842\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_number VARCHAR, date_valid_from VARCHAR, date_valid_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "卡号“4560596484842”的客户的姓、名和电话是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_number VARCHAR, customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有卡号“4560596484842”的客户的全名和电话。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_number VARCHAR, customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_phone VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户'“艺术” “王”'有多少张卡？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"艺术\" AND T2.customer_last_name  =  \"王\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数一数顾客名叫“艺术”和姓“王”的卡数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"艺术\" AND T2.customer_last_name  =  \"王\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少借记卡？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"借记卡\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算客户的借记卡数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers_cards WHERE card_type_code  =  \"借记卡\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户“白” “启光”有多少张信用卡？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"白\" AND T2.customer_last_name  =  \"启光\" AND T1.card_type_code  =  \"信用卡\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR, customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算名为“白”姓氏为“启光”的客户拥有的信用卡数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"白\" AND T2.customer_last_name  =  \"启光\" AND T1.card_type_code  =  \"信用卡\""
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR, customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有客户ID和每个客户拥有的卡的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的客户ID是什么和每个用户持有多少张卡？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最多的卡的客户是谁，他有多少卡？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回有最多卡的客户的ID，以及卡的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示用至少两张卡所有客户的ID、名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "持有两张或更多张卡的客户的ID和全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "帐户数量最少的客户ID，名和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回帐户最少的客户的ID和全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有的卡类型代码和每种类型的卡片数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code"
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些不同的卡片类型？每种类型有多少张卡片？"
      },
      {
        "from": "assistant",
        "value": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code"
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "卡片最多的类型代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回使用最多的卡的类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有5张卡片的类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5"
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有5张或更多卡的卡类型代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5"
      }
    ],
    "system": "CREATE TABLE Customers_cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有卡类型代码和客户的每个类型卡的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR, card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的卡类型代码有哪些？每种类型有多少不同的客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT card_type_code ,  count(DISTINCT customer_id) FROM Customers_cards GROUP BY card_type_code"
      }
    ],
    "system": "CREATE TABLE Customers_cards (customer_id VARCHAR, card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有信用卡的客户ID和名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"信用卡\""
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR), CREATE TABLE Customers_cards (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不持有信用卡的客户的ID和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"信用卡\""
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR), CREATE TABLE Customers_cards (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有卡类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT card_type_code FROM Customers_Cards"
      }
    ],
    "system": "CREATE TABLE Customers_Cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的卡片类型代码有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT card_type_code FROM Customers_Cards"
      }
    ],
    "system": "CREATE TABLE Customers_Cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示卡片类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards"
      }
    ],
    "system": "CREATE TABLE Customers_Cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的卡片类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT card_type_code) FROM Customers_Cards"
      }
    ],
    "system": "CREATE TABLE Customers_Cards (card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有交易类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT transaction_type FROM Financial_Transactions"
      }
    ],
    "system": "CREATE TABLE Financial_Transactions (transaction_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些不同类型的交易？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT transaction_type FROM Financial_Transactions"
      }
    ],
    "system": "CREATE TABLE Financial_Transactions (transaction_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示交易类型的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions"
      }
    ],
    "system": "CREATE TABLE Financial_Transactions (transaction_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同类型的交易？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions"
      }
    ],
    "system": "CREATE TABLE Financial_Transactions (transaction_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "交易的平均成交金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回平均交易金额以及所有交易的总金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示卡类型代码和交易总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (card_id VARCHAR), CREATE TABLE Customers_cards (card_id VARCHAR, card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的卡类型有哪些，以及每张卡有多少次交易？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (card_id VARCHAR), CREATE TABLE Customers_cards (card_id VARCHAR, card_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示交易类型和交易数。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的交易类型是什么，以及每个交易类型发生了多少次交易？"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "交易中总金额最大的交易类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_type VARCHAR, transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有最高总金额的交易类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type FROM Financial_transactions GROUP BY transaction_type ORDER BY sum(transaction_amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_type VARCHAR, transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示帐户ID和每个帐户的交易数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "进行金融交易的不同账户ID是什么，以及每个账户对应多少个交易？"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id ,  count(*) FROM Financial_transactions GROUP BY account_id"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少轨道？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM track"
      }
    ],
    "system": "CREATE TABLE track (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算轨道的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM track"
      }
    ],
    "system": "CREATE TABLE track (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有轨道的名称和位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION FROM track"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有轨道的名称和位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION FROM track"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照座位数排序，显示2000年后所开放的所有轨道的名字和座位。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating"
      }
    ],
    "system": "CREATE TABLE track (year_opened INTEGER, seating VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年后开通的所有轨道的名称和座位数都有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating"
      }
    ],
    "system": "CREATE TABLE track (year_opened INTEGER, seating VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近开通的轨道的名称、位置和座位数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR, seating VARCHAR, name VARCHAR, year_opened VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最近一年开通的轨道的名称、位置和座位数。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR, seating VARCHAR, name VARCHAR, year_opened VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有轨道最小，最大，平均座位数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track"
      }
    ],
    "system": "CREATE TABLE track (seating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有轨道上的最小、最大和平均座椅数。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(seating) ,  max(seating) ,  avg(seating) FROM track"
      }
    ],
    "system": "CREATE TABLE track (seating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示座位数高于平均水平的所有轨道的名称、位置、开放年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR, year_opened VARCHAR, name VARCHAR, seating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "座位数高于平均水平的轨道的名称、位置和开放年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION ,  year_opened FROM track WHERE seating  >  (SELECT avg(seating) FROM track)"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR, year_opened VARCHAR, name VARCHAR, seating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "轨道的不同位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT LOCATION FROM track"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出轨道的不同位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT LOCATION FROM track"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一共有多少场比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM race"
      }
    ],
    "system": "CREATE TABLE race (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算比赛的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM race"
      }
    ],
    "system": "CREATE TABLE race (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比赛有哪些不同的类别？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT CLASS FROM race"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回比赛的不同种类。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT CLASS FROM race"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有比赛的名字、类别和日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  CLASS ,  date FROM race"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR, name VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有比赛的名字、类别和日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  CLASS ,  date FROM race"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR, name VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示比赛类别和每种类别的比赛数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的比赛类别是什么？每个类别有多少比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比赛数量最多的比赛类别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出比赛最多的类别。"
      },
      {
        "from": "assistant",
        "value": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出有至少两个比赛的比赛类别。"
      },
      {
        "from": "assistant",
        "value": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有两个或多个比赛的比赛类别有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE race (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“GT”类别比赛的赛道名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'"
      }
    ],
    "system": "CREATE TABLE track (name VARCHAR, track_id VARCHAR), CREATE TABLE race (track_id VARCHAR, class VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出没有“GT”类别比赛的赛道的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM track EXCEPT SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id WHERE T1.class  =  'GT'"
      }
    ],
    "system": "CREATE TABLE track (name VARCHAR, track_id VARCHAR), CREATE TABLE race (track_id VARCHAR, class VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有没有比赛的赛道名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)"
      }
    ],
    "system": "CREATE TABLE track (name VARCHAR, track_id VARCHAR), CREATE TABLE race (name VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回没有任何比赛的赛道的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)"
      }
    ],
    "system": "CREATE TABLE track (name VARCHAR, track_id VARCHAR), CREATE TABLE race (name VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有5000和不超过40000座位数的赛道开放的年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000"
      }
    ],
    "system": "CREATE TABLE track (seating INTEGER, year_opened VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在4000到5000座位数的赛道的开放年是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000"
      }
    ],
    "system": "CREATE TABLE track (seating INTEGER, year_opened VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示赛道的名称和每个赛道上的比赛数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id"
      }
    ],
    "system": "CREATE TABLE race (track_id VARCHAR), CREATE TABLE track (name VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的赛道名称是什么，每个赛道有多少比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  count(*) FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id"
      }
    ],
    "system": "CREATE TABLE race (track_id VARCHAR), CREATE TABLE track (name VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示比赛次数最多的赛道名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE race (track_id VARCHAR), CREATE TABLE track (name VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最多比赛次数的赛道的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE race (track_id VARCHAR), CREATE TABLE track (name VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个比赛的名称和日期及其赛道名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id"
      }
    ],
    "system": "CREATE TABLE race (name VARCHAR, date VARCHAR, track_id VARCHAR), CREATE TABLE track (name VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比赛的名称和日期，以及举行比赛的赛道的名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.date ,  T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id"
      }
    ],
    "system": "CREATE TABLE race (name VARCHAR, date VARCHAR, track_id VARCHAR), CREATE TABLE track (name VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有1个比赛的赛道的名称和位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE race (track_id VARCHAR), CREATE TABLE track (name VARCHAR, location VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有1个比赛的赛道的名称和位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.location FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE race (track_id VARCHAR), CREATE TABLE track (name VARCHAR, location VARCHAR, track_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有超过90000个座位的赛道和少于70000个座位的赛道的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR, seating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些地方有超过90000个座位的赛道和少于70000个座位的赛道？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM track WHERE seating  >  90000 INTERSECT SELECT LOCATION FROM track WHERE seating  <  70000"
      }
    ],
    "system": "CREATE TABLE track (LOCATION VARCHAR, seating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少会员有黑会员卡？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM member WHERE Membership_card  =  '黑卡'"
      }
    ],
    "system": "CREATE TABLE member (Membership_card VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个住址的会员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  address FROM member GROUP BY address"
      }
    ],
    "system": "CREATE TABLE member (address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我地址在“金华”或“湖州”的会员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM member WHERE address  =  '金华' OR address  =  '湖州'"
      }
    ],
    "system": "CREATE TABLE member (address VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找30岁以下或持有黑会员卡的会员的ID和姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  member_id FROM member WHERE Membership_card  =  '黑卡' OR age  <  30"
      }
    ],
    "system": "CREATE TABLE member (age INTEGER, Membership_card VARCHAR, name VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个会员的购买时间、年龄和地址，并按照购买时间的顺序显示结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT Time_of_purchase ,  age ,  address FROM member ORDER BY Time_of_purchase"
      }
    ],
    "system": "CREATE TABLE member (address VARCHAR, age VARCHAR, Time_of_purchase VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一张会员卡有超过5名会员？"
      },
      {
        "from": "assistant",
        "value": "SELECT Membership_card FROM member GROUP BY Membership_card HAVING count(*)  >  5"
      }
    ],
    "system": "CREATE TABLE member (Membership_card VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个地址既有会员年龄小于30岁，又有会员超过40岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40"
      }
    ],
    "system": "CREATE TABLE member (age INTEGER, address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“金华”的会员和住在“湖州”的会员都持有的卡都有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT membership_card FROM member WHERE address  =  '金华' INTERSECT SELECT membership_card FROM member WHERE address  =  '湖州'"
      }
    ],
    "system": "CREATE TABLE member (address VARCHAR, membership_card VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少会员不住在“金华”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM member WHERE address != '金华'"
      }
    ],
    "system": "CREATE TABLE member (address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个地址没有黑色会员卡的会员？"
      },
      {
        "from": "assistant",
        "value": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  '黑卡'"
      }
    ],
    "system": "CREATE TABLE member (address VARCHAR, Membership_card VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照开业时间排列显示商店地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT address FROM shop ORDER BY open_year"
      }
    ],
    "system": "CREATE TABLE shop (address VARCHAR, open_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有商店的平均分和平均员工数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(num_of_staff) ,  avg(score) FROM shop"
      }
    ],
    "system": "CREATE TABLE shop (num_of_staff INTEGER, score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出得分低于平均分的商店的ID和地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT shop_id ,  address FROM shop WHERE score  <  (SELECT avg(score) FROM shop)"
      }
    ],
    "system": "CREATE TABLE shop (address VARCHAR, shop_id VARCHAR, score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有快乐时间的商店的地址和员工数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT address ,  num_of_staff FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM happy_hour)"
      }
    ],
    "system": "CREATE TABLE shop (address VARCHAR, shop_id VARCHAR, num_of_staff VARCHAR), CREATE TABLE happy_hour (address VARCHAR, shop_id VARCHAR, num_of_staff VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "五月份有一个欢乐时间的商店的ID和地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  '五月'"
      }
    ],
    "system": "CREATE TABLE shop (address VARCHAR, shop_id VARCHAR), CREATE TABLE happy_hour (shop_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个商店的开心时间最多？列出它的ID和快乐时间的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT shop_id ,  count(*) FROM happy_hour GROUP BY shop_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE happy_hour (shop_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个月有最多的快乐时间？"
      },
      {
        "from": "assistant",
        "value": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE happy_hour (MONTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪几个月有超过2个快乐时间？"
      },
      {
        "from": "assistant",
        "value": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE happy_hour (MONTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少张专辑？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ALBUM"
      }
    ],
    "system": "CREATE TABLE ALBUM (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到专辑的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ALBUM"
      }
    ],
    "system": "CREATE TABLE ALBUM (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有音乐流派的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM GENRE"
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同音乐流派的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM GENRE"
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“广东”州所有客户信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM CUSTOMER WHERE State  =  \"广东\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (State VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”州客户的所有客户信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM CUSTOMER WHERE State  =  \"广东\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (State VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“青岛”市的员工的名字和姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"青岛\""
      }
    ],
    "system": "CREATE TABLE EMPLOYEE (FirstName VARCHAR, City VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找居住在“青岛”市的雇员的全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT FirstName ,  LastName FROM EMPLOYEE WHERE City  =  \"青岛\""
      }
    ],
    "system": "CREATE TABLE EMPLOYEE (FirstName VARCHAR, City VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同发票的收费国家有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(BillingCountry) FROM INVOICE"
      }
    ],
    "system": "CREATE TABLE INVOICE (BillingCountry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有发票不同的收费国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(BillingCountry) FROM INVOICE"
      }
    ],
    "system": "CREATE TABLE INVOICE (BillingCountry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有名字中有“a”的艺术家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ARTIST WHERE Name LIKE \"安\""
      }
    ],
    "system": "CREATE TABLE ARTIST (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中有字母“a”的艺术家有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ARTIST WHERE Name LIKE \"安\""
      }
    ],
    "system": "CREATE TABLE ARTIST (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“吴亦凡”艺术家的所有专辑的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"吴亦凡\""
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“吴亦凡”艺术家的专辑的标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"吴亦凡\""
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“陈奕迅”艺术家有多少张专辑？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"陈奕迅\""
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“陈奕迅”艺术家的专辑数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"陈奕迅\""
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“奇幻旅程”专辑是哪一位艺术家？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"奇幻旅程\""
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR, Title VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到制作“奇幻旅程”专辑艺术家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"奇幻旅程\""
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR, Title VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位艺术家的专辑最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "专辑数量最多的艺人叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出包含“你”这个词的所有曲目的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM TRACK WHERE Name LIKE '你'"
      }
    ],
    "system": "CREATE TABLE TRACK (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含了“你”这个词的曲目的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM TRACK WHERE Name LIKE '你'"
      }
    ],
    "system": "CREATE TABLE TRACK (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有歌曲的平均单价是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(UnitPrice) FROM TRACK"
      }
    ],
    "system": "CREATE TABLE TRACK (UnitPrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到歌曲的平均单价。"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(UnitPrice) FROM TRACK"
      }
    ],
    "system": "CREATE TABLE TRACK (UnitPrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长和最短的歌曲的持续时间是多少毫秒？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK"
      }
    ],
    "system": "CREATE TABLE TRACK (Milliseconds INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到毫秒下歌曲的最大和最小持续时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK"
      }
    ],
    "system": "CREATE TABLE TRACK (Milliseconds INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示专辑名称、ID和每张专辑的曲目数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID"
      }
    ],
    "system": "CREATE TABLE ALBUM (AlbumId VARCHAR, Title VARCHAR), CREATE TABLE TRACK (AlbumID VARCHAR, AlbumId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同专辑的名称和ID是什么？每个专辑有多少首曲目？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID"
      }
    ],
    "system": "CREATE TABLE ALBUM (AlbumId VARCHAR, Title VARCHAR), CREATE TABLE TRACK (AlbumID VARCHAR, AlbumId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有曲目中最常见的类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有曲目中最常见的类型的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有歌曲中最常见的媒体类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE MEDIATYPE (Name VARCHAR, MediaTypeId VARCHAR), CREATE TABLE TRACK (MediaTypeId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有音乐中，什么类型的媒体类型是最不常见的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE MEDIATYPE (Name VARCHAR, MediaTypeId VARCHAR), CREATE TABLE TRACK (MediaTypeId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示包含单价大于1的曲目的专辑的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID"
      }
    ],
    "system": "CREATE TABLE ALBUM (AlbumId VARCHAR, Title VARCHAR), CREATE TABLE TRACK (AlbumID VARCHAR, AlbumId VARCHAR, UnitPrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含单价大于1的歌曲的专辑的标题和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID"
      }
    ],
    "system": "CREATE TABLE ALBUM (AlbumId VARCHAR, Title VARCHAR), CREATE TABLE TRACK (AlbumID VARCHAR, AlbumId VARCHAR, UnitPrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "摇滚流派有多少曲目？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"摇滚\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算摇滚类型的歌曲的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"摇滚\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "属于爵士乐风格的曲目的平均单价是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"爵士\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到爵士乐曲目的平均单价。"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"爵士\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电子邮件为“luisg@embraer.com.br”的客户的名字和姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (FirstName VARCHAR, Email VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找电子邮件“luisg@embraer.com.br”的客户的全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT FirstName ,  LastName FROM CUSTOMER WHERE Email  =  \"luisg@embraer.com.br\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (FirstName VARCHAR, Email VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户有电子邮件包含\"gmail.com\"？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"qq.com\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (Email VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算包含\"gmail.com\"的电子邮件的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"qq.com\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (Email VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "帮助过名为“小红”的客户的员工的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"小红\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (FirstName VARCHAR, SupportRepId VARCHAR), CREATE TABLE EMPLOYEE (EmployeeId VARCHAR, FirstName VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找帮助客户“小红”的员工的全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"小红\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (FirstName VARCHAR, SupportRepId VARCHAR), CREATE TABLE EMPLOYEE (EmployeeId VARCHAR, FirstName VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "帮助住在邮政编码为“70174”的客户的员工住在哪个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (PostalCode VARCHAR, SupportRepId VARCHAR), CREATE TABLE EMPLOYEE (EmployeeId VARCHAR, City VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到帮助使用邮政编码“70174”的客户的雇员相对应的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.City FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.PostalCode  =  \"70174\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (PostalCode VARCHAR, SupportRepId VARCHAR), CREATE TABLE EMPLOYEE (EmployeeId VARCHAR, City VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工住多少个不同的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"
      }
    ],
    "system": "CREATE TABLE EMPLOYEE (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到员工居住的不同城市的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT city) FROM EMPLOYEE"
      }
    ],
    "system": "CREATE TABLE EMPLOYEE (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找与名为“卢”姓为“军”的客户相对应的所有发票日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"卢\" AND LastName  =  \"军\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (CustomerId VARCHAR, FirstName VARCHAR), CREATE TABLE INVOICE (CustomerId VARCHAR, InvoiceDate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名是“卢”姓是“军”的客户的发票日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"卢\" AND LastName  =  \"军\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (CustomerId VARCHAR, FirstName VARCHAR), CREATE TABLE INVOICE (CustomerId VARCHAR, InvoiceDate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有发票总额没有大于20的客户姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20"
      }
    ],
    "system": "CREATE TABLE CUSTOMER (CustomerId VARCHAR, LastName VARCHAR), CREATE TABLE Invoice (CustomerId VARCHAR, total INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发票总额不超过20的客户的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LastName FROM CUSTOMER EXCEPT SELECT T1.LastName FROM CUSTOMER AS T1 JOIN Invoice AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T2.total  >  20"
      }
    ],
    "system": "CREATE TABLE CUSTOMER (CustomerId VARCHAR, LastName VARCHAR), CREATE TABLE Invoice (CustomerId VARCHAR, total INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找居住在“巴西”的有发票的所有客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"巴西\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (FirstName VARCHAR, country VARCHAR, CustomerId VARCHAR), CREATE TABLE INVOICE (CustomerId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于来自“巴西”有发票的顾客，他们有什么不同的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"巴西\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (FirstName VARCHAR, country VARCHAR, CustomerId VARCHAR), CREATE TABLE INVOICE (CustomerId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有居住在“德国”有发票的客户的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"德国\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (Address VARCHAR, CustomerId VARCHAR, country VARCHAR), CREATE TABLE INVOICE (CustomerId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“德国”居住的有发票的客户地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"德国\""
      }
    ],
    "system": "CREATE TABLE CUSTOMER (Address VARCHAR, CustomerId VARCHAR, country VARCHAR), CREATE TABLE INVOICE (CustomerId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有员工的电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT Phone FROM EMPLOYEE"
      }
    ],
    "system": "CREATE TABLE EMPLOYEE (Phone VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个员工的电话号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Phone FROM EMPLOYEE"
      }
    ],
    "system": "CREATE TABLE EMPLOYEE (Phone VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少歌是“AAC”媒体类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC\""
      }
    ],
    "system": "CREATE TABLE MEDIATYPE (Name VARCHAR, MediaTypeId VARCHAR), CREATE TABLE TRACK (MediaTypeId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算媒体类型为“AAC”的歌曲数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC\""
      }
    ],
    "system": "CREATE TABLE MEDIATYPE (Name VARCHAR, MediaTypeId VARCHAR), CREATE TABLE TRACK (MediaTypeId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "属于“拉丁”和“流行”音乐的曲目平均持续时间是几毫秒？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"拉丁\" OR T1.Name  =  \"流行\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“拉丁”和“流行”歌曲的平均毫秒长度。"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"拉丁\" OR T1.Name  =  \"流行\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请出示为至少10位客户服务的员工姓名和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10"
      }
    ],
    "system": "CREATE TABLE CUSTOMER (FirstName VARCHAR, SupportRepId VARCHAR), CREATE TABLE EMPLOYEE (EmployeeId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "为10个或更多客户服务的员工的名字和支持代表ID的是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10"
      }
    ],
    "system": "CREATE TABLE CUSTOMER (FirstName VARCHAR, SupportRepId VARCHAR), CREATE TABLE EMPLOYEE (EmployeeId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示为不超过20名顾客服务的雇员的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20"
      }
    ],
    "system": "CREATE TABLE CUSTOMER (SupportRepId VARCHAR, LastName VARCHAR), CREATE TABLE EMPLOYEE (EmployeeId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "服务最多20名顾客的员工的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  <=  20"
      }
    ],
    "system": "CREATE TABLE CUSTOMER (SupportRepId VARCHAR, LastName VARCHAR), CREATE TABLE EMPLOYEE (EmployeeId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请按字母顺序列出所有唱片的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT Title FROM ALBUM ORDER BY Title"
      }
    ],
    "system": "CREATE TABLE ALBUM (Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的专辑标题是什么，按字母顺序排列？"
      },
      {
        "from": "assistant",
        "value": "SELECT Title FROM ALBUM ORDER BY Title"
      }
    ],
    "system": "CREATE TABLE ALBUM (Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请按字母顺序列出至少有3张专辑的所有艺术家的姓名和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name"
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列，有3张或更多张专辑的艺术家的名字和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name"
      }
    ],
    "system": "CREATE TABLE ALBUM (ArtistId VARCHAR), CREATE TABLE ARTIST (Name VARCHAR, ArtistID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有任何专辑的艺术家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId"
      }
    ],
    "system": "CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR), CREATE TABLE ALBUM (ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有发行任何专辑的艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ARTIST EXCEPT SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId"
      }
    ],
    "system": "CREATE TABLE ARTIST (Name VARCHAR, ArtistId VARCHAR), CREATE TABLE ALBUM (ArtistId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "摇滚歌曲的平均单价是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"摇滚\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR, UnitPrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出摇滚流派的歌曲的平均单价。"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"摇滚\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR, UnitPrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长和最短的流行歌曲的持续时间是多少毫秒？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"流行\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出流行音乐的最大和最小毫秒长度。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"流行\""
      }
    ],
    "system": "CREATE TABLE GENRE (Name VARCHAR, GenreId VARCHAR), CREATE TABLE TRACK (GenreId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“长沙”市的员工的出生日期是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"长沙\""
      }
    ],
    "system": "CREATE TABLE EMPLOYEE (City VARCHAR, BirthDate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在“长沙”市居住的雇员的出生日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"长沙\""
      }
    ],
    "system": "CREATE TABLE EMPLOYEE (City VARCHAR, BirthDate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有歌曲的不同单价是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(UnitPrice) FROM TRACK"
      }
    ],
    "system": "CREATE TABLE TRACK (UnitPrice VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到歌曲的不同单价。"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(UnitPrice) FROM TRACK"
      }
    ],
    "system": "CREATE TABLE TRACK (UnitPrice VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少艺术家没有专辑？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)"
      }
    ],
    "system": "CREATE TABLE ARTIST (artistid VARCHAR), CREATE TABLE ALBUM (artistid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数出没有发行专辑的艺术家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)"
      }
    ],
    "system": "CREATE TABLE ARTIST (artistid VARCHAR), CREATE TABLE ALBUM (artistid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含“雷鬼”和“摇滚”流派曲目的专辑的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  '雷鬼' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  '摇滚'"
      }
    ],
    "system": "CREATE TABLE Album (AlbumId VARCHAR, Title VARCHAR), CREATE TABLE Track (AlbumId VARCHAR, GenreID VARCHAR), CREATE TABLE Genre (GenreID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找包含“雷鬼”和“摇滚”音乐曲目的专辑标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  '雷鬼' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  '摇滚'"
      }
    ],
    "system": "CREATE TABLE Album (AlbumId VARCHAR, Title VARCHAR), CREATE TABLE Track (AlbumId VARCHAR, GenreID VARCHAR), CREATE TABLE Genre (GenreID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有的电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone FROM available_policies"
      }
    ],
    "system": "CREATE TABLE available_policies (customer_phone VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone FROM available_policies"
      }
    ],
    "system": "CREATE TABLE available_policies (customer_phone VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“人寿保险”保险单下的客户电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"人寿保险\""
      }
    ],
    "system": "CREATE TABLE available_policies (customer_phone VARCHAR, policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用代号为“人寿保险”的保险单的客户的电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  \"人寿保险\""
      }
    ],
    "system": "CREATE TABLE available_policies (customer_phone VARCHAR, policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种保险单类型在数据库中的记录最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE available_policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些保险单类型在保险单中出现最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE available_policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最流行的保险单类型的所有的客户电话号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE available_policies (customer_phone VARCHAR, policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找使用可用保险单中最常见保险单类型的客户的电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone FROM available_policies WHERE policy_type_code  =  (SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE available_policies (customer_phone VARCHAR, policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找超过4个客户使用的保险单类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"
      }
    ],
    "system": "CREATE TABLE available_policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找超过4个客户使用的保险单类型。显示他们的类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code HAVING count(*)  >  4"
      }
    ],
    "system": "CREATE TABLE available_policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到总计和平均结算金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements"
      }
    ],
    "system": "CREATE TABLE settlements (settlement_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有结算金额的总和和平均数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements"
      }
    ],
    "system": "CREATE TABLE settlements (settlement_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在首次丢失通知中已经使用了2次以上的服务的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE first_notification_of_loss (service_id VARCHAR), CREATE TABLE services (service_name VARCHAR, service_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在首次丢失通知中，哪些服务已经使用了两次以上？返回服务名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE first_notification_of_loss (service_id VARCHAR), CREATE TABLE services (service_name VARCHAR, service_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总结算金额最大的索赔的有效日期是哪一天？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE claims (claim_id VARCHAR, Effective_Date VARCHAR), CREATE TABLE settlements (claim_id VARCHAR, settlement_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到总结算金额最大的索赔。返回索赔的生效日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.Effective_Date FROM claims AS t1 JOIN settlements AS t2 ON t1.claim_id  =  t2.claim_id GROUP BY t1.claim_id ORDER BY sum(t2.settlement_amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE claims (claim_id VARCHAR, Effective_Date VARCHAR), CREATE TABLE settlements (claim_id VARCHAR, settlement_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少名为“李帅”的保险单被列出？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"李帅\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对名为“李帅”的客户使用的保险单总数进行计数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"李帅\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出最多保险单的客户名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个客户使用最多的保险单？给我客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“李帅”的客户的所有保险单类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"李帅\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE available_policies (policy_id VARCHAR, policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我“李帅”客户使用的保险单的类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"李帅\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE available_policies (policy_id VARCHAR, policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被列出的保险单最多的客户的保险单类型有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE available_policies (policy_id VARCHAR, policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出保险单中登记次数最多的客户的所有保险单类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE available_policies (policy_id VARCHAR, policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序，列出所有的服务。"
      },
      {
        "from": "assistant",
        "value": "SELECT service_name FROM services ORDER BY service_name"
      }
    ],
    "system": "CREATE TABLE services (service_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一个按字母顺序排序的所有服务名称的列表。"
      },
      {
        "from": "assistant",
        "value": "SELECT service_name FROM services ORDER BY service_name"
      }
    ],
    "system": "CREATE TABLE services (service_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少服务？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM services"
      }
    ],
    "system": "CREATE TABLE services (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算可用服务的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM services"
      }
    ],
    "system": "CREATE TABLE services (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有首次丢失通知记录的用户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE first_notification_of_loss (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户没有第一份丢失记录通知？给我客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE first_notification_of_loss (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找已经使用服务“取消保单”或服务“升级保单”的客户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"取消保单\" OR t3.service_name  =  \"升级保单\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE first_notification_of_loss (service_id VARCHAR, customer_id VARCHAR), CREATE TABLE services (service_name VARCHAR, service_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户使用了名为“取消保单”或“升级保单”的服务？给我客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"取消保单\" OR t3.service_name  =  \"升级保单\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE first_notification_of_loss (service_id VARCHAR, customer_id VARCHAR), CREATE TABLE services (service_name VARCHAR, service_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找同时使用服务“取消保单”和服务“新开保单”的客户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"取消保单\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"新开保单\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE first_notification_of_loss (service_id VARCHAR, customer_id VARCHAR), CREATE TABLE services (service_name VARCHAR, service_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户使用了名为“取消保单”的服务和\"新开保单\"的服务？给我客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"取消保单\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"新开保单\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE first_notification_of_loss (service_id VARCHAR, customer_id VARCHAR), CREATE TABLE services (service_name VARCHAR, service_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找名字包含“楠”的客户ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id FROM customers WHERE customer_name LIKE \"楠\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中有“楠”的客户的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id FROM customers WHERE customer_name LIKE \"楠\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "记录的最大和最低结算金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements"
      }
    ],
    "system": "CREATE TABLE settlements (settlement_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "求最大结算金额和最小结算金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(settlement_amount) ,  min(settlement_amount) FROM settlements"
      }
    ],
    "system": "CREATE TABLE settlements (settlement_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以ID的增加顺序列出所有客户。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户ID的有序列表是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  customer_name FROM customers ORDER BY customer_id ASC"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "检索名字包含“楠”的客户相关联的所有保险单的开始和结束日期"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"楠\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (date_closed VARCHAR, customer_id VARCHAR, date_opened VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些名字中有“楠”的客户使用的所有保险单的开始和结束日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"楠\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customers_policies (date_closed VARCHAR, customer_id VARCHAR, date_opened VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种酶？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM enzyme"
      }
    ],
    "system": "CREATE TABLE enzyme (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "酶的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM enzyme"
      }
    ],
    "system": "CREATE TABLE enzyme (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以字母降序顺序列出酶的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM enzyme ORDER BY name DESC"
      }
    ],
    "system": "CREATE TABLE enzyme (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "酶的名称有哪些，按降序排列？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM enzyme ORDER BY name DESC"
      }
    ],
    "system": "CREATE TABLE enzyme (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出能起作用的酶的名称和位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION FROM enzyme"
      }
    ],
    "system": "CREATE TABLE enzyme (LOCATION VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出的所有酶的名称和位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION FROM enzyme"
      }
    ],
    "system": "CREATE TABLE enzyme (LOCATION VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人类在线孟德尔遗传酶（OMIM）的最大值是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(OMIM) FROM enzyme"
      }
    ],
    "system": "CREATE TABLE enzyme (OMIM INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数据库中最大的OMIM值是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(OMIM) FROM enzyme"
      }
    ],
    "system": "CREATE TABLE enzyme (OMIM INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“贵阳”位置起作用的酶有关的产物、染色体和卟啉是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  '贵阳'"
      }
    ],
    "system": "CREATE TABLE enzyme (LOCATION VARCHAR, product VARCHAR, chromosome VARCHAR, porphyria VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "位于“贵阳”的酶的产物、染色体和卟啉是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product ,  chromosome ,  porphyria FROM enzyme WHERE LOCATION  =  '贵阳'"
      }
    ],
    "system": "CREATE TABLE enzyme (LOCATION VARCHAR, product VARCHAR, chromosome VARCHAR, porphyria VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不产生“淀粉酶”的酶的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM enzyme WHERE product != '淀粉酶'"
      }
    ],
    "system": "CREATE TABLE enzyme (product VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "产物不是“淀粉酶”的酶的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM enzyme WHERE product != '淀粉酶'"
      }
    ],
    "system": "CREATE TABLE enzyme (product VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在FDA记录中有“是”的药物的名称和商标名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  '是'"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR, name VARCHAR, FDA_approved VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "FDA批准的药品名称和商标名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  trade_name FROM medicine WHERE FDA_approved  =  '是'"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR, name VARCHAR, FDA_approved VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有一种名为“氨磺必利”的能起到“抑制剂”的作用的药物，其中酶的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  '氨磺必利' AND T2.interaction_type  =  '抑制剂'"
      }
    ],
    "system": "CREATE TABLE enzyme (id VARCHAR, name VARCHAR), CREATE TABLE medicine_enzyme_interaction (interaction_type VARCHAR, medicine_id VARCHAR, enzyme_id VARCHAR), CREATE TABLE medicine (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用作“抑制剂”的药物“氨磺必利”所利用的酶的名称是什么?"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  '氨磺必利' AND T2.interaction_type  =  '抑制剂'"
      }
    ],
    "system": "CREATE TABLE enzyme (id VARCHAR, name VARCHAR), CREATE TABLE medicine_enzyme_interaction (interaction_type VARCHAR, medicine_id VARCHAR, enzyme_id VARCHAR), CREATE TABLE medicine (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可以与两种或更多种酶相互作用的药物的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE medicine (Name VARCHAR, id VARCHAR), CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个药物ID，可以与一种以上酶相互作用的药物的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE medicine (Name VARCHAR, id VARCHAR), CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照与它们相互作用的酶数量的降序排列，药品的ID、名称和FDA批准状况的是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE medicine (Name VARCHAR, id VARCHAR, FDA_approved VARCHAR), CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按酶相互作用数量递减的顺序，药物的ID、名称和FDA批准状态是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.Name ,  T1.FDA_approved FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE medicine (Name VARCHAR, id VARCHAR, FDA_approved VARCHAR), CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那种可以与最多的药物进行“催化剂”相互作用的酶的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  '催化剂' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE enzyme (name VARCHAR, id VARCHAR), CREATE TABLE medicine_enzyme_interaction (interaction_type VARCHAR, enzyme_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "能作为“催化剂”与最多的药物相互作用的酶的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  '催化剂' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE enzyme (name VARCHAR, id VARCHAR), CREATE TABLE medicine_enzyme_interaction (interaction_type VARCHAR, enzyme_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“ALA合酶”和药物“阿立哌唑”的相互作用类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA合酶' AND T2.name  =  '阿立哌唑'"
      }
    ],
    "system": "CREATE TABLE medicine_enzyme_interaction (enzyme_id VARCHAR, interaction_type VARCHAR, medicine_id VARCHAR), CREATE TABLE medicine (name VARCHAR, id VARCHAR), CREATE TABLE enzyme (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“ALA合酶”的酶和名为“阿立哌唑”的药物的相互作用类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA合酶' AND T2.name  =  '阿立哌唑'"
      }
    ],
    "system": "CREATE TABLE medicine_enzyme_interaction (enzyme_id VARCHAR, interaction_type VARCHAR, medicine_id VARCHAR), CREATE TABLE medicine (name VARCHAR, id VARCHAR), CREATE TABLE enzyme (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "酶和药物之间最常见的相互作用类型是什么？有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE medicine_enzyme_interaction (interaction_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "酶和药物之间最常见的相互作用类型是什么，有多少种？"
      },
      {
        "from": "assistant",
        "value": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE medicine_enzyme_interaction (interaction_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "FDA批准状态为“没有”的药物有多少种？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM medicine WHERE FDA_approved  =  '没有'"
      }
    ],
    "system": "CREATE TABLE medicine (FDA_approved VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "FDA没有批准多少药物？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM medicine WHERE FDA_approved  =  '没有'"
      }
    ],
    "system": "CREATE TABLE medicine (FDA_approved VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "多少酶没有任何相互作用？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );"
      }
    ],
    "system": "CREATE TABLE enzyme (id VARCHAR, enzyme_id VARCHAR), CREATE TABLE medicine_enzyme_interaction (id VARCHAR, enzyme_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有相互作用的酶的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );"
      }
    ],
    "system": "CREATE TABLE enzyme (id VARCHAR, enzyme_id VARCHAR), CREATE TABLE medicine_enzyme_interaction (id VARCHAR, enzyme_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这些与至少3种酶相互作用的药物的ID和商品名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR, id VARCHAR), CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可以与至少3种酶相互作用的药物ID和商标名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING COUNT(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR, id VARCHAR), CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有任一“抑制剂”相互作用的酶的不同名称、位置和产品是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  '抑制剂'"
      }
    ],
    "system": "CREATE TABLE enzyme (product VARCHAR, id VARCHAR, name VARCHAR, location VARCHAR), CREATE TABLE medicine_enzyme_interaction (interaction_type VARCHAR, enzyme_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含“抑制剂”相互作用的酶的不同名称、位置和产品是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  '抑制剂'"
      }
    ],
    "system": "CREATE TABLE enzyme (product VARCHAR, id VARCHAR, name VARCHAR, location VARCHAR), CREATE TABLE medicine_enzyme_interaction (interaction_type VARCHAR, enzyme_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出可以与酶进行“抑制剂”和“催化剂”相互作用药物名称和商标名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  '抑制剂' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  '催化剂'"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可以作为“抑制剂”和“催化剂”与酶相互作用药物名称和商标名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  '抑制剂' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  '催化剂'"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE medicine_enzyme_interaction (medicine_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不能与产物为“生物酶”的酶相互作用的药品名称和商品名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  '生物酶'"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE medicine_enzyme_interaction (enzyme_id VARCHAR, medicine_id VARCHAR), CREATE TABLE enzyme (product VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不能与产物为“生物酶”的酶相互作用的药物名称和商标名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  '生物酶'"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE medicine_enzyme_interaction (enzyme_id VARCHAR, medicine_id VARCHAR), CREATE TABLE enzyme (product VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "药品有多少种不同的FDA批准状态？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT FDA_approved) FROM medicine"
      }
    ],
    "system": "CREATE TABLE medicine (FDA_approved VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "药品有多少种不同的FDA批准状态？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT FDA_approved) FROM medicine"
      }
    ],
    "system": "CREATE TABLE medicine (FDA_approved VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些酶名称有子链“ALA”？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM enzyme WHERE name LIKE \"物\""
      }
    ],
    "system": "CREATE TABLE enzyme (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含“ALA”的酶的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM enzyme WHERE name LIKE \"物\""
      }
    ],
    "system": "CREATE TABLE enzyme (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找找每笔交易提供的药品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个交易名提供多少药？"
      },
      {
        "from": "assistant",
        "value": "SELECT trade_name ,  count(*) FROM medicine GROUP BY trade_name"
      }
    ],
    "system": "CREATE TABLE medicine (trade_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按成立年的顺序列出所有学校和他们的绰号。"
      },
      {
        "from": "assistant",
        "value": "SELECT school ,  nickname FROM university ORDER BY founded"
      }
    ],
    "system": "CREATE TABLE university (nickname VARCHAR, founded VARCHAR, school VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据建校年排序，不同的学校和它们的昵称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT school ,  nickname FROM university ORDER BY founded"
      }
    ],
    "system": "CREATE TABLE university (nickname VARCHAR, founded VARCHAR, school VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有公立学校及其所在地。"
      },
      {
        "from": "assistant",
        "value": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  '公立'"
      }
    ],
    "system": "CREATE TABLE university (LOCATION VARCHAR, school VARCHAR, affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "公立学校有哪些，他们的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  '公立'"
      }
    ],
    "system": "CREATE TABLE university (LOCATION VARCHAR, school VARCHAR, affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "招生最大的学校是什么时候成立的？"
      },
      {
        "from": "assistant",
        "value": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (enrollment VARCHAR, founded VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回招生规模最大学校的成立年。"
      },
      {
        "from": "assistant",
        "value": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (enrollment VARCHAR, founded VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最新的非公立学校成立年。"
      },
      {
        "from": "assistant",
        "value": "SELECT founded FROM university WHERE affiliation != '公立' ORDER BY founded DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (founded VARCHAR, affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近成立的非公立学校创办年份是哪一年？"
      },
      {
        "from": "assistant",
        "value": "SELECT founded FROM university WHERE affiliation != '公立' ORDER BY founded DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (founded VARCHAR, affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学校有篮球比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT school_id) FROM basketball_match"
      }
    ],
    "system": "CREATE TABLE basketball_match (school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计有篮球比赛的学校的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT school_id) FROM basketball_match"
      }
    ],
    "system": "CREATE TABLE basketball_match (school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比赛中最高的ACC得分比是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE basketball_match (acc_percent VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在所有篮球比赛中最高ACC得分比。"
      },
      {
        "from": "assistant",
        "value": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE basketball_match (acc_percent VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在比赛中ACC得分比最低的学校的初级会议是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (Primary_conference VARCHAR, school_id VARCHAR), CREATE TABLE basketball_match (acc_percent VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最低的acc百分比的学校的初级会议。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (Primary_conference VARCHAR, school_id VARCHAR), CREATE TABLE basketball_match (acc_percent VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "创建时间最长的学校的队名和常规赛成绩是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (founded VARCHAR, school_id VARCHAR), CREATE TABLE basketball_match (ACC_Regular_Season VARCHAR, team_name VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最早成立的学校的球队名称和在常规赛期间的ACC。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (founded VARCHAR, school_id VARCHAR), CREATE TABLE basketball_match (ACC_Regular_Season VARCHAR, team_name VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找以“暨南大学”为队名的学校的位置和所有比赛得分。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  '暨南大学'"
      }
    ],
    "system": "CREATE TABLE university (location VARCHAR, school_id VARCHAR), CREATE TABLE basketball_match (All_Games VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "叫“暨南大学”的学校的所有比赛分数和地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  '暨南大学'"
      }
    ],
    "system": "CREATE TABLE university (location VARCHAR, school_id VARCHAR), CREATE TABLE basketball_match (All_Games VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1850年以前建立的大学的平均招生人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
      }
    ],
    "system": "CREATE TABLE university (founded INTEGER, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回1850年以前成立的大学的平均招生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(enrollment) FROM university WHERE founded  <  1850"
      }
    ],
    "system": "CREATE TABLE university (founded INTEGER, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示最古老学院的招生和初级会议。"
      },
      {
        "from": "assistant",
        "value": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (enrollment VARCHAR, founded VARCHAR, primary_conference VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最早建立的那所大学的招生和初级会议是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1"
      }
    ],
    "system": "CREATE TABLE university (enrollment VARCHAR, founded VARCHAR, primary_conference VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学校的招生总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(enrollment) ,  min(enrollment) FROM university"
      }
    ],
    "system": "CREATE TABLE university (enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有学校的总入学人数和最少入学人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(enrollment) ,  min(enrollment) FROM university"
      }
    ],
    "system": "CREATE TABLE university (enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不同附属类型学校的入学学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"
      }
    ],
    "system": "CREATE TABLE university (affiliation VARCHAR, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个附属类型的大学的总入学人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(enrollment) ,  affiliation FROM university GROUP BY affiliation"
      }
    ],
    "system": "CREATE TABLE university (affiliation VARCHAR, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学校不参加篮球比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"
      }
    ],
    "system": "CREATE TABLE university (school_id VARCHAR), CREATE TABLE basketball_match (school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计不参加篮球比赛的大学数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)"
      }
    ],
    "system": "CREATE TABLE university (school_id VARCHAR), CREATE TABLE basketball_match (school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些在1850年之后成立或公立的学校。"
      },
      {
        "from": "assistant",
        "value": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  '公立'"
      }
    ],
    "system": "CREATE TABLE university (founded INTEGER, school VARCHAR, affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1850之前或是公立的学校是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  '公立'"
      }
    ],
    "system": "CREATE TABLE university (founded INTEGER, school VARCHAR, affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有多少不同的附属类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT affiliation) FROM university"
      }
    ],
    "system": "CREATE TABLE university (affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计不同附属类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT affiliation) FROM university"
      }
    ],
    "system": "CREATE TABLE university (affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到多少学校的位置含有“上海”。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM university WHERE LOCATION LIKE \"上海\""
      }
    ],
    "system": "CREATE TABLE university (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少大学的地址有包含“上海”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM university WHERE LOCATION LIKE \"上海\""
      }
    ],
    "system": "CREATE TABLE university (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找那些入学人数小于平均入学人数的大学的队伍名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"
      }
    ],
    "system": "CREATE TABLE university (enrollment INTEGER), CREATE TABLE basketball_match (team_name VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "招生人数低于平均水平的大学球队的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)"
      }
    ],
    "system": "CREATE TABLE university (enrollment INTEGER), CREATE TABLE basketball_match (team_name VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个附属机构类型有比20000多的入学人数的大学的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation"
      }
    ],
    "system": "CREATE TABLE university (affiliation VARCHAR, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的附属类型？每种类型有20000以上入学人数的不同的附属学校有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation"
      }
    ],
    "system": "CREATE TABLE university (affiliation VARCHAR, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在1850年后建立的每个附属类型的学院的入学学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation"
      }
    ],
    "system": "CREATE TABLE university (founded INTEGER, Enrollment INTEGER, affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些不同的附属形式，每种类型在1850年后建立的学校的总招生人数是多少，？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation"
      }
    ],
    "system": "CREATE TABLE university (founded INTEGER, Enrollment INTEGER, affiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学校最大的招生人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Enrollment) FROM university"
      }
    ],
    "system": "CREATE TABLE university (Enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有学校的最大入学人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Enrollment) FROM university"
      }
    ],
    "system": "CREATE TABLE university (Enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有关于篮球比赛的信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM basketball_match"
      }
    ],
    "system": "CREATE TABLE basketball_match (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "篮球比赛的全部信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM basketball_match"
      }
    ],
    "system": "CREATE TABLE basketball_match (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出篮球比赛中所有球队的名字，按主场得分的顺序递减排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"
      }
    ],
    "system": "CREATE TABLE basketball_match (team_name VARCHAR, All_Home VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按篮球比赛主场得分降序排列，所有球队的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT team_name FROM basketball_match ORDER BY All_Home DESC"
      }
    ],
    "system": "CREATE TABLE basketball_match (team_name VARCHAR, All_Home VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2002到2004年间推出的模型名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Model_name FROM chip_model WHERE Launch_year BETWEEN 2002 AND 2004;"
      }
    ],
    "system": "CREATE TABLE chip_model (Launch_year INTEGER, Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种型号的RAM最少？列出模型名称和RAM的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Model_name ,  RAM_MiB FROM chip_model ORDER BY RAM_MiB ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE chip_model (RAM_MiB VARCHAR, Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "硬件型号为“LG-P760”的手机的芯片型号和屏幕模式是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT chip_model ,  screen_mode FROM phone WHERE Hardware_Model_name = \"LG-P760\";"
      }
    ],
    "system": "CREATE TABLE phone (screen_mode VARCHAR, chip_model VARCHAR, Hardware_Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“小米”生产了多少款手机硬件？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM phone WHERE Company_name = \"小米\";"
      }
    ],
    "system": "CREATE TABLE phone (Company_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“小米”生产的手机最大和最小RAM尺寸是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.RAM_MiB) ,  min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"小米\";"
      }
    ],
    "system": "CREATE TABLE chip_model (RAM_MiB INTEGER, Model_name VARCHAR), CREATE TABLE phone (Company_name VARCHAR, chip_model VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“小米”生产的手机的平均ROM尺寸是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"小米\";"
      }
    ],
    "system": "CREATE TABLE chip_model (Model_name VARCHAR, ROM_MiB INTEGER), CREATE TABLE phone (Company_name VARCHAR, chip_model VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有在2002年推出或RAM大于32的手机的硬件型号名称和公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 OR T1.RAM_MiB  >  32;"
      }
    ],
    "system": "CREATE TABLE chip_model (Launch_year VARCHAR, RAM_MiB INTEGER, Model_name VARCHAR), CREATE TABLE phone (Company_name VARCHAR, chip_model VARCHAR, Hardware_Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在其认证类型中有“全权”字样的所有手机。列出硬件模型名称和公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE '全权';"
      }
    ],
    "system": "CREATE TABLE phone (Company_name VARCHAR, Accreditation_type VARCHAR, Hardware_Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找硬件型号为“LG-P760”的电话屏幕的Char单元、像素和硬件颜色。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = \"LG-P760\";"
      }
    ],
    "system": "CREATE TABLE screen_mode (Graphics_mode VARCHAR, Hardware_colours VARCHAR, Pixels VARCHAR, Char_cells VARCHAR), CREATE TABLE phone (screen_mode VARCHAR, Hardware_Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出屏幕模式类型为“图像”的电话的硬件型号名称和公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"图像\";"
      }
    ],
    "system": "CREATE TABLE screen_mode (Graphics_mode VARCHAR, Type VARCHAR), CREATE TABLE phone (screen_mode VARCHAR, Company_name VARCHAR, Hardware_Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找手机型号最少的公司名称。列出该公司生产的手机型号和公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Company_name ,  count(*) FROM phone GROUP BY Company_name ORDER BY count(*) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE phone (Company_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出生产一个以上手机型号的公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;"
      }
    ],
    "system": "CREATE TABLE phone (Company_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出屏幕模式中使用的KB的最大、最小和平均数。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(used_kb) , min(used_kb) , avg(used_kb) FROM screen_mode;"
      }
    ],
    "system": "CREATE TABLE screen_mode (used_kb INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出2002年推出的具有最高RAM大小的手机型号的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T1.Launch_year = 2002 ORDER BY T1.RAM_MiB DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE chip_model (Launch_year VARCHAR, RAM_MiB VARCHAR, Model_name VARCHAR), CREATE TABLE phone (chip_model VARCHAR, Hardware_Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“LG-P760”的硬件模型的WiFi和屏幕模式类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.WiFi , T3.Type FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T2.Hardware_Model_name = \"LG-P760\";"
      }
    ],
    "system": "CREATE TABLE chip_model (WiFi VARCHAR, Model_name VARCHAR), CREATE TABLE phone (screen_mode VARCHAR, chip_model VARCHAR, Hardware_Model_name VARCHAR), CREATE TABLE screen_mode (Graphics_mode VARCHAR, Type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出屏幕模式类型为“文本”或RAM大于32的手机的硬件型号名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hardware_Model_name FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model JOIN screen_mode AS T3 ON T2.screen_mode = T3.Graphics_mode WHERE T3.Type = \"文本\" OR T1.RAM_MiB  >  32;"
      }
    ],
    "system": "CREATE TABLE chip_model (RAM_MiB INTEGER, Model_name VARCHAR), CREATE TABLE phone (screen_mode VARCHAR, chip_model VARCHAR, Hardware_Model_name VARCHAR), CREATE TABLE screen_mode (Graphics_mode VARCHAR, Type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“小米”生产的或屏幕模式类型为“图像”的手机的硬件型号名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"图像\" OR t2.Company_name  =  \"小米\""
      }
    ],
    "system": "CREATE TABLE screen_mode (Graphics_mode VARCHAR, Type VARCHAR), CREATE TABLE phone (screen_mode VARCHAR, Hardware_Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“小米”生产但是其屏幕模式类型不是“文本”的电话的硬件型号名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"小米\" AND T1.Type != \"文本\";"
      }
    ],
    "system": "CREATE TABLE screen_mode (Graphics_mode VARCHAR, Type VARCHAR), CREATE TABLE phone (screen_mode VARCHAR, Hardware_Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出屏幕使用在10到15KB之间的手机的硬件型号和公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.used_kb BETWEEN 10 AND 15;"
      }
    ],
    "system": "CREATE TABLE screen_mode (Graphics_mode VARCHAR, used_kb INTEGER), CREATE TABLE phone (screen_mode VARCHAR, Company_name VARCHAR, Hardware_Model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个认证类型的电话数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type"
      }
    ],
    "system": "CREATE TABLE phone (Accreditation_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种认证类型有多少手机？"
      },
      {
        "from": "assistant",
        "value": "SELECT Accreditation_type ,  count(*) FROM phone GROUP BY Accreditation_type"
      }
    ],
    "system": "CREATE TABLE phone (Accreditation_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到超过3部手机使用的认证级别。"
      },
      {
        "from": "assistant",
        "value": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE phone (Accreditation_level VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有芯片模型的信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM chip_model"
      }
    ],
    "system": "CREATE TABLE chip_model (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少型号没有WiFi功能？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM chip_model WHERE wifi  =  '没有'"
      }
    ],
    "system": "CREATE TABLE chip_model (wifi VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计没有WiFi的芯片模型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM chip_model WHERE wifi  =  '没有'"
      }
    ],
    "system": "CREATE TABLE chip_model (wifi VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照他们推出年度顺序列出所有型号名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT model_name FROM chip_model ORDER BY launch_year"
      }
    ],
    "system": "CREATE TABLE chip_model (model_name VARCHAR, launch_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找从未被任何手机使用的芯片模型的平均ram大小。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)"
      }
    ],
    "system": "CREATE TABLE chip_model (RAM_MiB INTEGER, chip_model VARCHAR, model_name VARCHAR), CREATE TABLE phone (RAM_MiB INTEGER, chip_model VARCHAR, model_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找未被任何具有完全认证类型的手机使用的芯片型号的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type  =  '全权'"
      }
    ],
    "system": "CREATE TABLE chip_model (model_name VARCHAR, chip_model VARCHAR, Accreditation_type VARCHAR), CREATE TABLE phone (model_name VARCHAR, chip_model VARCHAR, Accreditation_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有完全认证类型的电话和具有临时认证类型的电话所使用的屏幕模式的像素。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  '临时' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  '全权'"
      }
    ],
    "system": "CREATE TABLE screen_mode (Graphics_mode VARCHAR, pixels VARCHAR), CREATE TABLE phone (screen_mode VARCHAR, Accreditation_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一共有多少个国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM country"
      }
    ],
    "system": "CREATE TABLE country (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计国家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM country"
      }
    ],
    "system": "CREATE TABLE country (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有国家的国家名称和首都。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country_name ,  Capital FROM country"
      }
    ],
    "system": "CREATE TABLE country (Capital VARCHAR, Country_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个国家的名字和首都是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country_name ,  Capital FROM country"
      }
    ],
    "system": "CREATE TABLE country (Capital VARCHAR, Country_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示包含\"英语\"一词的所有官方母语。"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"英语\""
      }
    ],
    "system": "CREATE TABLE country (Official_native_language VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么官方的母语包含字符串\"英语\"？"
      },
      {
        "from": "assistant",
        "value": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"英语\""
      }
    ],
    "system": "CREATE TABLE country (Official_native_language VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有不同地方的比赛。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT POSITION FROM match_season"
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有什么不同的地方的赛季？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT POSITION FROM match_season"
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示来自“浙江大学”的球员。"
      },
      {
        "from": "assistant",
        "value": "SELECT Player FROM match_season WHERE College  =  \"浙江大学\""
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR, Player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“浙江大学”的球员是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT Player FROM match_season WHERE College  =  \"浙江大学\""
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR, Player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示来自“浙江大学”或“武汉大学”大学的球员的不同位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"浙江大学\" OR College  =  \"武汉大学\""
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR, College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“浙江大学”或“武汉大学”学院的球员有什么不同的位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"浙江大学\" OR College  =  \"武汉大学\""
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR, College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示位置是后卫的球员的选秀号码和选秀类别。"
      },
      {
        "from": "assistant",
        "value": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"后卫\""
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR, Draft_Pick_Number VARCHAR, Draft_Class VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "后卫位置球员的选秀号码和选秀类别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Draft_Pick_Number ,  Draft_Class FROM match_season WHERE POSITION  =  \"后卫\""
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR, Draft_Pick_Number VARCHAR, Draft_Class VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个不同的球队参与赛季？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Team) FROM match_season"
      }
    ],
    "system": "CREATE TABLE match_season (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计赛季不同球队的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Team) FROM match_season"
      }
    ],
    "system": "CREATE TABLE match_season (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示球员和参加的年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT Player ,  Years_Played FROM player"
      }
    ],
    "system": "CREATE TABLE player (Player VARCHAR, Years_Played VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的球员是谁，他们参加了多少年？"
      },
      {
        "from": "assistant",
        "value": "SELECT Player ,  Years_Played FROM player"
      }
    ],
    "system": "CREATE TABLE player (Player VARCHAR, Years_Played VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有球队名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM Team"
      }
    ],
    "system": "CREATE TABLE Team (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有球队的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM Team"
      }
    ],
    "system": "CREATE TABLE Team (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示赛季、球员和球员所属国家的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country"
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Country_name VARCHAR), CREATE TABLE match_season (Country VARCHAR, Season VARCHAR, Player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个球员，他们的名字、赛季和所来自的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country"
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Country_name VARCHAR), CREATE TABLE match_season (Country VARCHAR, Season VARCHAR, Player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些球员来自“印度尼西亚”？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"印度尼西亚\""
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Country_name VARCHAR), CREATE TABLE match_season (Country VARCHAR, Player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“印度尼西亚”的球员是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Player FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Country_name  =  \"印度尼西亚\""
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Country_name VARCHAR), CREATE TABLE match_season (Country VARCHAR, Player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自首都为“都柏林”的国家的球员有什么不同的位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"都柏林\""
      }
    ],
    "system": "CREATE TABLE country (Capital VARCHAR, Country_id VARCHAR), CREATE TABLE match_season (Country VARCHAR, Position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出为首都为“都柏林”的国家效力的球员的不同位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"都柏林\""
      }
    ],
    "system": "CREATE TABLE country (Capital VARCHAR, Country_id VARCHAR), CREATE TABLE match_season (Country VARCHAR, Position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“同济”或“武汉大学”大学的球员所在国家的官方语言是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"同济\" OR T2.College  =  \"武汉大学\""
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Official_native_language VARCHAR), CREATE TABLE match_season (Country VARCHAR, College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回那些有“同济”或“武汉大学”大学球员的国家的官方母语。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Official_native_language FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.College  =  \"同济\" OR T2.College  =  \"武汉大学\""
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Official_native_language VARCHAR), CREATE TABLE match_season (Country VARCHAR, College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在防守位置的球员所在的国家中，有多少种不同的官方语言？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"后卫\""
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Official_native_language VARCHAR), CREATE TABLE match_season (Country VARCHAR, Position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算后卫位置的球员所属国家的不同官方语言的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"后卫\""
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Official_native_language VARCHAR), CREATE TABLE match_season (Country VARCHAR, Position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示球员的赛季、球员和球队的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id"
      }
    ],
    "system": "CREATE TABLE match_season (Season VARCHAR, Player VARCHAR, Team VARCHAR), CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的球员是谁，他们参与什么赛季，他们所在的球队叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Season ,  T1.Player ,  T2.Name FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id"
      }
    ],
    "system": "CREATE TABLE match_season (Season VARCHAR, Player VARCHAR, Team VARCHAR), CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示用“杭州绿城”为队名的队员的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"杭州绿城\""
      }
    ],
    "system": "CREATE TABLE match_season (Team VARCHAR, Position VARCHAR), CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“杭州绿城”球队的队员的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"杭州绿城\""
      }
    ],
    "system": "CREATE TABLE match_season (Team VARCHAR, Position VARCHAR), CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“重庆力帆”球队的球员来自多少不同的学院？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"重庆力帆\""
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR, Team VARCHAR), CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算为“重庆力帆”队效力的球员不同学院的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T1.College) FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"重庆力帆\""
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR, Team VARCHAR), CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示为“重庆力帆”队的球员和效力年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"重庆力帆\""
      }
    ],
    "system": "CREATE TABLE player (Player VARCHAR, Team VARCHAR, Years_Played VARCHAR), CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "为“重庆力帆”队效力的球员有哪些？每人效力多少年？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"重庆力帆\""
      }
    ],
    "system": "CREATE TABLE player (Player VARCHAR, Team VARCHAR, Years_Played VARCHAR), CREATE TABLE team (Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示球员的位置和相应的球员数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION"
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个位置有多少球员？"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION ,  COUNT(*) FROM match_season GROUP BY POSITION"
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示国家名称和相应的球员数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name"
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Country_name VARCHAR), CREATE TABLE match_season (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个国家有多少球员？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country_name ,  COUNT(*) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country GROUP BY T1.Country_name"
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Country_name VARCHAR), CREATE TABLE match_season (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按学院的字母顺序排列，返回所有球员。"
      },
      {
        "from": "assistant",
        "value": "SELECT player FROM match_season ORDER BY College ASC"
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR, player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照学院的字母顺序排列，在赛季参赛的的运动员都是哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT player FROM match_season ORDER BY College ASC"
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR, player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示球员在赛季中最常见的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在赛季球员最常见的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION FROM match_season GROUP BY POSITION ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE match_season (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示赛季中前3最常见学院的球员。"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多队员的三所学院是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM match_season GROUP BY College ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两名球员的学院名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有两个或两个以上球员的所有学院的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照字母顺序显示至少有两个球员的学院名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序降序排列的拥有两个或更多玩家的大学的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2 ORDER BY College DESC"
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有比赛记录的球队名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)"
      }
    ],
    "system": "CREATE TABLE team (Team VARCHAR, Team_id VARCHAR, Name VARCHAR), CREATE TABLE match_season (Team VARCHAR, Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回没有比赛季节记录的球队的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM team WHERE Team_id NOT IN (SELECT Team FROM match_season)"
      }
    ],
    "system": "CREATE TABLE team (Team VARCHAR, Team_id VARCHAR, Name VARCHAR), CREATE TABLE match_season (Team VARCHAR, Team_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家既有前锋球员又有后卫球员？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"前锋\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"后卫\""
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Country_name VARCHAR), CREATE TABLE match_season (Country VARCHAR, Position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有前锋位置的球员以及后卫位置的球员的国家名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"前锋\" INTERSECT SELECT T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"后卫\""
      }
    ],
    "system": "CREATE TABLE country (Country_id VARCHAR, Country_name VARCHAR), CREATE TABLE match_season (Country VARCHAR, Position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪所学校有中场球员和后卫球员？"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM match_season WHERE POSITION  =  \"中场\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"后卫\""
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR, POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回那些拥有中场球员和后卫球员的学校。"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM match_season WHERE POSITION  =  \"中场\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"后卫\""
      }
    ],
    "system": "CREATE TABLE match_season (College VARCHAR, POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那儿有多少登山者？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM climber"
      }
    ],
    "system": "CREATE TABLE climber (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算登山者的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM climber"
      }
    ],
    "system": "CREATE TABLE climber (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按降序列出登山者名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM climber ORDER BY Points DESC"
      }
    ],
    "system": "CREATE TABLE climber (Name VARCHAR, Points VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按降序排列，登山者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM climber ORDER BY Points DESC"
      }
    ],
    "system": "CREATE TABLE climber (Name VARCHAR, Points VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出那些不是“瑞士”的登山者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM climber WHERE Country != \"瑞士\""
      }
    ],
    "system": "CREATE TABLE climber (Country VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是来自“瑞士”国家的登山者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM climber WHERE Country != \"瑞士\""
      }
    ],
    "system": "CREATE TABLE climber (Country VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "英国登山者的最大点数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Points) FROM climber WHERE Country  =  \"英国\""
      }
    ],
    "system": "CREATE TABLE climber (Country VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回来自英国的登山者的最大点数。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Points) FROM climber WHERE Country  =  \"英国\""
      }
    ],
    "system": "CREATE TABLE climber (Country VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "登山者来自多少不同的国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT Country) FROM climber"
      }
    ],
    "system": "CREATE TABLE climber (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算登山者来自的不同国家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT Country) FROM climber"
      }
    ],
    "system": "CREATE TABLE climber (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母上升顺序的山脉名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM mountain ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE mountain (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序，给出山的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM mountain ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE mountain (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "高度大于5000的山所属于的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM mountain WHERE Height  >  5000"
      }
    ],
    "system": "CREATE TABLE mountain (Country VARCHAR, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回高度大于5000的山的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM mountain WHERE Height  >  5000"
      }
    ],
    "system": "CREATE TABLE mountain (Country VARCHAR, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高的山叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE mountain (Height VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最高的山的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE mountain (Height VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出前3声望最高山的不同山脉。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE mountain (Prominence VARCHAR, Range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "3个突出最高的山有什么不同的山脉？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Range FROM mountain ORDER BY Prominence DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE mountain (Prominence VARCHAR, Range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示登山者的名字和山的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Name VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "登山者的名字和他们所攀登的山的对应名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Name VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示登山者的名字和他们攀登的高山的高度。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Name VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "登山者的名字和他们所攀登的山的相应高度是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID"
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Name VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示分数最好的登山者攀登的最大高度。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Points VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "分数最高的登山者所爬的山的高度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Height FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID ORDER BY T1.Points DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Points VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示来自“德国”国家的登山者所攀登的山的不同名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"德国\""
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Country VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“德国”国家的登山者登上的不同山叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"德国\""
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Country VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示登山者在“乌干达”爬山所用的时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"乌干达\""
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Time VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“乌干达”，爬山的登山者使用的时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"乌干达\""
      }
    ],
    "system": "CREATE TABLE climber (Mountain_ID VARCHAR, Time VARCHAR), CREATE TABLE mountain (Mountain_ID VARCHAR, Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示国家和各国的登山者人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country"
      }
    ],
    "system": "CREATE TABLE climber (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个国家有多少登山者？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country ,  COUNT(*) FROM climber GROUP BY Country"
      }
    ],
    "system": "CREATE TABLE climber (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出拥有一座以上山的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE mountain (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家拥有一座以上的山？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE mountain (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有登山者的山的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)"
      }
    ],
    "system": "CREATE TABLE mountain (Mountain_ID VARCHAR, Name VARCHAR), CREATE TABLE climber (Mountain_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有登山者攀爬的山是什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM mountain WHERE Mountain_ID NOT IN (SELECT Mountain_ID FROM climber)"
      }
    ],
    "system": "CREATE TABLE mountain (Mountain_ID VARCHAR, Name VARCHAR), CREATE TABLE climber (Mountain_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示那些高度有超过5600和低于5200的高山的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200"
      }
    ],
    "system": "CREATE TABLE mountain (Country VARCHAR, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家有高于5600的山和低于5200的山？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200"
      }
    ],
    "system": "CREATE TABLE mountain (Country VARCHAR, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示山数量最多的山脉。"
      },
      {
        "from": "assistant",
        "value": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE mountain (Range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个山脉包含最多的山？"
      },
      {
        "from": "assistant",
        "value": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE mountain (Range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示高度超过5000或突出超过1000的山名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000"
      }
    ],
    "system": "CREATE TABLE mountain (Prominence INTEGER, Name VARCHAR, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过5000的高度或超过1000的突出的山叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000"
      }
    ],
    "system": "CREATE TABLE mountain (Prominence INTEGER, Name VARCHAR, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少健美运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM body_builder"
      }
    ],
    "system": "CREATE TABLE body_builder (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按升序列出健美运动员的总分。"
      },
      {
        "from": "assistant",
        "value": "SELECT Total FROM body_builder ORDER BY Total ASC"
      }
    ],
    "system": "CREATE TABLE body_builder (Total VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以抓举分数升序列出健美运动员的抓举得分和挺举得分。"
      },
      {
        "from": "assistant",
        "value": "SELECT Snatch ,  Clean_Jerk FROM body_builder ORDER BY Snatch ASC"
      }
    ],
    "system": "CREATE TABLE body_builder (Clean_Jerk VARCHAR, Snatch VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "健美运动员的平均抓举分数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Snatch) FROM body_builder"
      }
    ],
    "system": "CREATE TABLE body_builder (Snatch INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总分最高的健美运动员的挺举成绩是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Clean_Jerk FROM body_builder ORDER BY Total DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE body_builder (Clean_Jerk VARCHAR, Total VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按身高升序，人的生日是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Birth_Date FROM People ORDER BY Height ASC"
      }
    ],
    "system": "CREATE TABLE People (Height VARCHAR, Birth_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "健美运动员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE body_builder (People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总分高于300的健美运动员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  300"
      }
    ],
    "system": "CREATE TABLE body_builder (People_ID VARCHAR, Total INTEGER), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "体重最大的健美运动员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE body_builder (People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总分最高的健美运动员的出生日期和出生地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Birth_Date ,  T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE body_builder (People_ID VARCHAR, Total VARCHAR), CREATE TABLE people (Birth_Place VARCHAR, People_ID VARCHAR, Birth_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总分小于315的健美运动员身高是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  <  315"
      }
    ],
    "system": "CREATE TABLE body_builder (People_ID VARCHAR, Total INTEGER), CREATE TABLE people (People_ID VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "身高大于200的健美运动员平均总分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Total) FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  200"
      }
    ],
    "system": "CREATE TABLE body_builder (People_ID VARCHAR, Total INTEGER), CREATE TABLE people (People_ID VARCHAR, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按总分降序排列，健美运动员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC"
      }
    ],
    "system": "CREATE TABLE body_builder (People_ID VARCHAR, Total VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每个出生地以及那里的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Birth_Place ,  COUNT(*) FROM people GROUP BY Birth_Place"
      }
    ],
    "system": "CREATE TABLE people (Birth_Place VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "出生人数最多的出生地是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (Birth_Place VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少两个人共有的出生地是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE people (Birth_Place VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按身高降序列出人的身高和体重。"
      },
      {
        "from": "assistant",
        "value": "SELECT Height ,  Weight FROM people ORDER BY Height DESC"
      }
    ],
    "system": "CREATE TABLE people (Height VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个健美运动员的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM body_builder"
      }
    ],
    "system": "CREATE TABLE body_builder (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出那些不是健美运动员的人的名字和出生地。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id"
      }
    ],
    "system": "CREATE TABLE people (people_id VARCHAR, Name VARCHAR, birth_place VARCHAR), CREATE TABLE body_builder (people_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的出生地？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Birth_Place) FROM people"
      }
    ],
    "system": "CREATE TABLE people (Birth_Place VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人不是健美运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM people WHERE people_id NOT IN (SELECT People_ID FROM body_builder)"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, people_id VARCHAR), CREATE TABLE body_builder (People_ID VARCHAR, people_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出那些抓举成绩高于140分或身高高于200的健美运动员的体重。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200;"
      }
    ],
    "system": "CREATE TABLE body_builder (people_id VARCHAR, snatch INTEGER), CREATE TABLE people (height INTEGER, people_id VARCHAR, weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些生日里包含\"一月\"的健美运动员的总分数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"一月\";"
      }
    ],
    "system": "CREATE TABLE body_builder (people_id VARCHAR, total VARCHAR), CREATE TABLE people (people_id VARCHAR, Birth_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小抓举分数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(snatch) FROM body_builder"
      }
    ],
    "system": "CREATE TABLE body_builder (snatch INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少次选举？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM election"
      }
    ],
    "system": "CREATE TABLE election (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以降序列出选举的选票。"
      },
      {
        "from": "assistant",
        "value": "SELECT Votes FROM election ORDER BY Votes DESC"
      }
    ],
    "system": "CREATE TABLE election (Votes VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出选举日期和投票率。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date ,  Vote_Percent FROM election"
      }
    ],
    "system": "CREATE TABLE election (Date VARCHAR, Vote_Percent VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选举的最低和最高票数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election"
      }
    ],
    "system": "CREATE TABLE election (Vote_Percent INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "代表的姓名和政党是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Party FROM representative"
      }
    ],
    "system": "CREATE TABLE representative (Name VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是“民主党”党人的代表的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM Representative WHERE Party != \"民主党\""
      }
    ],
    "system": "CREATE TABLE Representative (Name VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上海”州或“江西”代表的有效期是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Lifespan FROM representative WHERE State  =  \"上海\" OR State  =  \"江西\""
      }
    ],
    "system": "CREATE TABLE representative (State VARCHAR, Lifespan VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "代表姓名和他们参加的选举日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID"
      }
    ],
    "system": "CREATE TABLE election (Representative_ID VARCHAR, Date VARCHAR), CREATE TABLE representative (Representative_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在选举中超过10000票的代表的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE Votes  >  10000"
      }
    ],
    "system": "CREATE TABLE election (Representative_ID VARCHAR), CREATE TABLE representative (Representative_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按投票下降顺序，代表的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC"
      }
    ],
    "system": "CREATE TABLE election (Representative_ID VARCHAR), CREATE TABLE representative (Representative_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "票数最少的代表属于哪一个党派？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE election (Representative_ID VARCHAR), CREATE TABLE representative (Representative_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按投票率的降序排列，代表的有效期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Lifespan FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY Vote_Percent DESC"
      }
    ],
    "system": "CREATE TABLE election (Representative_ID VARCHAR), CREATE TABLE representative (Representative_ID VARCHAR, Lifespan VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“民主党”党代表的平均票数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE T2.Party  =  \"民主党\""
      }
    ],
    "system": "CREATE TABLE election (Votes INTEGER, Representative_ID VARCHAR), CREATE TABLE representative (Representative_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "代表的不同党派是什么？显示各党的党名和代表人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party"
      }
    ],
    "system": "CREATE TABLE representative (Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "代表人数最多的政党是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE representative (Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么党派至少有三名代表？"
      },
      {
        "from": "assistant",
        "value": "SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE representative (Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些州至少有两名代表？"
      },
      {
        "from": "assistant",
        "value": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE representative (State VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有参加这里列出的选举的代表的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)"
      }
    ],
    "system": "CREATE TABLE representative (Representative_ID VARCHAR, Name VARCHAR), CREATE TABLE election (Representative_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在“上海”州和“湖北”州都有代表的政党。"
      },
      {
        "from": "assistant",
        "value": "SELECT Party FROM representative WHERE State  =  \"上海\" INTERSECT SELECT Party FROM representative WHERE State  =  \"湖北\""
      }
    ],
    "system": "CREATE TABLE representative (State VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的党派？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Party) FROM representative"
      }
    ],
    "system": "CREATE TABLE representative (Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少套公寓预订？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Apartment_Bookings"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计公寓预订的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Apartment_Bookings"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有公寓预订的开始日期和结束日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, booking_end_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个公寓预订的开始日期和结束日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, booking_end_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有不同的建筑描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT building_description FROM Apartment_Buildings"
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一张清单，列出所有不同的建筑描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT building_description FROM Apartment_Buildings"
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示由“张力”管理的建筑物的缩写。"
      },
      {
        "from": "assistant",
        "value": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"张力\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_short_name VARCHAR, building_manager VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“张力”管理的建筑物是什么？给我缩写。"
      },
      {
        "from": "assistant",
        "value": "SELECT building_short_name FROM Apartment_Buildings WHERE building_manager\t =  \"张力\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_short_name VARCHAR, building_manager VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“王刚”管理的所有建筑物的地址和电话。"
      },
      {
        "from": "assistant",
        "value": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"王刚\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_address VARCHAR, building_phone VARCHAR, building_manager VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“王刚”管理的建筑物的地址和电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"王刚\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_address VARCHAR, building_phone VARCHAR, building_manager VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含“号码”一词的建筑物全称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"号码\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_full_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到包含“号码”一词的所有建筑物的全称。"
      },
      {
        "from": "assistant",
        "value": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"号码\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_full_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有公寓的浴室的最小和最大数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments"
      }
    ],
    "system": "CREATE TABLE Apartments (bathroom_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我所有房间里最小和最大的浴室数。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments"
      }
    ],
    "system": "CREATE TABLE Apartments (bathroom_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有公寓的平均卧室数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(bedroom_count) FROM Apartments"
      }
    ],
    "system": "CREATE TABLE Apartments (bedroom_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有公寓的平均卧室数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(bedroom_count) FROM Apartments"
      }
    ],
    "system": "CREATE TABLE Apartments (bedroom_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个公寓的公寓号和房间数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_number ,  room_count FROM Apartments"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_number VARCHAR, room_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个公寓的公寓号和房间数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_number ,  room_count FROM Apartments"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_number VARCHAR, room_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "类型代码为“套房”的公寓的平均房间数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"套房\""
      }
    ],
    "system": "CREATE TABLE Apartments (room_count INTEGER, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到具有“套房”类型代码的公寓的平均房间数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(room_count) FROM Apartments WHERE apt_type_code  =  \"套房\""
      }
    ],
    "system": "CREATE TABLE Apartments (room_count INTEGER, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回类型代码为“公寓”的公寓号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"公寓\""
      }
    ],
    "system": "CREATE TABLE Apartments (apt_number VARCHAR, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些公寓有“公寓”的代号？把他们的公寓号码给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"公寓\""
      }
    ],
    "system": "CREATE TABLE Apartments (apt_number VARCHAR, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有客人的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT guest_first_name ,  guest_last_name FROM Guests"
      }
    ],
    "system": "CREATE TABLE Guests (guest_last_name VARCHAR, guest_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有客人的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT guest_first_name ,  guest_last_name FROM Guests"
      }
    ],
    "system": "CREATE TABLE Guests (guest_last_name VARCHAR, guest_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以性别代码“男性”返回所有客人的出生日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"男性\""
      }
    ],
    "system": "CREATE TABLE Guests (date_of_birth VARCHAR, gender_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“男性”性别的客人出生日期是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_birth FROM Guests WHERE gender_code  =  \"男性\""
      }
    ],
    "system": "CREATE TABLE Guests (date_of_birth VARCHAR, gender_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有公寓预订的公寓号码、开始日期和结束日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个公寓的预订号码是多少，开始日期和结束日期是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.apt_number ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“双人房”型公寓的预订开始和结束日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"双人房\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (apt_type_code VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有类型代码“双人房”的公寓的预订开始日期和结束日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_type_code  =  \"双人房\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (apt_type_code VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有两间以上卧室的公寓的预订开始和结束日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (bedroom_count INTEGER, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有两个以上卧室的公寓的预订开始日期和结束日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (bedroom_count INTEGER, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "公寓号码为“634”的公寓的预订状态码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"634\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我“634”公寓的预订状态代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"634\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有状态码“确认”的预订的公寓的不同公寓号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"确认\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些公寓预订有状态代码“确认”？返回他们的公寓号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"确认\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有预订状态码“临时”的公寓的平均房间数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"临时\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Apartments (apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预订状态代码为“临时”的公寓的平均房间数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"临时\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Apartments (apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示客人的名字，开始日期和结束日期的所有公寓预订。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, guest_id VARCHAR), CREATE TABLE Guests (guest_id VARCHAR, guest_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预订每套公寓的客人姓名、开始日期和结束日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.guest_first_name ,  T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, guest_id VARCHAR), CREATE TABLE Guests (guest_id VARCHAR, guest_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有性别代码为“女”的客人所预订的公寓的开始日期和结束日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"女\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, guest_id VARCHAR), CREATE TABLE Guests (guest_id VARCHAR, gender_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "女宾(性别代码为“女”)预订公寓的开始日期和结束日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"女\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_start_date VARCHAR, guest_id VARCHAR), CREATE TABLE Guests (guest_id VARCHAR, gender_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示状态码为“确认”的所有预定公寓的客人的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"确认\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (guest_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Guests (guest_id VARCHAR, guest_last_name VARCHAR, guest_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客人公寓预订的状态代码为“确认”？返回他们的名字和姓。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"确认\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (guest_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Guests (guest_id VARCHAR, guest_last_name VARCHAR, guest_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示多余4间卧室的公寓的设施代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4"
      }
    ],
    "system": "CREATE TABLE Apartment_Facilities (facility_code VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (bedroom_count INTEGER, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多余四间卧室的公寓的设施代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4"
      }
    ],
    "system": "CREATE TABLE Apartment_Facilities (facility_code VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (bedroom_count INTEGER, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示全部有设施代码“体育馆”的公寓房间总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"体育馆\""
      }
    ],
    "system": "CREATE TABLE Apartment_Facilities (facility_code VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (room_count INTEGER, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有设施代码“体育馆”的公寓里房间总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"体育馆\""
      }
    ],
    "system": "CREATE TABLE Apartment_Facilities (facility_code VARCHAR, apt_id VARCHAR), CREATE TABLE Apartments (room_count INTEGER, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示以“如家”为缩写的所有公寓的房间的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"如家\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_id VARCHAR, building_short_name VARCHAR), CREATE TABLE Apartments (building_id VARCHAR, room_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "简称为“如家”的这栋楼里共有多少个房间？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"如家\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_id VARCHAR, building_short_name VARCHAR), CREATE TABLE Apartments (building_id VARCHAR, room_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示拥有超过两个浴室的公寓楼的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_id VARCHAR, building_address VARCHAR), CREATE TABLE Apartments (bathroom_count INTEGER, building_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些建筑物有两个以上浴室的公寓？把建筑的地址告诉我。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2"
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_id VARCHAR, building_address VARCHAR), CREATE TABLE Apartments (bathroom_count INTEGER, building_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在“小波”管理的建筑物中公寓类型代码和公寓号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"小波\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_id VARCHAR, building_manager VARCHAR), CREATE TABLE Apartments (building_id VARCHAR, apt_number VARCHAR, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“小波”管理的建筑物有哪些公寓类型代码和公寓号码？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"小波\""
      }
    ],
    "system": "CREATE TABLE Apartment_Buildings (building_id VARCHAR, building_manager VARCHAR), CREATE TABLE Apartments (building_id VARCHAR, apt_number VARCHAR, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示预订状态代码和相应预定的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个预订状态有多少预订？列出预订状态代码和相应预订的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT \tbooking_status_code ,  COUNT(*) FROM Apartment_Bookings GROUP BY booking_status_code"
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (booking_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按房间数升序，返回所有公寓的号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_number FROM Apartments ORDER BY room_count ASC"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_number VARCHAR, room_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按房间数量的升序给公寓号排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_number FROM Apartments ORDER BY room_count ASC"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_number VARCHAR, room_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回卧室最多的房间号。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Apartments (bedroom_count VARCHAR, apt_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "床最多的公寓的公寓号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Apartments (bedroom_count VARCHAR, apt_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按公寓数量升序排序，显示公寓类型代码和对应的公寓数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照公寓数量的升序，返回具有该公寓类型的公寓数量和每个公寓类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code ,  COUNT(*) FROM Apartments GROUP BY apt_type_code ORDER BY COUNT(*) ASC"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示按平均房间数降序排列前3位的公寓类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Apartments (room_count INTEGER, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均客房数量前三的公寓类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Apartments (room_count INTEGER, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示总房间数最多的公寓类型代码，以及浴室数量和卧室数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Apartments (bedroom_count VARCHAR, room_count INTEGER, bathroom_count VARCHAR, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一套公寓的总房数量最多？返回公寓类型代码，浴室的数量和卧室的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Apartments (bedroom_count VARCHAR, room_count INTEGER, bathroom_count VARCHAR, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示出现最多次数的公寓类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种公寓类型的代码出现次数最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示超过1个浴室的公寓中出现次数最多的公寓类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Apartments (bathroom_count INTEGER, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在多于一间浴室的公寓中，哪种公寓类型代码出现的次数最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Apartments (bathroom_count INTEGER, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个公寓类型代码，以及每个类型的最大和最小房间数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code"
      }
    ],
    "system": "CREATE TABLE Apartments (room_count INTEGER, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每种公寓类型代码以及每种类型中的最大和最小房间数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code"
      }
    ],
    "system": "CREATE TABLE Apartments (room_count INTEGER, apt_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按数目按降序排序，显示每个性别代码和对应的客人的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE Guests (gender_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照客人数量的降序对性别代码进行排序。返回性别代码和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE Guests (gender_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少公寓没有任何设施？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_id VARCHAR), CREATE TABLE Apartment_Facilities (apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有设施的公寓数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_id VARCHAR), CREATE TABLE Apartment_Facilities (apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示带有“临时”和“确认”状态代码的预订的公寓的公寓编号。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"确认\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"临时\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些被预订的公寓的状态码为“临时”和“确认”？把公寓号码给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"确认\" INTERSECT SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"临时\""
      }
    ],
    "system": "CREATE TABLE Apartment_Bookings (apt_id VARCHAR, booking_status_code VARCHAR), CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示单元状态可用性均为0和1的公寓数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR), CREATE TABLE View_Unit_Status (available_yn VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些公寓的单位可用性为0和1？返回他们的公寓号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  0 INTERSECT SELECT T1.apt_number FROM Apartments AS T1 JOIN View_Unit_Status AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.available_yn  =  1"
      }
    ],
    "system": "CREATE TABLE Apartments (apt_number VARCHAR, apt_id VARCHAR), CREATE TABLE View_Unit_Status (available_yn VARCHAR, apt_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2007赛季后有多少场比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM game WHERE season  >  2007"
      }
    ],
    "system": "CREATE TABLE game (season INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按主队名称降序排列，列出比赛日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date FROM game ORDER BY home_team DESC"
      }
    ],
    "system": "CREATE TABLE game (Date VARCHAR, home_team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有比赛项目的赛季、主队、客场。"
      },
      {
        "from": "assistant",
        "value": "SELECT season ,  home_team ,  away_team FROM game"
      }
    ],
    "system": "CREATE TABLE game (season VARCHAR, away_team VARCHAR, home_team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个体育场举办的最大、最小和平均主场比赛是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium"
      }
    ],
    "system": "CREATE TABLE stadium (home_games INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "容量百分比高于100%的体育场馆的平均出勤率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100"
      }
    ],
    "system": "CREATE TABLE stadium (average_attendance VARCHAR, capacity_percentage INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有遭受“膝盖受伤”伤害的球员的名字，比赛的数量，以及球员的信息来源是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != '膝盖受伤'"
      }
    ],
    "system": "CREATE TABLE injury_accident (number_of_matches VARCHAR, injury VARCHAR, SOURCE VARCHAR, player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个赛季导致球员“郑智”受伤？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  '郑智'"
      }
    ],
    "system": "CREATE TABLE game (season VARCHAR, id VARCHAR), CREATE TABLE injury_accident (game_id VARCHAR, player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "造成至少两起伤害事故的比赛的ID、分数和日期是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE game (score VARCHAR, id VARCHAR, date VARCHAR), CREATE TABLE injury_accident (game_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发生伤亡事故最多的体育场馆的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stadium (name VARCHAR, id VARCHAR), CREATE TABLE game (id VARCHAR, stadium_id VARCHAR), CREATE TABLE injury_accident (game_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找发生伤害事故最多的体育场的ID和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id JOIN injury_accident AS T3 ON T2.id  =  T3.game_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stadium (name VARCHAR, id VARCHAR), CREATE TABLE game (id VARCHAR, stadium_id VARCHAR), CREATE TABLE injury_accident (game_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个赛季，哪个体育场有球员受伤类型为“脚部受伤”或“膝盖受伤”？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  '脚部受伤' OR T3.injury  =  '膝盖受伤'"
      }
    ],
    "system": "CREATE TABLE game (season VARCHAR, id VARCHAR, stadium_id VARCHAR), CREATE TABLE stadium (id VARCHAR, name VARCHAR), CREATE TABLE injury_accident (injury VARCHAR, game_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "受伤事故有多少种不同的信息来源？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT SOURCE) FROM injury_accident"
      }
    ],
    "system": "CREATE TABLE injury_accident (SOURCE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少比赛没有伤害事故？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )"
      }
    ],
    "system": "CREATE TABLE game (game_id VARCHAR, id VARCHAR), CREATE TABLE injury_accident (game_id VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010赛季后发生了多少种不同的受伤？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010"
      }
    ],
    "system": "CREATE TABLE injury_accident (injury VARCHAR, game_id VARCHAR), CREATE TABLE game (id VARCHAR, season INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出球员“郑智” 和球员“于大宝”都受伤的体育场名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  '郑智' INTERSECT SELECT T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.player  =  '于大宝'"
      }
    ],
    "system": "CREATE TABLE game (id VARCHAR, stadium_id VARCHAR), CREATE TABLE stadium (id VARCHAR, name VARCHAR), CREATE TABLE injury_accident (game_id VARCHAR, player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有发生事故的体育场的名称、平均出勤率、总出勤率。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  average_attendance ,  total_attendance FROM stadium EXCEPT SELECT T2.name ,  T2.average_attendance ,  T2.total_attendance FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id"
      }
    ],
    "system": "CREATE TABLE stadium (average_attendance VARCHAR, id VARCHAR, name VARCHAR, total_attendance VARCHAR), CREATE TABLE game (id VARCHAR, stadium_id VARCHAR), CREATE TABLE injury_accident (game_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个体育场名称包含子串“中心”？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM stadium WHERE name LIKE \"中心\""
      }
    ],
    "system": "CREATE TABLE stadium (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个体育场有多少场比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id"
      }
    ],
    "system": "CREATE TABLE stadium (id VARCHAR), CREATE TABLE game (stadium_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每次受伤事故，找出比赛日期和比赛中受伤球员的姓名，并将结果按赛季的顺序进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC"
      }
    ],
    "system": "CREATE TABLE game (season VARCHAR, id VARCHAR, date VARCHAR), CREATE TABLE injury_accident (game_id VARCHAR, player VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有国家和联赛名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.name FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id"
      }
    ],
    "system": "CREATE TABLE Country (id VARCHAR, name VARCHAR), CREATE TABLE League (country_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“英国”有多少联赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Country AS T1 JOIN League AS T2 ON T1.id  =  T2.country_id WHERE T1.name  =  \"英格兰\""
      }
    ],
    "system": "CREATE TABLE Country (name VARCHAR, id VARCHAR), CREATE TABLE League (country_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有运动员的平均体重是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(weight) FROM Player"
      }
    ],
    "system": "CREATE TABLE Player (weight INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有球员的最大和最小高度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(weight) ,  min(weight) FROM Player"
      }
    ],
    "system": "CREATE TABLE Player (weight INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出总得分高于平均水平的球员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )"
      }
    ],
    "system": "CREATE TABLE Player (player_api_id VARCHAR, player_name VARCHAR), CREATE TABLE Player_Attributes (overall_rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最好的运球运动员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.dribbling  =  ( SELECT max(overall_rating) FROM Player_Attributes)"
      }
    ],
    "system": "CREATE TABLE Player (player_api_id VARCHAR, player_name VARCHAR), CREATE TABLE Player_Attributes (overall_rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出总得分高于90分、更喜欢右脚的球员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.crossing  >  90 AND T2.preferred_foot  =  \"右\""
      }
    ],
    "system": "CREATE TABLE Player (player_api_id VARCHAR, player_name VARCHAR), CREATE TABLE Player_Attributes (preferred_foot VARCHAR, crossing INTEGER, player_api_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出总得分在85到90之间的左脚球员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  \"左\" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90"
      }
    ],
    "system": "CREATE TABLE Player (player_api_id VARCHAR, player_name VARCHAR), CREATE TABLE Player_Attributes (preferred_foot VARCHAR, overall_rating INTEGER, player_api_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "右脚球员和左脚球员的平均得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT preferred_foot ,  avg(overall_rating) FROM Player_Attributes GROUP BY preferred_foot"
      }
    ],
    "system": "CREATE TABLE Player_Attributes (preferred_foot VARCHAR, overall_rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在总得分高于80的球员中，有多少是右脚和左脚的？"
      },
      {
        "from": "assistant",
        "value": "SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot"
      }
    ],
    "system": "CREATE TABLE Player_Attributes (preferred_foot VARCHAR, overall_rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有身高至少为180厘米和总分高于85的球员ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85"
      }
    ],
    "system": "CREATE TABLE Player (height INTEGER, overall_rating INTEGER, player_api_id VARCHAR), CREATE TABLE Player_Attributes (height INTEGER, overall_rating INTEGER, player_api_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有身高在180厘米和190厘米之间的左脚球员的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"左\""
      }
    ],
    "system": "CREATE TABLE Player (preferred_foot VARCHAR, player_api_id VARCHAR, height INTEGER), CREATE TABLE Player_Attributes (preferred_foot VARCHAR, player_api_id VARCHAR, height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总得分前3名的球员都是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Player (player_api_id VARCHAR, player_name VARCHAR), CREATE TABLE Player_Attributes (player_api_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出潜能前五名的球员的名字和生日。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE Player (player_api_id VARCHAR, birthday VARCHAR, player_name VARCHAR), CREATE TABLE Player_Attributes (player_api_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少演出？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM performance"
      }
    ],
    "system": "CREATE TABLE performance (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按出席率，列出主持人的演出。"
      },
      {
        "from": "assistant",
        "value": "SELECT HOST FROM performance ORDER BY Attendance ASC"
      }
    ],
    "system": "CREATE TABLE performance (HOST VARCHAR, Attendance VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演出的日期和地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Date ,  LOCATION FROM performance"
      }
    ],
    "system": "CREATE TABLE performance (LOCATION VARCHAR, Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在“工人体育场”或“虹口体育场”演出的出席率。"
      },
      {
        "from": "assistant",
        "value": "SELECT Attendance FROM performance WHERE LOCATION  =  \"工人体育场\" OR LOCATION  =  \"虹口体育场\""
      }
    ],
    "system": "CREATE TABLE performance (LOCATION VARCHAR, Attendance VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演出的的平均出席人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Attendance) FROM performance"
      }
    ],
    "system": "CREATE TABLE performance (Attendance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加者人数最多的表演日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE performance (Date VARCHAR, Attendance VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的地点和在每个地点表演的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION ,  COUNT(*) FROM performance GROUP BY LOCATION"
      }
    ],
    "system": "CREATE TABLE performance (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示演出最多次的表演地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE performance (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有至少两个演出的地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM performance GROUP BY LOCATION HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE performance (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有超过2000人参与的演出和不到1000人参与的演出的地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM performance WHERE Attendance  >  2000 INTERSECT SELECT LOCATION FROM performance WHERE Attendance  <  1000"
      }
    ],
    "system": "CREATE TABLE performance (LOCATION VARCHAR, Attendance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示成员的姓名和他们参加的演出地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID"
      }
    ],
    "system": "CREATE TABLE member_attendance (Member_ID VARCHAR, Performance_ID VARCHAR), CREATE TABLE member (Member_ID VARCHAR, Name VARCHAR), CREATE TABLE performance (Location VARCHAR, Performance_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照名字的字母升序显示会员姓名和演出地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T3.Location FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T2.Name ASC"
      }
    ],
    "system": "CREATE TABLE member_attendance (Member_ID VARCHAR, Performance_ID VARCHAR), CREATE TABLE member (Member_ID VARCHAR, Name VARCHAR), CREATE TABLE performance (Location VARCHAR, Performance_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示演出的日期与以“小提琴”角色的出席成员。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"小提琴\""
      }
    ],
    "system": "CREATE TABLE member_attendance (Member_ID VARCHAR, Performance_ID VARCHAR), CREATE TABLE member (Role VARCHAR, Member_ID VARCHAR), CREATE TABLE performance (Date VARCHAR, Performance_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照参加演出出席率的降序，显示会员姓名和演出日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC"
      }
    ],
    "system": "CREATE TABLE member_attendance (Member_ID VARCHAR, Performance_ID VARCHAR), CREATE TABLE member (Member_ID VARCHAR, Name VARCHAR), CREATE TABLE performance (Attendance VARCHAR, Date VARCHAR, Performance_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有参加任何表演的成员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance)"
      }
    ],
    "system": "CREATE TABLE member (Member_ID VARCHAR, Name VARCHAR), CREATE TABLE member_attendance (Member_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到拥有容量超过50的房间的建筑物。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些建筑的容量大于50？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT building FROM classroom WHERE capacity  >  50"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不在“教学”大厦的房间数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM classroom WHERE building != '教学'"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不在“教学”的房间有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM classroom WHERE building != '教学'"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预算高于平均预算的部门的名称和建筑是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, building VARCHAR, budget INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出预算大于平均预算的部门的名称和建筑。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  building FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, building VARCHAR, budget INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找可以容纳50到100名学生的房间的号码和建筑。"
      },
      {
        "from": "assistant",
        "value": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, room_number VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "50到100个学生可以坐的教室号码和相应的建筑是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT building ,  room_number FROM classroom WHERE capacity BETWEEN 50 AND 100"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, room_number VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到预算最高的部门的名称和建筑。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget VARCHAR, building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预算最大的部门的部门名称和相应的建筑是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget VARCHAR, building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“历史”系总学分最高的学生叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM student WHERE dept_name  =  '历史' ORDER BY tot_cred DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_name VARCHAR, name VARCHAR, tot_cred VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出最高学分的“历史”系学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM student WHERE dept_name  =  '历史' ORDER BY tot_cred DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_name VARCHAR, name VARCHAR, tot_cred VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“教学”大楼有多少个房间？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM classroom WHERE building  =  '教学'"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计一下“教学”的教室数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM classroom WHERE building  =  '教学'"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生有顾问？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT s_id) FROM advisor"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计有顾问的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT s_id) FROM advisor"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少院系提供课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_name) FROM course"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计提供课程的院系的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_name) FROM course"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“物理”系开设了多少门不同课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  '屋里'"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算“物理”系的课程数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT course_id) FROM course WHERE dept_name  =  '屋里'"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有两个预备课程的课程标题？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有两个预备课程的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到具有两个预备课程的课程的名称、学分和系名？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, title VARCHAR, credits VARCHAR, course_id VARCHAR), CREATE TABLE prereq (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多于一个预备课程的课程的名称、学分值和系名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, title VARCHAR, credits VARCHAR, course_id VARCHAR), CREATE TABLE prereq (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少课程没有预备课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR), CREATE TABLE prereq (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算无预备课程的课程数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR), CREATE TABLE prereq (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有任何预备课程的课程名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有预备课程的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的老师教过一些课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT id) FROM teaches"
      }
    ],
    "system": "CREATE TABLE teaches (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计教授课程的不同教员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT id) FROM teaches"
      }
    ],
    "system": "CREATE TABLE teaches (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“市场”或“财务”部门的总预算。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(budget) FROM department WHERE dept_name  =  '管理' OR dept_name  =  '金融'"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“市场”或“财务”部门预算的总和是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(budget) FROM department WHERE dept_name  =  '管理' OR dept_name  =  '金融'"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到名字包含“成庆”的教员的院系名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM instructor WHERE name LIKE '成庆'"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教员姓名包含“成庆”的部门叫什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM instructor WHERE name LIKE '成庆'"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“教学”大厦有多少房间容量小于50？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM classroom WHERE building  =  '教学' AND capacity  <  50"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计“教学”的容量低于50房间的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM classroom WHERE building  =  '教学' AND capacity  <  50"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出预算高于平均预算的部门的名称和预算。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预算大于平均的部门的名称和预算是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  budget FROM department WHERE budget  >  (SELECT avg(budget) FROM department)"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“统计学”系工资最低的教师叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE dept_name  =  '统计学' ORDER BY salary LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出“统计”系最低收入的导师的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE dept_name  =  '统计学' ORDER BY salary LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到由“统计学”和“心理学”系共同提供的课程名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE dept_name  =  '统计学' INTERSECT SELECT title FROM course WHERE dept_name  =  '心理学'"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“统计”和“心理学”系都列出的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE dept_name  =  '统计学' INTERSECT SELECT title FROM course WHERE dept_name  =  '心理学'"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到由“统计学”而不是“心理学”系提供的课程名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE dept_name  =  '统计学' EXCEPT SELECT title FROM course WHERE dept_name  =  '心理学'"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "是“统计学”系而不是“心理学”系的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE dept_name  =  '统计学' EXCEPT SELECT title FROM course WHERE dept_name  =  '心理学'"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在2009年“秋天”而不是2010年“春天”教课的老师的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM teaches WHERE semester  =  '秋季' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE teaches (id VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2009年“秋天”而不是2010年“春天”教书的老师的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM teaches WHERE semester  =  '秋季' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE teaches (id VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出2009和2010年上课的学生名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR), CREATE TABLE takes (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加2009、2010年课程的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR), CREATE TABLE takes (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出提供最大课程量的前三个院系的名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "3个有最多课程的院系名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出提供最高总学分的院系的名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, credits INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这个学分最多的院系叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, credits INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照他们名称和学分排序，列出所有课程的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course ORDER BY title ,  credits"
      }
    ],
    "system": "CREATE TABLE course (title VARCHAR, credits VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出按名称和学分顺序排列的所有课程的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course ORDER BY title ,  credits"
      }
    ],
    "system": "CREATE TABLE course (title VARCHAR, credits VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个部门的预算最低？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出最低预算的部门名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM department ORDER BY budget LIMIT 1"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按预算从大到小列出所有部门的名称和建筑。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  building FROM department ORDER BY budget DESC"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget VARCHAR, building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按预算降序排列，部门的名称和建筑是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  building FROM department ORDER BY budget DESC"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, budget VARCHAR, building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是最高工资的教练？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instructor (name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出最高薪的教员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instructor (name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按薪水递增顺序列出所有教员的信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM instructor ORDER BY salary"
      }
    ],
    "system": "CREATE TABLE instructor (salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出所有有关导师的信息，按照薪水从低到高的顺序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM instructor ORDER BY salary"
      }
    ],
    "system": "CREATE TABLE instructor (salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按学分总数按升序排列学生姓名和院系名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  dept_name FROM student ORDER BY tot_cred"
      }
    ],
    "system": "CREATE TABLE student (dept_name VARCHAR, name VARCHAR, tot_cred VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按学分从少到大的顺序排列的学生及其所属院系的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  dept_name FROM student ORDER BY tot_cred"
      }
    ],
    "system": "CREATE TABLE student (dept_name VARCHAR, name VARCHAR, tot_cred VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出2008年所有课程名称及其老师姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE teaches (course_id VARCHAR, id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照名称的字母顺序，显示2008年所有课程的名称和导师的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE teaches (course_id VARCHAR, id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出指导一个以上学生的老师的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE advisor (i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "指导一个以上学生的老师的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE advisor (i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有不止一个导师的学生的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR), CREATE TABLE advisor (s_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有一个以上顾问的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR), CREATE TABLE advisor (s_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个容量超过50的建筑的房间数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每栋建筑有多少房间容量超过50？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个建筑物所有房间的最大和平均容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个楼房的最大和平均容量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building"
      }
    ],
    "system": "CREATE TABLE classroom (building VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到一个由不止一个院系提供的课程的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE course (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不止一个院系提供的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE course (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不同院系提供的课程总学分。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, credits INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个部门总共提供多少学分？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(credits) ,  dept_name FROM course GROUP BY dept_name"
      }
    ],
    "system": "CREATE TABLE course (dept_name VARCHAR, credits INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出平均工资高于所有教师平均工资的院系的最低工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均工资高于总平均水平的院系最低工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每学期和一年提供的课程数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
      }
    ],
    "system": "CREATE TABLE SECTION (semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每学期和一年提供多少课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR"
      }
    ],
    "system": "CREATE TABLE SECTION (semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出课程数量最多的一年。"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE SECTION (YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一年课程最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR FROM SECTION GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE SECTION (YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到课程数量最多的年度和学期。"
      },
      {
        "from": "assistant",
        "value": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE SECTION (semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多的课程年度和学期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE SECTION (semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找学生数量最多的院系名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "招生最多的院系名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个院系的学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"
      }
    ],
    "system": "CREATE TABLE student (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个院系有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  dept_name FROM student GROUP BY dept_name"
      }
    ],
    "system": "CREATE TABLE student (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出上课学生人数最少的学期和年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE takes (semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个学期和年份的学生最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE takes (semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "指导“历史”系所有学生的教师的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  '历史'"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给指导“历史”系的学生的老师的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  '历史'"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请问“历史”系导师的姓名和薪水？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  '历史'"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR, i_id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR, salary VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给“历史”系学生提供指导的教师的姓名和薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  '历史'"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR, i_id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR, salary VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有任何预备课程的课程的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR), CREATE TABLE prereq (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有预备课程的课程的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR), CREATE TABLE prereq (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有任何预备课程的课程名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有预备课程的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“国际金融\"课程的预备课程的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  '国际金融')"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, prereq_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我“国际金融”课程的预备课程。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  '国际金融')"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, prereq_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到预备课程是微分几何的课程名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  '微分几何')"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, prereq_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以微分几何为预备课程的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  '微分几何')"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, prereq_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在2003年秋季学期上过任何课程的学生的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  '秋季' AND YEAR  =  2003)"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR, semester VARCHAR, YEAR VARCHAR), CREATE TABLE takes (id VARCHAR, name VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2003秋季选修过课程的学生的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  '秋季' AND YEAR  =  2003)"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR, semester VARCHAR, YEAR VARCHAR), CREATE TABLE takes (id VARCHAR, name VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2010年秋季学期，“智远楼”建筑学院提供的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  '智远楼' AND semester  =  '秋季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE SECTION (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请给出2010秋季“智远楼”里提供课程的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  '智远楼' AND semester  =  '秋季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE SECTION (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到以前教“C编程”课程的老师的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C语言'"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE teaches (course_id VARCHAR, id VARCHAR), CREATE TABLE course (course_id VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教过“C编程”课程的老师的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C语言'"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE teaches (course_id VARCHAR, id VARCHAR), CREATE TABLE course (course_id VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“数学”系学生的导师的姓名和薪水。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  '数学'"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR, i_id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR, salary VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给“数学”系的学生提供指导的老师的姓名和薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  '数学'"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR, i_id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR, salary VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据学生的总学分对结果进行排序，查找“数学”系学生的导师姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  '数学' ORDER BY T3.tot_cred"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR, i_id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR, tot_cred VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按学生学分总数排序，“数学”系学生的所有指导老师的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  '数学' ORDER BY T3.tot_cred"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR, i_id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR, tot_cred VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是“移动计算”的预备课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  '移动计算')"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, prereq_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“移动计算”的预备课程是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  '移动计算')"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, prereq_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出总学分数最高的学生的导师姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR, i_id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE student (id VARCHAR, tot_cred VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总学分最多的学生的指导老师叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id ORDER BY T3.tot_cred DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE advisor (s_id VARCHAR, i_id VARCHAR), CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE student (id VARCHAR, tot_cred VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有教授任何课程的老师的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE teaches (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有教书的老师的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR, name VARCHAR), CREATE TABLE teaches (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有教授任何课程的老师的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR), CREATE TABLE teaches (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有教书的教师有哪些ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT id FROM instructor EXCEPT SELECT id FROM teaches"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR), CREATE TABLE teaches (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些“春季”学期没有上过任何课程的老师的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  '春季')"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR, name VARCHAR, semester VARCHAR), CREATE TABLE teaches (id VARCHAR, name VARCHAR, semester VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“春季”没有授课的老师的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  '春季')"
      }
    ],
    "system": "CREATE TABLE instructor (id VARCHAR, name VARCHAR, semester VARCHAR), CREATE TABLE teaches (id VARCHAR, name VARCHAR, semester VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教授平均工资最高的系名。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个系的讲师平均工资最高？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出预算最高的系所有讲师的人数和平均工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER), CREATE TABLE department (dept_name VARCHAR, budget VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预算最高的系里有多少名讲师，他们的平均工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.salary) ,  count(*) FROM instructor AS T1 JOIN department AS T2 ON T1.dept_name  =  T2.dept_name ORDER BY T2.budget DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER), CREATE TABLE department (dept_name VARCHAR, budget VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在最大的教室(容量最高)教的课程名称和学分是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
      }
    ],
    "system": "CREATE TABLE classroom (capacity INTEGER), CREATE TABLE SECTION (course_id VARCHAR, building VARCHAR, room_number VARCHAR), CREATE TABLE course (course_id VARCHAR, title VARCHAR, credits VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出在最大容量的课堂上教的课程的名称和学分。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)"
      }
    ],
    "system": "CREATE TABLE classroom (capacity INTEGER), CREATE TABLE SECTION (course_id VARCHAR, building VARCHAR, room_number VARCHAR), CREATE TABLE course (course_id VARCHAR, title VARCHAR, credits VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有选修“生物”系课程的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  '生物学')"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR), CREATE TABLE takes (course_id VARCHAR, id VARCHAR), CREATE TABLE course (course_id VARCHAR, dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些没有上过“生物”系课程的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  '生物学')"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR), CREATE TABLE takes (course_id VARCHAR, id VARCHAR), CREATE TABLE course (course_id VARCHAR, dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个系的学生总数和教师总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR), CREATE TABLE instructor (dept_name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个系有多少学生和老师？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR), CREATE TABLE student (dept_name VARCHAR, id VARCHAR), CREATE TABLE instructor (dept_name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找已经选修了“国际金融”的预备课程的学生的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  '国际金融')"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR), CREATE TABLE takes (course_id VARCHAR, id VARCHAR), CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, prereq_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学过“国际金融”这门课程的预备课程的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  '国际金融')"
      }
    ],
    "system": "CREATE TABLE student (id VARCHAR, name VARCHAR), CREATE TABLE takes (course_id VARCHAR, id VARCHAR), CREATE TABLE course (course_id VARCHAR, title VARCHAR), CREATE TABLE prereq (course_id VARCHAR, prereq_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找工资低于“物理”系讲师平均工资的讲师的姓名和薪水。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  '屋里')"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "低于“物理”系讲师的平均工资的讲师的姓名和薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  '屋里')"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“统计学”系提供的课程名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  '统计学'"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, dept_name VARCHAR), CREATE TABLE takes (course_id VARCHAR, id VARCHAR), CREATE TABLE student (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学习“统计学”学课程的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM course AS T1 JOIN takes AS T2 ON T1.course_id  =  T2.course_id JOIN student AS T3 ON T2.id  =  T3.id WHERE T1.dept_name  =  '统计学'"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, dept_name VARCHAR), CREATE TABLE takes (course_id VARCHAR, id VARCHAR), CREATE TABLE student (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找由“心理学”系按课程名称分类的所有课程的大楼、房间号码、学期和年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  '心理学' ORDER BY T1.title"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR, dept_name VARCHAR), CREATE TABLE SECTION (course_id VARCHAR, year VARCHAR, building VARCHAR, room_number VARCHAR, semester VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按课程名称排序，“心理学”系的课程的建筑、房间号码、学期和年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.building ,  T2.room_number ,  T2.semester ,  T2.year FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE T1.dept_name  =  '心理学' ORDER BY T1.title"
      }
    ],
    "system": "CREATE TABLE course (course_id VARCHAR, title VARCHAR, dept_name VARCHAR), CREATE TABLE SECTION (course_id VARCHAR, year VARCHAR, building VARCHAR, room_number VARCHAR, semester VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“计算机”系所有讲师姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE dept_name  =  '计算机科学'"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“计算机”系中所有教员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE dept_name  =  '计算机科学'"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“计算机”系所有工资大于80000的所有讲师姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE dept_name  =  '计算机科学'  AND salary  >  80000"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“计算机”系收入高于80000的教员名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE dept_name  =  '计算机科学'  AND salary  >  80000"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教过一些课程的老师的名字和课程ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
      }
    ],
    "system": "CREATE TABLE instructor (ID VARCHAR), CREATE TABLE teaches (ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有教过课程的老师的姓名以及相应的课程ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID"
      }
    ],
    "system": "CREATE TABLE instructor (ID VARCHAR), CREATE TABLE teaches (ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有教过某些课程的“艺术”系讲师的姓名和所讲授的课程id。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  '艺术'"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, ID VARCHAR), CREATE TABLE teaches (ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教过一门课的“艺术”系讲师的姓名，以及相应的课程编号？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  '艺术'"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, ID VARCHAR), CREATE TABLE teaches (ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出姓名中含有“明”的所有讲师的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE name LIKE '明'"
      }
    ],
    "system": "CREATE TABLE instructor (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "含有“明”名字的所有讲师的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE name LIKE '明'"
      }
    ],
    "system": "CREATE TABLE instructor (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有不同讲师的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM  instructor ORDER BY name"
      }
    ],
    "system": "CREATE TABLE instructor (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出教员的不同姓名，按姓名顺序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM  instructor ORDER BY name"
      }
    ],
    "system": "CREATE TABLE instructor (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找2009“秋季”或2010“春季”课程。"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM SECTION WHERE semester  =  '秋季' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE SECTION (course_id VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2009“秋季”或2010“春季”课程的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM SECTION WHERE semester  =  '秋季' AND YEAR  =  2009 UNION SELECT course_id FROM SECTION WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE SECTION (course_id VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找2009“秋季”和2010“春季”课程。"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM SECTION WHERE semester  =  '秋季' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE SECTION (course_id VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2009年“秋季”和2010年“春季”都开设了哪些课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM SECTION WHERE semester  =  '秋季' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE SECTION (course_id VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在2009“秋季”但不在2010“春季”的课程。"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM SECTION WHERE semester  =  '秋季' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE SECTION (course_id VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2009“秋季”但不在2010的春天的课程ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_id FROM SECTION WHERE semester  =  '秋季' AND YEAR  =  2009 EXCEPT SELECT course_id FROM SECTION WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE SECTION (course_id VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出低于最高工资的所有不同教员的工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
      }
    ],
    "system": "CREATE TABLE instructor (salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有工资低于最高工资的教师的不同工资是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT salary FROM instructor WHERE salary  <  (SELECT max(salary) FROM instructor)"
      }
    ],
    "system": "CREATE TABLE instructor (salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在2010年“春季”学期教一门课程的教师总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE teaches (ID VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010“春季”有多少授课讲师？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT ID) FROM teaches WHERE semester  =  '春季' AND YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE teaches (ID VARCHAR, semester VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找平均工资超过42000的所有院系的名称和平均工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均工资高于42000的院系的名称和平均工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name ,  AVG (salary) FROM instructor GROUP BY dept_name HAVING AVG (salary)  >  42000"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出一些薪水高于“生物”系某些(至少一个)老师的教师名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  '生物学')"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些比“生物”系至少一个教员工资高的教员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE salary  >  (SELECT min(salary) FROM instructor WHERE dept_name  =  '生物学')"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出工资高于“生物”系所有教员工资的所有教员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  '生物学')"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "薪水比“生物学”系任何一位教员都高的教员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  '生物学')"
      }
    ],
    "system": "CREATE TABLE instructor (dept_name VARCHAR, salary INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少辩论？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM debate"
      }
    ],
    "system": "CREATE TABLE debate (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以观众数量的升序排列，列出辩论的场馆。"
      },
      {
        "from": "assistant",
        "value": "SELECT Venue FROM debate ORDER BY Num_of_Audience ASC"
      }
    ],
    "system": "CREATE TABLE debate (Num_of_Audience VARCHAR, Venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每次辩论的日期和场馆是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Date ,  Venue FROM debate"
      }
    ],
    "system": "CREATE TABLE debate (Date VARCHAR, Venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出超过150观众人数的辩论日期"
      },
      {
        "from": "assistant",
        "value": "SELECT Date FROM debate WHERE Num_of_Audience  >  150"
      }
    ],
    "system": "CREATE TABLE debate (Date VARCHAR, Num_of_Audience INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示35岁或36岁的人的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36"
      }
    ],
    "system": "CREATE TABLE people (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最年轻的人的党派是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Party FROM people ORDER BY Age ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (Age VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同党派的人以及每个政党的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Party ,  COUNT(*) FROM people GROUP BY Party"
      }
    ],
    "system": "CREATE TABLE people (Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示拥有最多人的政党。"
      },
      {
        "from": "assistant",
        "value": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的辩论场地"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Venue FROM debate"
      }
    ],
    "system": "CREATE TABLE debate (Venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示出在赞成一面的对方的姓名、辩论的日期和地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID"
      }
    ],
    "system": "CREATE TABLE debate_people (Affirmative VARCHAR, Debate_ID VARCHAR), CREATE TABLE debate (Date VARCHAR, Debate_ID VARCHAR, Venue VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示处于否定的一面人物的姓名、辩论的日期和地点，按姓名的升序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Negative  =  T3.People_ID ORDER BY T3.Name ASC"
      }
    ],
    "system": "CREATE TABLE debate_people (Negative VARCHAR, Debate_ID VARCHAR), CREATE TABLE debate (Date VARCHAR, Debate_ID VARCHAR, Venue VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示那些在辩论中持肯定态度的人的名字，参加辩论的人数超过200人。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200"
      }
    ],
    "system": "CREATE TABLE debate_people (Affirmative VARCHAR, Debate_ID VARCHAR), CREATE TABLE debate (Debate_ID VARCHAR, Num_of_Audience INTEGER), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示出参加辩论的人的姓名和他们在正面辩论的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name"
      }
    ],
    "system": "CREATE TABLE debate_people (Affirmative VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示那些在辩论中至少两次处于负面的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Negative  =  T2.People_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE debate_people (Negative VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有在辩论的正面的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)"
      }
    ],
    "system": "CREATE TABLE people (Affirmative VARCHAR, People_id VARCHAR, Name VARCHAR), CREATE TABLE debate_people (Affirmative VARCHAR, People_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有顾客的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM customers ORDER BY customer_details"
      }
    ],
    "system": "CREATE TABLE customers (customer_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序对客户姓名进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM customers ORDER BY customer_details"
      }
    ],
    "system": "CREATE TABLE customers (customer_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找与客户“李帅”相关联的所有保险单类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"李帅\""
      }
    ],
    "system": "CREATE TABLE policies (customer_id VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户“李帅”使用的保险单的类型代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"李帅\""
      }
    ],
    "system": "CREATE TABLE policies (customer_id VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种保险单使用次数最多？给我保险单类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最常用保险单的类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找超过2个客户使用的所有保险单类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种类型的保险单是有多于2名客户选择的？给我保险单类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找索赔标题中支付的总金额和平均金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers"
      }
    ],
    "system": "CREATE TABLE claim_headers (amount_piad INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "索赔标题的总金额和平均金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers"
      }
    ],
    "system": "CREATE TABLE claim_headers (amount_piad INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最近创建的文档中索赔的总金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE claim_headers (amount_claimed INTEGER, claim_header_id VARCHAR), CREATE TABLE claims_documents (created_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在最近创建的文档中总共有多少索赔？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE claim_headers (amount_claimed INTEGER, claim_header_id VARCHAR), CREATE TABLE claims_documents (created_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在一次索赔中索赔额最大的客户叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)"
      }
    ],
    "system": "CREATE TABLE claim_headers (amount_claimed INTEGER), CREATE TABLE policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个客户在单一索赔中提出的索赔数额最大？返回客户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)"
      }
    ],
    "system": "CREATE TABLE claim_headers (amount_claimed INTEGER), CREATE TABLE policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在一次索赔中支付最低金额的客户叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"
      }
    ],
    "system": "CREATE TABLE claim_headers (amount_piad INTEGER), CREATE TABLE policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个客户在一个索赔中做出了最小的索赔额？返回客户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)"
      }
    ],
    "system": "CREATE TABLE claim_headers (amount_piad INTEGER), CREATE TABLE policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有相关保险单的客户名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id"
      }
    ],
    "system": "CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR), CREATE TABLE policies (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有任何保险单的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id"
      }
    ],
    "system": "CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR), CREATE TABLE policies (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少个索赔处理阶段？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM claims_processing_stages"
      }
    ],
    "system": "CREATE TABLE claims_processing_stages (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找索赔处理中不同阶段的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM claims_processing_stages"
      }
    ],
    "system": "CREATE TABLE claims_processing_stages (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "索赔处理阶段的索赔最多的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE claims_processing (claim_stage_id VARCHAR), CREATE TABLE claims_processing_stages (claim_stage_id VARCHAR, claim_status_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个索赔处理阶段索赔最多？显示索赔状态名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE claims_processing (claim_stage_id VARCHAR), CREATE TABLE claims_processing_stages (claim_stage_id VARCHAR, claim_status_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找名字包含“楠”的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM customers WHERE customer_details LIKE \"楠\""
      }
    ],
    "system": "CREATE TABLE customers (customer_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户有包含“楠”的名字？返回客户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM customers WHERE customer_details LIKE \"楠\""
      }
    ],
    "system": "CREATE TABLE customers (customer_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有“代理”保险单的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"代理\""
      }
    ],
    "system": "CREATE TABLE policies (customer_id VARCHAR, policy_type_code VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户拥有保险代号为“代理”的保险单？给我客户的详细资料。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"代理\""
      }
    ],
    "system": "CREATE TABLE policies (customer_id VARCHAR, policy_type_code VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有“代理”保险单“统一”保险单的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"代理\" OR t1.policy_type_code  =  \"统一\""
      }
    ],
    "system": "CREATE TABLE policies (customer_id VARCHAR, policy_type_code VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户有类型代号为“代理”或“统一”的保险单？返回客户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"代理\" OR t1.policy_type_code  =  \"统一\""
      }
    ],
    "system": "CREATE TABLE policies (customer_id VARCHAR, policy_type_code VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有客户和员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff"
      }
    ],
    "system": "CREATE TABLE customers (staff_details VARCHAR, customer_details VARCHAR), CREATE TABLE staff (staff_details VARCHAR, customer_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "顾客和员工的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff"
      }
    ],
    "system": "CREATE TABLE customers (staff_details VARCHAR, customer_details VARCHAR), CREATE TABLE staff (staff_details VARCHAR, customer_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个保险单类型及其类型代码的记录数。"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code"
      }
    ],
    "system": "CREATE TABLE policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个保险单类型，在记录中返回其类型代码及其数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT policy_type_code ,  count(*) FROM policies GROUP BY policy_type_code"
      }
    ],
    "system": "CREATE TABLE policies (policy_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找保险单中涉及最多的客户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE policies (customer_id VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个客户有最多的保险单？给我客户的详细资料。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE policies (customer_id VARCHAR), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“开放”索赔状态的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"开放\""
      }
    ],
    "system": "CREATE TABLE claims_processing_stages (claim_status_description VARCHAR, claim_status_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到为“开放”的索赔状态描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"开放\""
      }
    ],
    "system": "CREATE TABLE claims_processing_stages (claim_status_description VARCHAR, claim_status_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的索赔结果代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing"
      }
    ],
    "system": "CREATE TABLE claims_processing (claim_outcome_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同的索赔结果代码的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT claim_outcome_code) FROM claims_processing"
      }
    ],
    "system": "CREATE TABLE claims_processing (claim_outcome_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个客户与最新的保险单相关联？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)"
      }
    ],
    "system": "CREATE TABLE policies (start_date INTEGER), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最近开始的保险单的客户。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)"
      }
    ],
    "system": "CREATE TABLE policies (start_date INTEGER), CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示帐号数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个帐户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户开户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT customer_id) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算有账户的客户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT customer_id) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有帐户的ID、开户日期、帐户名称和其他帐户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (date_account_opened VARCHAR, account_id VARCHAR, account_name VARCHAR, other_account_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有帐户的ID，开户日期，名称，以及其他细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id ,  date_account_opened ,  account_name ,  other_account_details FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (date_account_opened VARCHAR, account_id VARCHAR, account_name VARCHAR, other_account_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示名字为“余”的客户的所有帐户的ID、帐户名称和其他帐户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  '余'"
      }
    ],
    "system": "CREATE TABLE Accounts (account_id VARCHAR, other_account_details VARCHAR, account_name VARCHAR, date_account_opened VARCHAR, customer_id VARCHAR), CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与名为“余”的客户对应的帐户的ID、名称、开户日期和其他细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  '余'"
      }
    ],
    "system": "CREATE TABLE Accounts (account_id VARCHAR, other_account_details VARCHAR, account_name VARCHAR, date_account_opened VARCHAR, customer_id VARCHAR), CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有名为“菲菲”姓氏为“余”的客户的帐户名称和帐户其他详细资料。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"余\" AND T2.customer_last_name  =  \"菲菲\""
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR, other_account_details VARCHAR, account_name VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与名为“余” “菲菲”的客户对应的帐户的名称和其他细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"余\" AND T2.customer_last_name  =  \"菲菲\""
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR, other_account_details VARCHAR, account_name VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示用帐户名“900”的客户的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR, account_name VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "账户名称“900”的客户全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\""
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR, account_name VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户没有账户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算没有账户的客户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)"
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有帐户的所有客户的名字、姓氏和电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, phone_number VARCHAR, customer_first_name VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于有账户的客户，有哪些不同的名字、姓氏和电话号码？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name ,  T1.phone_number FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, phone_number VARCHAR, customer_first_name VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有账户的客户ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有账户的客户有哪些客户ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id FROM Customers EXCEPT SELECT customer_id FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR), CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个客户有多少个帐户？列出号码和客户ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算对应于每个客户ID的帐户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  customer_id FROM Accounts GROUP BY customer_id"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最多账户的客户ID，名字和姓氏的是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回帐号最多的客户的ID和全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有客户的ID、姓名和姓氏以及帐户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有客户的全名和ID是什么？每个客户有多少个账户？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_last_name VARCHAR, customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少2个帐户的所有客户的名字和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有两个或两个以上账户的客户的名字和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Accounts (customer_id VARCHAR), CREATE TABLE Customers (customer_id VARCHAR, customer_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个性别的顾客数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT gender ,  count(*) FROM Customers GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE Customers (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个性别有多少顾客？"
      },
      {
        "from": "assistant",
        "value": "SELECT gender ,  count(*) FROM Customers GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE Customers (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少交易？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Financial_transactions"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计交易数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Financial_transactions"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个账户有多少交易？显示号码和账号ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  account_id FROM Financial_transactions"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算对应于每个帐户ID的金融交易数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  account_id FROM Financial_transactions"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“337”号账户有多少交易？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\""
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR), CREATE TABLE Accounts (account_id VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算名称为“337”的帐户拥有的金融交易的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\""
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR), CREATE TABLE Accounts (account_id VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均值、最小值、最大值和总交易量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回平均值、最小值、最大值和总交易量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(transaction_amount) ,  min(transaction_amount) ,  max(transaction_amount) ,   sum(transaction_amount) FROM Financial_transactions"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有大于平均值的交易的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_id VARCHAR, transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "金额大于平均交易金额的交易的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_id VARCHAR, transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示交易类型和交易总量。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_type VARCHAR, transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个交易类型的总交易金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type ,  sum(transaction_amount) FROM Financial_transactions GROUP BY transaction_type"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (transaction_type VARCHAR, transaction_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示帐户名称、ID和每个帐户的交易数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR), CREATE TABLE Accounts (account_id VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个帐户的名称和ID，以及交易的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.account_name ,  T1.account_id ,  count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR), CREATE TABLE Accounts (account_id VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有最多数量交易的帐户ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "交易最多的账户ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有4个交易的帐户ID和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR), CREATE TABLE Accounts (account_id VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有4个或更多交易的账户的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (account_id VARCHAR), CREATE TABLE Accounts (account_id VARCHAR, account_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有产品尺寸。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_size FROM Products"
      }
    ],
    "system": "CREATE TABLE Products (product_size VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的产品尺寸是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_size FROM Products"
      }
    ],
    "system": "CREATE TABLE Products (product_size VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有产品颜色。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_color FROM Products"
      }
    ],
    "system": "CREATE TABLE Products (product_color VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的产品颜色是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_color FROM Products"
      }
    ],
    "system": "CREATE TABLE Products (product_color VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示发票号码和每张发票的交易数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (invoice_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个发票号码对应多少个交易？"
      },
      {
        "from": "assistant",
        "value": "SELECT invoice_number ,  count(*) FROM Financial_transactions GROUP BY invoice_number"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (invoice_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多交易的发票号码和发票日期是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (invoice_number VARCHAR), CREATE TABLE Invoices (invoice_number VARCHAR, invoice_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与交易次数最多的发票对应的发票号和发票日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.invoice_number ,  T2.invoice_date FROM Financial_transactions AS T1 JOIN Invoices AS T2 ON T1.invoice_number  =  T2.invoice_number GROUP BY T1.invoice_number ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Financial_transactions (invoice_number VARCHAR), CREATE TABLE Invoices (invoice_number VARCHAR, invoice_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少发票？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Invoices"
      }
    ],
    "system": "CREATE TABLE Invoices (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算发票数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Invoices"
      }
    ],
    "system": "CREATE TABLE Invoices (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有发票的日期和订单ID和细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id"
      }
    ],
    "system": "CREATE TABLE Invoices (order_id VARCHAR, invoice_date VARCHAR), CREATE TABLE Orders (order_id VARCHAR, order_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有发票的发票日期、订单ID和订单细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.invoice_date ,  T1.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id"
      }
    ],
    "system": "CREATE TABLE Invoices (order_id VARCHAR, invoice_date VARCHAR), CREATE TABLE Orders (order_id VARCHAR, order_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示订单ID和每个订单的发票数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id"
      }
    ],
    "system": "CREATE TABLE Invoices (order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个订单ID对应多少发票？"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  count(*) FROM Invoices GROUP BY order_id"
      }
    ],
    "system": "CREATE TABLE Invoices (order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有两个以上的发票的订单的订单ID和订单详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Invoices (order_id VARCHAR), CREATE TABLE Orders (order_id VARCHAR, order_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回用两个或多个发票的订单ID和订单的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Invoices (order_id VARCHAR), CREATE TABLE Orders (order_id VARCHAR, order_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "订单数最多的客户的姓氏、ID和电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Orders (customer_id VARCHAR), CREATE TABLE Customers (customer_id VARCHAR, phone_number VARCHAR, customer_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回订单数量最多的客户的姓氏、ID和电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Orders (customer_id VARCHAR), CREATE TABLE Customers (customer_id VARCHAR, phone_number VARCHAR, customer_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有订单的所有产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id"
      }
    ],
    "system": "CREATE TABLE Products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE Order_items (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有被订购过的产品名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name FROM Products EXCEPT SELECT T1.product_name FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id"
      }
    ],
    "system": "CREATE TABLE Products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE Order_items (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有产品名称和每个产品名称所订购的总数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name"
      }
    ],
    "system": "CREATE TABLE Order_items (product_id VARCHAR, product_quantity INTEGER), CREATE TABLE Products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的产品名称是什么，每个产品订购的数量之和是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_name ,  sum(T1.product_quantity) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_name"
      }
    ],
    "system": "CREATE TABLE Order_items (product_id VARCHAR, product_quantity INTEGER), CREATE TABLE Products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示订单ID和每个订单中的项目数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id"
      }
    ],
    "system": "CREATE TABLE Order_items (order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个订单ID对应多少个订单项？"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id"
      }
    ],
    "system": "CREATE TABLE Order_items (order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示产品ID和包含每个产品的唯一订单的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id"
      }
    ],
    "system": "CREATE TABLE Order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个产品有多少个不同的订单ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id ,  count(DISTINCT order_id) FROM Order_items GROUP BY product_id"
      }
    ],
    "system": "CREATE TABLE Order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有产品名称和对每个产品有订单的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"
      }
    ],
    "system": "CREATE TABLE Order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE Products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE Orders (order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同产品的名称是什么，以及订购了每种产品的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name"
      }
    ],
    "system": "CREATE TABLE Order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE Products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE Orders (order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示订单ID和每个订单的产品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id"
      }
    ],
    "system": "CREATE TABLE Order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个订单ID对应多少个不同的产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id"
      }
    ],
    "system": "CREATE TABLE Order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示订单ID和每个订单的总数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id"
      }
    ],
    "system": "CREATE TABLE Order_items (order_id VARCHAR, product_quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出所有订单的订单ID，以及每个订单中的总产品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  sum(product_quantity) FROM Order_items GROUP BY order_id"
      }
    ],
    "system": "CREATE TABLE Order_items (order_id VARCHAR, product_quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少产品不包括在任何订单中？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR), CREATE TABLE Order_items (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算从未订购的产品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR), CREATE TABLE Order_items (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1850年之前有多少教堂开放？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Church WHERE Open_Date  <  1850"
      }
    ],
    "system": "CREATE TABLE Church (Open_Date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有教堂的名称、开放日期和组织者。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  open_date ,  organized_by FROM Church"
      }
    ],
    "system": "CREATE TABLE Church (open_date VARCHAR, name VARCHAR, organized_by VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以开放日期的降序列出所有教堂名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM church ORDER BY open_date DESC"
      }
    ],
    "system": "CREATE TABLE church (open_date VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两个教堂开放的年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE church (open_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示1830至1840年间开办的教堂的组织者和姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT organized_by ,  name FROM church WHERE open_date BETWEEN 1830 AND 1840"
      }
    ],
    "system": "CREATE TABLE church (open_date INTEGER, name VARCHAR, organized_by VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有的开放年和在那一年开办的教堂数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT open_date ,  count(*) FROM church GROUP BY open_date"
      }
    ],
    "system": "CREATE TABLE church (open_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "为最近开办的三个教堂显示名字和开放年。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE church (open_date VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们的记录中有多少女性年龄超过30岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM people WHERE is_male  =  '女' AND age  >  30"
      }
    ],
    "system": "CREATE TABLE people (age INTEGER, is_male VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示30岁以上和25岁以下的人来自的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30"
      }
    ],
    "system": "CREATE TABLE people (age INTEGER, country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有人的最小、最大和平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(age) ,  max(age) ,  avg(age) FROM people"
      }
    ],
    "system": "CREATE TABLE people (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有年龄小于平均值的人的姓名和国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  country FROM people WHERE age  <  (SELECT avg(age) FROM people)"
      }
    ],
    "system": "CREATE TABLE people (age INTEGER, country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在2014年后的所有婚礼的一对男女的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id WHERE T1.year  >  2014"
      }
    ],
    "system": "CREATE TABLE wedding (male_id VARCHAR, year INTEGER, female_id VARCHAR), CREATE TABLE people (people_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有没有婚礼的男性的姓名和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  age FROM people WHERE is_male  =  'T' AND people_id NOT IN (SELECT male_id FROM wedding)"
      }
    ],
    "system": "CREATE TABLE people (people_id VARCHAR, age VARCHAR, name VARCHAR, is_male VARCHAR, male_id VARCHAR), CREATE TABLE wedding (people_id VARCHAR, age VARCHAR, name VARCHAR, is_male VARCHAR, male_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示除了在第2015年举行婚礼的那些教堂外，其他所有教堂的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015"
      }
    ],
    "system": "CREATE TABLE church (church_id VARCHAR, name VARCHAR), CREATE TABLE wedding (year VARCHAR, church_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有举办过至少两次婚礼的教堂名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE church (church_id VARCHAR, name VARCHAR), CREATE TABLE wedding (church_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在2016年有婚礼的所有“加拿大”女性的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  '女' AND T2.country  =  '加拿大'"
      }
    ],
    "system": "CREATE TABLE wedding (year VARCHAR, female_id VARCHAR), CREATE TABLE people (country VARCHAR, people_id VARCHAR, name VARCHAR, is_male VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2016年有多少婚礼？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM wedding WHERE YEAR  =  2016"
      }
    ],
    "system": "CREATE TABLE wedding (YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有为30岁以上的人举行婚礼的教堂名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30"
      }
    ],
    "system": "CREATE TABLE wedding (church_id VARCHAR, male_id VARCHAR, female_id VARCHAR), CREATE TABLE people (age INTEGER, people_id VARCHAR), CREATE TABLE church (church_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有国家和每个国家的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT country ,  count(*) FROM people GROUP BY country"
      }
    ],
    "system": "CREATE TABLE people (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2016年有多少教堂举行婚礼？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT church_id) FROM wedding WHERE YEAR  =  2016"
      }
    ],
    "system": "CREATE TABLE wedding (church_id VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少艺术家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计艺术家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示按加入年份排序的所有艺术家的姓名，年龄和国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, age VARCHAR, name VARCHAR, Year_Join VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按他们加入的年份排序的艺术家的姓名、年龄和国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  age ,  country FROM artist ORDER BY Year_Join"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, age VARCHAR, name VARCHAR, Year_Join VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "艺术家的不同国家是什么样的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT country FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回艺术家的不同国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT country FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不是来自“美国”的所有艺术家的名字和加入的年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  year_join FROM artist WHERE country != '美国'"
      }
    ],
    "system": "CREATE TABLE artist (year_join VARCHAR, country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是“美国”的艺术家的姓名和加入年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  year_join FROM artist WHERE country != '美国'"
      }
    ],
    "system": "CREATE TABLE artist (year_join VARCHAR, country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少艺术家年龄在46岁以上而且是正在1990年以后加入？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, year_join INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计超过46岁并在1990岁后加入的艺术家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, year_join INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“美国”所有艺术家的平均年龄和最小年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  '美国'"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回来自“美国”艺术家的平均年龄和最小年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  '美国'"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最新加入的艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE artist (year_join VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最新加入的艺术家的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE artist (year_join VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2005年或以后有多少展览？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005"
      }
    ],
    "system": "CREATE TABLE exhibition (YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计在2005或之后发的展览数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM exhibition WHERE YEAR  >=  2005"
      }
    ],
    "system": "CREATE TABLE exhibition (YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示票价低于15的所有展览的主题和年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15"
      }
    ],
    "system": "CREATE TABLE exhibition (theme VARCHAR, ticket_price INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有门票价格低于15的展览的主题和年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15"
      }
    ],
    "system": "CREATE TABLE exhibition (theme VARCHAR, ticket_price INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有艺术家的名字和每个艺术家的展览的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id"
      }
    ],
    "system": "CREATE TABLE exhibition (artist_id VARCHAR), CREATE TABLE artist (artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个艺术家都有多少展览？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  count(*) FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id"
      }
    ],
    "system": "CREATE TABLE exhibition (artist_id VARCHAR), CREATE TABLE artist (artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展览最多的的艺术家名字和国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE exhibition (artist_id VARCHAR), CREATE TABLE artist (country VARCHAR, artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回展览次数最多的艺术家相对应的姓名和国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE exhibition (artist_id VARCHAR), CREATE TABLE artist (country VARCHAR, artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有任何展览的艺术家名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)"
      }
    ],
    "system": "CREATE TABLE artist (artist_id VARCHAR, name VARCHAR), CREATE TABLE exhibition (artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些没有展览的艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)"
      }
    ],
    "system": "CREATE TABLE artist (artist_id VARCHAR, name VARCHAR), CREATE TABLE exhibition (artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "门票价格高于平均水平的展览的主题和艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)"
      }
    ],
    "system": "CREATE TABLE exhibition (ticket_price INTEGER), CREATE TABLE artist (artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回票价高于平均水平的艺术家姓名及其展览主题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)"
      }
    ],
    "system": "CREATE TABLE exhibition (ticket_price INTEGER), CREATE TABLE artist (artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示2009年之前所有年份展览的平均、最低和最高门票价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009"
      }
    ],
    "system": "CREATE TABLE exhibition (YEAR INTEGER, ticket_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2009年之前的展览会平均、最低和最高票价是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009"
      }
    ],
    "system": "CREATE TABLE exhibition (YEAR INTEGER, ticket_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以门票价格的降序展示所有展览的主题和年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC"
      }
    ],
    "system": "CREATE TABLE exhibition (theme VARCHAR, ticket_price VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展览的主题和年份是什么，按门票价格下降排序？"
      },
      {
        "from": "assistant",
        "value": "SELECT theme ,  YEAR FROM exhibition ORDER BY ticket_price DESC"
      }
    ],
    "system": "CREATE TABLE exhibition (theme VARCHAR, ticket_price VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2004年度展览的主题、日期和出席情况是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004"
      }
    ],
    "system": "CREATE TABLE exhibition_record (exhibition_id VARCHAR, attendance VARCHAR, date VARCHAR), CREATE TABLE exhibition (theme VARCHAR, year VARCHAR, exhibition_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2004发生的展览的主题、日期和出席情况。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004"
      }
    ],
    "system": "CREATE TABLE exhibition_record (exhibition_id VARCHAR, attendance VARCHAR, date VARCHAR), CREATE TABLE exhibition (theme VARCHAR, year VARCHAR, exhibition_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有在2004没有展览的艺术家名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004"
      }
    ],
    "system": "CREATE TABLE artist (artist_id VARCHAR, name VARCHAR), CREATE TABLE exhibition (year VARCHAR, artist_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2004没有举办展览的艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM artist EXCEPT SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.year  =  2004"
      }
    ],
    "system": "CREATE TABLE artist (artist_id VARCHAR, name VARCHAR), CREATE TABLE exhibition (year VARCHAR, artist_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示参展人数记录包括低于100人及超过500人的展览的主题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500"
      }
    ],
    "system": "CREATE TABLE exhibition_record (attendance INTEGER, exhibition_id VARCHAR), CREATE TABLE exhibition (theme VARCHAR, exhibition_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展览的出席人数曾在100以下和500以上的主题有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500"
      }
    ],
    "system": "CREATE TABLE exhibition_record (attendance INTEGER, exhibition_id VARCHAR), CREATE TABLE exhibition (theme VARCHAR, exhibition_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少展览的参观人数超过100人或门票价格低于10？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10"
      }
    ],
    "system": "CREATE TABLE exhibition_record (attendance INTEGER, exhibition_id VARCHAR), CREATE TABLE exhibition (exhibition_id VARCHAR, ticket_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数一数出席人数超过100人或门票价格低于10人的展览会数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10"
      }
    ],
    "system": "CREATE TABLE exhibition_record (attendance INTEGER, exhibition_id VARCHAR), CREATE TABLE exhibition (exhibition_id VARCHAR, ticket_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示平均展览出席人数超过200的所有艺术家的姓名，。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200"
      }
    ],
    "system": "CREATE TABLE exhibition_record (attendance INTEGER, exhibition_id VARCHAR), CREATE TABLE exhibition (artist_id VARCHAR, exhibition_id VARCHAR), CREATE TABLE artist (artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展览平均吸引200多位参展者的艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200"
      }
    ],
    "system": "CREATE TABLE exhibition_record (attendance INTEGER, exhibition_id VARCHAR), CREATE TABLE exhibition (artist_id VARCHAR, exhibition_id VARCHAR), CREATE TABLE artist (artist_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到标题为“橙色”的项目的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT i_id FROM item WHERE title  =  \"橙色\""
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出项目表中的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM item"
      }
    ],
    "system": "CREATE TABLE item (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到评论的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM review"
      }
    ],
    "system": "CREATE TABLE review (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少用户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM useracct"
      }
    ],
    "system": "CREATE TABLE useracct (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有评论的平均和最大评级。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(rating) ,  max(rating) FROM review"
      }
    ],
    "system": "CREATE TABLE review (rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有评论的最高评级。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(rank) FROM review"
      }
    ],
    "system": "CREATE TABLE review (rank INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的用户写了一些评论？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT u_id) FROM review"
      }
    ],
    "system": "CREATE TABLE review (u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的项目被一些用户评论？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT i_id) FROM review"
      }
    ],
    "system": "CREATE TABLE review (i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有收到任何评论的项目的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
      }
    ],
    "system": "CREATE TABLE item (i_id VARCHAR), CREATE TABLE review (i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有留下任何评论的用户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"
      }
    ],
    "system": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR), CREATE TABLE review (name VARCHAR, u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找评级为10的商品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  =  10"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR), CREATE TABLE review (rating VARCHAR, i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找评级高于所有项目的平均评级的项目的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review)"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR), CREATE TABLE review (rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到任何评分低于5的项目的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR), CREATE TABLE review (rating INTEGER, i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找同时获得高于8和低于5的评分的项目的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  8 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  <  5"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR), CREATE TABLE review (rating INTEGER, i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找评分高于3且平均评分高于5的项目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rank  >  3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id HAVING avg(T2.rating)  >  5"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR), CREATE TABLE review (rank INTEGER, rating INTEGER, i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有最低平均评分的项目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR), CREATE TABLE review (rating INTEGER, i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有项目的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM item ORDER BY title"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找提供最多评论的用户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR), CREATE TABLE review (u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有最高平均评级的项目的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR), CREATE TABLE review (rating INTEGER, i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出具有最高平均评分的项目的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR), CREATE TABLE review (rank INTEGER, i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个用户，返回他们给出的评论的名称和平均评级。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id"
      }
    ],
    "system": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR), CREATE TABLE review (u_id VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个用户，找到他们的名字和他们写的评论的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id"
      }
    ],
    "system": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR), CREATE TABLE review (u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最高评级的用户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id ORDER BY T2.rating DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR), CREATE TABLE review (rating VARCHAR, u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有最高平均信任分数的源用户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.source_u_id GROUP BY T2.source_u_id ORDER BY avg(trust) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR), CREATE TABLE trust (source_u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个目标用户的姓名和平均信任分数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  avg(trust) FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id GROUP BY T2.target_u_id"
      }
    ],
    "system": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR), CREATE TABLE trust (target_u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最低信任分数的目标用户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id ORDER BY trust LIMIT 1"
      }
    ],
    "system": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR), CREATE TABLE trust (target_u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有收到任何评论的项目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
      }
    ],
    "system": "CREATE TABLE item (title VARCHAR, i_id VARCHAR), CREATE TABLE review (title VARCHAR, i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有留下任何评论的用户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"
      }
    ],
    "system": "CREATE TABLE useracct (name VARCHAR, u_id VARCHAR), CREATE TABLE review (name VARCHAR, u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有写任何评论的用户的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)"
      }
    ],
    "system": "CREATE TABLE useracct (u_id VARCHAR), CREATE TABLE review (u_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有任何评论的项目的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM item WHERE i_id NOT IN (SELECT i_id FROM review)"
      }
    ],
    "system": "CREATE TABLE item (i_id VARCHAR), CREATE TABLE review (i_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM player"
      }
    ],
    "system": "CREATE TABLE player (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按升序排列运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Player_name FROM player ORDER BY Votes ASC"
      }
    ],
    "system": "CREATE TABLE player (Votes VARCHAR, Player_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "运动员的性别和职业是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Gender ,  Occupation FROM player"
      }
    ],
    "system": "CREATE TABLE player (Occupation VARCHAR, Gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出职业不是“研究员”的运动员的姓名和住所。"
      },
      {
        "from": "assistant",
        "value": "SELECT Player_name ,  residence FROM player WHERE Occupation != \"研究员\""
      }
    ],
    "system": "CREATE TABLE player (Occupation VARCHAR, residence VARCHAR, Player_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示住在“池”或“皓”的球员的赞助商的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Sponsor_name FROM player WHERE Residence  =  \"池\" OR Residence  =  \"皓\""
      }
    ],
    "system": "CREATE TABLE player (Sponsor_name VARCHAR, Residence VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "票数最多的运动员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE player (Votes VARCHAR, Player_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的职业和每个职业运动员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Occupation ,  COUNT(*) FROM player GROUP BY Occupation"
      }
    ],
    "system": "CREATE TABLE player (Occupation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示最常见的运动员职业。"
      },
      {
        "from": "assistant",
        "value": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE player (Occupation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两个运动员的住址。"
      },
      {
        "from": "assistant",
        "value": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE player (Residence VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示运动员姓名和教练员姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID"
      }
    ],
    "system": "CREATE TABLE player_coach (Coach_ID VARCHAR, Player_ID VARCHAR), CREATE TABLE coach (Coach_ID VARCHAR, coach_name VARCHAR), CREATE TABLE player (Player_ID VARCHAR, Player_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示排名第1的教练执教的球员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1"
      }
    ],
    "system": "CREATE TABLE player_coach (Coach_ID VARCHAR, Player_ID VARCHAR), CREATE TABLE coach (Coach_ID VARCHAR, Rank VARCHAR), CREATE TABLE player (Player_ID VARCHAR, Player_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示2011年后开始有教练的球员的名字和性别。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T1.Starting_year  >  2011"
      }
    ],
    "system": "CREATE TABLE player_coach (Coach_ID VARCHAR, Player_ID VARCHAR, Starting_year INTEGER), CREATE TABLE coach (Coach_ID VARCHAR), CREATE TABLE player (Player_ID VARCHAR, gender VARCHAR, Player_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照选手投票的降序，显示选手姓名和教练姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC"
      }
    ],
    "system": "CREATE TABLE player_coach (Coach_ID VARCHAR, Player_ID VARCHAR), CREATE TABLE coach (Coach_ID VARCHAR, coach_name VARCHAR), CREATE TABLE player (Player_ID VARCHAR, Votes VARCHAR, Player_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有教练的运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Player_name FROM player WHERE Player_ID NOT IN (SELECT Player_ID FROM player_coach)"
      }
    ],
    "system": "CREATE TABLE player (Player_ID VARCHAR, Player_name VARCHAR), CREATE TABLE player_coach (Player_ID VARCHAR, Player_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示既有性别为“男”又有性别为“女”的运动员的住址。"
      },
      {
        "from": "assistant",
        "value": "SELECT Residence FROM player WHERE gender  =  \"男\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"女\""
      }
    ],
    "system": "CREATE TABLE player (gender VARCHAR, Residence VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个俱乐部有多少教练？列出教练员的ID、姓名和教练员数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.club_id ,  T1.club_name, count(*) FROM club AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id"
      }
    ],
    "system": "CREATE TABLE club (club_name VARCHAR, club_id VARCHAR), CREATE TABLE coach (club_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多教练的俱乐部有多少枚金牌？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.club_id ,  T1.gold FROM match_result AS T1 JOIN coach AS T2 ON T1.club_id  =  T2.club_id GROUP BY T1.club_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE match_result (gold VARCHAR, club_id VARCHAR), CREATE TABLE coach (club_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少体操运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM gymnast"
      }
    ],
    "system": "CREATE TABLE gymnast (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算体操运动员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM gymnast"
      }
    ],
    "system": "CREATE TABLE gymnast (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按降序，列出体操运动员的总分。"
      },
      {
        "from": "assistant",
        "value": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
      }
    ],
    "system": "CREATE TABLE gymnast (Total_Points VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按降序排列，所有体操运动员的总分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC"
      }
    ],
    "system": "CREATE TABLE gymnast (Total_Points VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按自由体操点数降序列出体操运动员的总分。"
      },
      {
        "from": "assistant",
        "value": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
      }
    ],
    "system": "CREATE TABLE gymnast (Floor_Exercise_Points VARCHAR, Total_Points VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "体操运动员按自由体操点数的下降顺序，总分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC"
      }
    ],
    "system": "CREATE TABLE gymnast (Floor_Exercise_Points VARCHAR, Total_Points VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有体操运动员的平均单杠得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
      }
    ],
    "system": "CREATE TABLE gymnast (Horizontal_Bar_Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有体操运动员的平均单杠得分。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Horizontal_Bar_Points) FROM gymnast"
      }
    ],
    "system": "CREATE TABLE gymnast (Horizontal_Bar_Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM People ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE People (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列人名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM People ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE People (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "体操运动员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回体操运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "家乡不是“洛阳”的体操运动员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"洛阳\""
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回不是在“洛阳”长大的体操运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T2.Hometown != \"洛阳\""
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高的人年龄是多少岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (Age VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回身高最大的人的年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (Age VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出5个最老的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE People (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "五个最老的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE People (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最年轻的体操运动员的总得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE gymnast (Total_Points VARCHAR, Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最年轻的体操运动员的总得分。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE gymnast (Total_Points VARCHAR, Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有体操运动员的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有体操运动员的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.Age) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总得分超过57.5的体操运动员的不同家乡是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"
      }
    ],
    "system": "CREATE TABLE gymnast (Total_Points INTEGER, Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出总分在57.5以上的体操运动员的不同家乡。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5"
      }
    ],
    "system": "CREATE TABLE gymnast (Total_Points INTEGER, Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "体操运动员的家乡和体操运动员的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个家乡有多少体操运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "体操运动员最多的家乡是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回体操运动员中最多的家乡。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些家乡有至少两名体操运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我两个或更多体操运动员来自的家乡。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按身高顺序排列体操运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Height VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照身高排序，体操运动员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC"
      }
    ],
    "system": "CREATE TABLE gymnast (Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Height VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有体操运动员的不同家乡。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR), CREATE TABLE gymnast (Gymnast_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个家乡没有体操运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Hometown FROM people EXCEPT SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Hometown VARCHAR), CREATE TABLE gymnast (Gymnast_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示有23岁以上和20岁以下的人的家乡。"
      },
      {
        "from": "assistant",
        "value": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"
      }
    ],
    "system": "CREATE TABLE people (Hometown VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个家乡有23岁以上和20岁以下的人？"
      },
      {
        "from": "assistant",
        "value": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20"
      }
    ],
    "system": "CREATE TABLE people (Hometown VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这些人有多少不同的家乡？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Hometown) FROM people"
      }
    ],
    "system": "CREATE TABLE people (Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数一数这些人的不同家乡。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Hometown) FROM people"
      }
    ],
    "system": "CREATE TABLE people (Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以总分递减顺序显示体操运动员的年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"
      }
    ],
    "system": "CREATE TABLE gymnast (Total_Points VARCHAR, Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按它们总得分降序，体操运动员的年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC"
      }
    ],
    "system": "CREATE TABLE gymnast (Total_Points VARCHAR, Gymnast_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出除了名为“小智”的账户的所有账户的总储蓄余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != '小智'"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE savings (custid VARCHAR, balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不属于“小智”这个名字的人的储蓄账户的总储蓄余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != '小智'"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE savings (custid VARCHAR, balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少个帐户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM accounts"
      }
    ],
    "system": "CREATE TABLE accounts (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算账户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM accounts"
      }
    ],
    "system": "CREATE TABLE accounts (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有帐户的总储蓄余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(balance) FROM checking"
      }
    ],
    "system": "CREATE TABLE checking (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到在支票账户上的总储蓄余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(balance) FROM checking"
      }
    ],
    "system": "CREATE TABLE checking (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到平均支票余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(balance) FROM checking"
      }
    ],
    "system": "CREATE TABLE checking (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支票账户的平均余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(balance) FROM checking"
      }
    ],
    "system": "CREATE TABLE checking (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少账户储蓄余额高于平均储蓄余额？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)"
      }
    ],
    "system": "CREATE TABLE savings (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找存款余额高于平均存款余额的账户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)"
      }
    ],
    "system": "CREATE TABLE savings (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找支票余额低于最大支票余额的帐户的名称和id。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支票余额小于最大支票余额的账户相对应的客户ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有名字包含“怡”的所有者的账户支票余额是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '怡'"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到属于名称包含“怡”的所有者的支票账户余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name LIKE '怡'"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“小智”账户的支票余额和储蓄余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  '小智'"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“小智”账户中的支票余额和储蓄余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  '小智'"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找支票余额高于平均支票余额但储蓄余额低于平均储蓄余额的帐户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance INTEGER), CREATE TABLE savings (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支票余额大于平均支票余额而储蓄余额低于平均储蓄余额的账户的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance INTEGER), CREATE TABLE savings (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找存款余额高于平均存款余额的账户的支票余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR, balance INTEGER), CREATE TABLE savings (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "属于储蓄余额大于平均储蓄余额的人的支票账户的余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR, balance INTEGER), CREATE TABLE savings (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照字母序列出所有客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM accounts ORDER BY name"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的所有客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM accounts ORDER BY name"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有最低支票和储蓄总余额的帐户名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支票和储蓄余额总额最低的账户对应的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找存款余额高于平均存款余额的账户的名称以及总的支票和存款余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR, balance INTEGER), CREATE TABLE savings (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于存款余额高于平均存款余额的帐户，名称及支票和储蓄余额总额是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR, balance INTEGER), CREATE TABLE savings (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到存款余额最低的账户的名称和支票余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "属于储蓄余额最低的客户的支票账户的名称和余额是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个帐户名称的支票帐户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "开户客户的姓名是什么？每个客户有多少支票账户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个帐户名称的总储蓄余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE savings (custid VARCHAR, balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有账户的客户的名字是什么，每个账户的储蓄余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE savings (custid VARCHAR, balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找支票余额低于平均支票余额的帐户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支票余额低于平均支票余额的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM checking)"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出支票余额最高的账户的储蓄余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE accounts (custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "余额最高的客户的帐户的储蓄余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE accounts (custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找按总余额升序排序的所有账户的总支票余额和储蓄余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance"
      }
    ],
    "system": "CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按总余额排序，所有客户的支票余额和储蓄余额总和是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance"
      }
    ],
    "system": "CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到存款余额最低的账户的名称和支票余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "存款余额最低的账户的名称和支票余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找银行所有账户的名称、支票余额和储蓄余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有客户的姓名、支票余额和存款余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "讲支票余额和储蓄余额总额按降序排列,查找银行所有账户的名称、支票余额和储蓄余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按支票存款和存款余额总和递减，客户的姓名、支票余额和存款余额是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (balance VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找支票余额高于相应储蓄余额的帐户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR, balance INTEGER), CREATE TABLE savings (custid VARCHAR, balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支票余额高于储蓄余额的客户有哪些名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T2.balance  >  T3.balance"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR, balance INTEGER), CREATE TABLE savings (custid VARCHAR, balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找存款余额低于相应支票余额的账户的名称及总支票和存款余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR, balance INTEGER), CREATE TABLE savings (custid VARCHAR, balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "储蓄余额低于支票余额的客户的名字是什么？他们的支票余额和储蓄余额合计是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE checking (custid VARCHAR, balance INTEGER), CREATE TABLE savings (custid VARCHAR, balance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按存款余额的降序排列，查找前3个账户的名称和存款余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这三个有着最高储蓄余额的账户的名称和存款余额是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE accounts (name VARCHAR, custid VARCHAR), CREATE TABLE savings (balance VARCHAR, custid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "市场占有率至少为5的主流浏览器有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM browser WHERE market_share  >=  5"
      }
    ],
    "system": "CREATE TABLE browser (market_share INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以市场份额降序的顺序列出浏览器的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM browser ORDER BY market_share DESC"
      }
    ],
    "system": "CREATE TABLE browser (market_share VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有浏览器的ID、名称和市场份额。"
      },
      {
        "from": "assistant",
        "value": "SELECT id ,  name ,  market_share FROM browser"
      }
    ],
    "system": "CREATE TABLE browser (name VARCHAR, market_share VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出的浏览器的最大、最小和平均市场占有率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser"
      }
    ],
    "system": "CREATE TABLE browser (market_share INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "浏览器“Safari”的ID和市场份额是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT id ,  market_share FROM browser WHERE name  =  'Safari'"
      }
    ],
    "system": "CREATE TABLE browser (name VARCHAR, market_share VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不只使用“广播” 类型的连接的网络客户端加速器的名称和操作系统是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  operating_system FROM web_client_accelerator WHERE CONNECTION != '广播'"
      }
    ],
    "system": "CREATE TABLE web_client_accelerator (operating_system VARCHAR, CONNECTION VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1998年以后与加速器“代理服务器”兼容的浏览器叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  '代理服务器' AND T2.compatible_since_year  >  1998"
      }
    ],
    "system": "CREATE TABLE browser (id VARCHAR, name VARCHAR), CREATE TABLE accelerator_compatible_browser (accelerator_id VARCHAR, browser_id VARCHAR, compatible_since_year INTEGER), CREATE TABLE web_client_accelerator (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与两个或多个浏览器兼容的网络加速器的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE web_client_accelerator (Name VARCHAR, id VARCHAR), CREATE TABLE accelerator_compatible_browser (accelerator_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与最多数量的网络加速器兼容的浏览器的id和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE browser (name VARCHAR, id VARCHAR), CREATE TABLE accelerator_compatible_browser (browser_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "网络加速器“CACHEbox”和浏览器“IE浏览器”什么时候兼容的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id WHERE T3.name  =  'CACHEbox' AND T2.name  =  'IE浏览器'"
      }
    ],
    "system": "CREATE TABLE accelerator_compatible_browser (compatible_since_year VARCHAR, browser_id VARCHAR, accelerator_id VARCHAR), CREATE TABLE browser (name VARCHAR, id VARCHAR), CREATE TABLE web_client_accelerator (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "网络客户端加速器支持多少种不同的客户端？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT client) FROM web_client_accelerator"
      }
    ],
    "system": "CREATE TABLE web_client_accelerator (client VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个加速器与列出的浏览器不兼容？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );"
      }
    ],
    "system": "CREATE TABLE web_client_accelerator (accelerator_id VARCHAR, id VARCHAR), CREATE TABLE accelerator_compatible_browser (accelerator_id VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些不同的加速器与市场占有率高于15的浏览器兼容？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;"
      }
    ],
    "system": "CREATE TABLE web_client_accelerator (id VARCHAR, name VARCHAR), CREATE TABLE accelerator_compatible_browser (accelerator_id VARCHAR, browser_id VARCHAR), CREATE TABLE browser (id VARCHAR, market_share INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出与“CACHEbox”和“Fasterfox”兼容的浏览器的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'"
      }
    ],
    "system": "CREATE TABLE web_client_accelerator (name VARCHAR, id VARCHAR), CREATE TABLE accelerator_compatible_browser (accelerator_id VARCHAR, browser_id VARCHAR), CREATE TABLE browser (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与名为“Opera”的浏览器不兼容的加速器名称和支持操作系统。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  operating_system FROM web_client_accelerator EXCEPT SELECT T1.name ,  T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name  =  'Opera'"
      }
    ],
    "system": "CREATE TABLE web_client_accelerator (operating_system VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE accelerator_compatible_browser (accelerator_id VARCHAR, browser_id VARCHAR), CREATE TABLE browser (name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个加速器名称包含子字符串“Opera”？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM web_client_accelerator WHERE name LIKE \"Opera\""
      }
    ],
    "system": "CREATE TABLE web_client_accelerator (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个操作系统的网络加速器的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Operating_system ,  count(*) FROM web_client_accelerator GROUP BY Operating_system"
      }
    ],
    "system": "CREATE TABLE web_client_accelerator (Operating_system VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照兼容年份的降序给出所有兼容浏览器和加速器的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC"
      }
    ],
    "system": "CREATE TABLE accelerator_compatible_browser (compatible_since_year VARCHAR, accelerator_id VARCHAR, browser_id VARCHAR), CREATE TABLE browser (id VARCHAR, name VARCHAR), CREATE TABLE web_client_accelerator (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少摔跤运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM wrestler"
      }
    ],
    "system": "CREATE TABLE wrestler (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算摔跤运动员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM wrestler"
      }
    ],
    "system": "CREATE TABLE wrestler (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出摔跤运动员的姓名，按降序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM wrestler ORDER BY Days_held DESC"
      }
    ],
    "system": "CREATE TABLE wrestler (Days_held VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "摔跤运动员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM wrestler ORDER BY Days_held DESC"
      }
    ],
    "system": "CREATE TABLE wrestler (Days_held VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最少保持天数的摔跤运动员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE wrestler (Days_held VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最低保持天数的摔跤手的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE wrestler (Days_held VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "位置不是“广州，中国”的摔跤运动员的不同统治期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"广州，中国\""
      }
    ],
    "system": "CREATE TABLE wrestler (LOCATION VARCHAR, Reign VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出不在“广州，中国”的摔跤运动员的不同统治期。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Reign FROM wrestler WHERE LOCATION != \"广州，中国\""
      }
    ],
    "system": "CREATE TABLE wrestler (LOCATION VARCHAR, Reign VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "摔跤运动员的名字和位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  LOCATION FROM wrestler"
      }
    ],
    "system": "CREATE TABLE wrestler (LOCATION VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "说出所有摔跤运动员的姓名和位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  LOCATION FROM wrestler"
      }
    ],
    "system": "CREATE TABLE wrestler (LOCATION VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“奥神队”队的摔跤运动员的淘汰赛影片有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"奥神队\""
      }
    ],
    "system": "CREATE TABLE Elimination (Elimination_Move VARCHAR, Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“奥神队”队摔跤运动员的淘汰赛影片。"
      },
      {
        "from": "assistant",
        "value": "SELECT Elimination_Move FROM Elimination WHERE Team  =  \"奥神队\""
      }
    ],
    "system": "CREATE TABLE Elimination (Elimination_Move VARCHAR, Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "摔跤运动员的名字和淘汰赛影片是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID"
      }
    ],
    "system": "CREATE TABLE elimination (Wrestler_ID VARCHAR, Elimination_Move VARCHAR), CREATE TABLE wrestler (Wrestler_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出摔跤手的名字及其淘汰赛影片。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Elimination_Move FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID"
      }
    ],
    "system": "CREATE TABLE elimination (Wrestler_ID VARCHAR, Elimination_Move VARCHAR), CREATE TABLE wrestler (Wrestler_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出摔跤选手和淘汰赛队伍的名单，按举行日数降序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC"
      }
    ],
    "system": "CREATE TABLE elimination (Wrestler_ID VARCHAR, Team VARCHAR), CREATE TABLE wrestler (Wrestler_ID VARCHAR, Days_held VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "摔跤选手和他们的淘汰赛队伍的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC"
      }
    ],
    "system": "CREATE TABLE elimination (Wrestler_ID VARCHAR, Team VARCHAR), CREATE TABLE wrestler (Wrestler_ID VARCHAR, Days_held VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出最大保持天数的摔跤运动员被淘汰次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE elimination (Wrestler_ID VARCHAR, Time VARCHAR), CREATE TABLE wrestler (Wrestler_ID VARCHAR, Days_held VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多保持天数的摔跤运动员被淘汰的次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE elimination (Wrestler_ID VARCHAR, Time VARCHAR), CREATE TABLE wrestler (Wrestler_ID VARCHAR, Days_held VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示保持天数超过50天的摔跤选手的淘汰次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50"
      }
    ],
    "system": "CREATE TABLE elimination (Wrestler_ID VARCHAR, Time VARCHAR), CREATE TABLE wrestler (Wrestler_ID VARCHAR, Days_held INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "保持天数超过50的摔跤运动员的淘汰次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50"
      }
    ],
    "system": "CREATE TABLE elimination (Wrestler_ID VARCHAR, Time VARCHAR), CREATE TABLE wrestler (Wrestler_ID VARCHAR, Days_held INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的淘汰赛队伍和每个队伍淘汰赛的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team"
      }
    ],
    "system": "CREATE TABLE elimination (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个队有多少淘汰赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team ,  COUNT(*) FROM elimination GROUP BY Team"
      }
    ],
    "system": "CREATE TABLE elimination (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示超过三次被淘汰的队伍。"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3"
      }
    ],
    "system": "CREATE TABLE elimination (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪支队伍有超过3次被淘汰？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3"
      }
    ],
    "system": "CREATE TABLE elimination (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示摔跤运动员的位置和保持天数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Reign ,  Days_held FROM wrestler"
      }
    ],
    "system": "CREATE TABLE wrestler (Reign VARCHAR, Days_held VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有摔跤运动员的统治和保持日子是怎样的？"
      },
      {
        "from": "assistant",
        "value": "SELECT Reign ,  Days_held FROM wrestler"
      }
    ],
    "system": "CREATE TABLE wrestler (Reign VARCHAR, Days_held VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "保持不到100天的摔跤运动员名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM wrestler WHERE Days_held  <  100"
      }
    ],
    "system": "CREATE TABLE wrestler (Name VARCHAR, Days_held INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回保持少于100天的摔跤运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM wrestler WHERE Days_held  <  100"
      }
    ],
    "system": "CREATE TABLE wrestler (Name VARCHAR, Days_held INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请展示统治最多的摔跤手。"
      },
      {
        "from": "assistant",
        "value": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE wrestler (Reign VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "摔跤运动员最常见的是哪个统治？"
      },
      {
        "from": "assistant",
        "value": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE wrestler (Reign VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出有两个摔跤手的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE wrestler (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些位置有两个摔跤运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE wrestler (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有被淘汰的摔跤运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)"
      }
    ],
    "system": "CREATE TABLE wrestler (Wrestler_ID VARCHAR, Name VARCHAR), CREATE TABLE elimination (Wrestler_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "摔跤运动员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM wrestler WHERE Wrestler_ID NOT IN (SELECT Wrestler_ID FROM elimination)"
      }
    ],
    "system": "CREATE TABLE wrestler (Wrestler_ID VARCHAR, Name VARCHAR), CREATE TABLE elimination (Wrestler_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示那些既有被“大志”淘汰的摔跤选手，又有被“一龙”淘汰的摔跤选手的队伍。"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"大志\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"一龙\""
      }
    ],
    "system": "CREATE TABLE Elimination (Team VARCHAR, Eliminated_By VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "同时有被“大志”淘汰了和“一龙”淘汰了的摔跤选手的队伍都有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"大志\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"一龙\""
      }
    ],
    "system": "CREATE TABLE Elimination (Team VARCHAR, Eliminated_By VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的团队遭受淘汰的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT team) FROM elimination"
      }
    ],
    "system": "CREATE TABLE elimination (team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少支不同的球队淘汰了摔跤手？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT team) FROM elimination"
      }
    ],
    "system": "CREATE TABLE elimination (team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示被“市明”或者“大志”淘汰的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"市明\" OR Eliminated_By  =  \"大志\""
      }
    ],
    "system": "CREATE TABLE elimination (TIME VARCHAR, Eliminated_By VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被“市明”或者“大志”淘汰的淘汰次数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"市明\" OR Eliminated_By  =  \"大志\""
      }
    ],
    "system": "CREATE TABLE elimination (TIME VARCHAR, Eliminated_By VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学校？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM school"
      }
    ],
    "system": "CREATE TABLE school (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计学校的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM school"
      }
    ],
    "system": "CREATE TABLE school (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序显示所有学校的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT school_name FROM school ORDER BY school_name"
      }
    ],
    "system": "CREATE TABLE school (school_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有学校的名字、地点、吉祥物。"
      },
      {
        "from": "assistant",
        "value": "SELECT school_name ,  LOCATION ,  mascot FROM school"
      }
    ],
    "system": "CREATE TABLE school (LOCATION VARCHAR, mascot VARCHAR, school_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学校的总共入学人数和平均入学人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(enrollment) ,  avg(enrollment) FROM school"
      }
    ],
    "system": "CREATE TABLE school (enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "入学人数高于平均水平的学校的吉祥物是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)"
      }
    ],
    "system": "CREATE TABLE school (mascot VARCHAR, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出入学人数最少的学校的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1"
      }
    ],
    "system": "CREATE TABLE school (enrollment VARCHAR, school_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有学校的平均、最大、最小入学人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school"
      }
    ],
    "system": "CREATE TABLE school (enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个县学校数量和总入学人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT county ,  count(*) ,  sum(enrollment) FROM school GROUP BY county"
      }
    ],
    "system": "CREATE TABLE school (county VARCHAR, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少捐赠者捐助名为“理工大学”的学校？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  \"理工大学\""
      }
    ],
    "system": "CREATE TABLE endowment (donator_name VARCHAR, school_id VARCHAR), CREATE TABLE school (school_id VARCHAR, school_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照捐赠金额的下降顺序列出每个捐赠者的姓名和捐赠金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC"
      }
    ],
    "system": "CREATE TABLE endowment (amount INTEGER, donator_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有捐赠的学校的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment)"
      }
    ],
    "system": "CREATE TABLE school (school_id VARCHAR, school_name VARCHAR), CREATE TABLE endowment (school_id VARCHAR, school_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有捐赠金额小于或等于10的学校的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.school_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T1.school_id HAVING sum(T1.amount)  <=  10"
      }
    ],
    "system": "CREATE TABLE endowment (amount INTEGER, school_id VARCHAR), CREATE TABLE school (school_id VARCHAR, school_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示捐助学校“理工大学”和“财经大学”的捐赠者的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  '理工大学' INTERSECT SELECT T1.donator_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  '财经大学'"
      }
    ],
    "system": "CREATE TABLE endowment (donator_name VARCHAR, school_id VARCHAR), CREATE TABLE school (school_id VARCHAR, school_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "除捐献金额小于9的捐赠者外，其他捐赠者的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount  <  9"
      }
    ],
    "system": "CREATE TABLE endowment (amount INTEGER, donator_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出数额最大的捐赠数和捐赠者的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE endowment (donator_name VARCHAR, amount VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2001年或以前，有多少预算在3000以上？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001"
      }
    ],
    "system": "CREATE TABLE budget (YEAR INTEGER, budgeted INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算2001年或以前预算额大于3000的预算数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM budget WHERE budgeted  >  3000 AND YEAR  <=  2001"
      }
    ],
    "system": "CREATE TABLE budget (YEAR INTEGER, budgeted INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示2002年或之后每所学校的名称、预算金额以及投资金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.school_name ,  T1.budgeted ,  T1.invested FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.year  >=  2002"
      }
    ],
    "system": "CREATE TABLE budget (budgeted VARCHAR, invested VARCHAR, school_id VARCHAR, year INTEGER), CREATE TABLE school (school_id VARCHAR, school_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有捐赠者的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT donator_name FROM endowment"
      }
    ],
    "system": "CREATE TABLE endowment (donator_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "多少预算记录的预算金额小于投资金额？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM budget WHERE budgeted  <  invested"
      }
    ],
    "system": "CREATE TABLE budget (invested INTEGER, budgeted INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“理工大学”学校所有年的预算总额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  '理工大学'"
      }
    ],
    "system": "CREATE TABLE budget (school_id VARCHAR, budgeted INTEGER), CREATE TABLE school (school_id VARCHAR, school_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示预算总额大于100或捐赠总额大于10的学校的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted)  >  100 OR sum(T3.amount)  >  10"
      }
    ],
    "system": "CREATE TABLE budget (school_id VARCHAR, budgeted INTEGER), CREATE TABLE school (school_id VARCHAR, school_name VARCHAR), CREATE TABLE endowment (amount INTEGER, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找有不止一个捐赠者捐赠超过8.5的学校的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE endowment (amount INTEGER, school_id VARCHAR), CREATE TABLE school (School_name VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找有不止一个捐赠者少于8.5的学校的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM (SELECT * FROM endowment WHERE amount  >  8.5 GROUP BY school_id HAVING count(*)  >  1)"
      }
    ],
    "system": "CREATE TABLE endowment (amount INTEGER, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照投资预算额和预算总额的百分比排序，列出预算总额超过6000所或在2003年之前成立的学校的名称、IHSAA足球班和吉祥物。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted"
      }
    ],
    "system": "CREATE TABLE school (School_name VARCHAR, IHSAA_Football_Class VARCHAR, school_id VARCHAR, Mascot VARCHAR), CREATE TABLE budget (total_budget_percent_budgeted VARCHAR, school_id VARCHAR, total_budget_percent_invested VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少栋建筑？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM building"
      }
    ],
    "system": "CREATE TABLE building (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据楼层数显示所有建筑物的名称、街道地址和楼层数。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  street_address ,  floors FROM building ORDER BY floors"
      }
    ],
    "system": "CREATE TABLE building (name VARCHAR, floors VARCHAR, street_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高的建筑物叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM building ORDER BY height_feet DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE building (name VARCHAR, height_feet VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有建筑的平均、最大和最小楼层数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building"
      }
    ],
    "system": "CREATE TABLE building (floors INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示高于平均高度或者楼层数高于平均的建筑物数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM building WHERE height_feet  >  (SELECT avg(height_feet) FROM building) OR floors  >  (SELECT avg(floors) FROM building)"
      }
    ],
    "system": "CREATE TABLE building (floors INTEGER, height_feet INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出高度至少200英尺以及楼层至少20层的建筑物的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM building WHERE height_feet  >=  200 AND floors  >=  20"
      }
    ],
    "system": "CREATE TABLE building (floors INTEGER, height_feet INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示1990年以后成立的、类型为“私立”的机构的名称和地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT institution ,  LOCATION FROM institution WHERE founded  >  1990 AND TYPE  =  '私立'"
      }
    ],
    "system": "CREATE TABLE institution (LOCATION VARCHAR, TYPE VARCHAR, founded INTEGER, institution VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示机构类型，以及每种类型的机构的数量和总注册人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE"
      }
    ],
    "system": "CREATE TABLE institution (TYPE VARCHAR, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示机构数量最多的机构类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE institution (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示1990年后成立至少有1000个注册人数的机构的机构类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM institution WHERE founded  >  1990 AND enrollment  >=  1000"
      }
    ],
    "system": "CREATE TABLE institution (founded INTEGER, TYPE VARCHAR, enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有任何机构的建筑物名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution)"
      }
    ],
    "system": "CREATE TABLE building (building_id VARCHAR, name VARCHAR), CREATE TABLE institution (building_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示建筑名称，除了那些含有在2003成立的机构的。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  =  2003"
      }
    ],
    "system": "CREATE TABLE building (building_id VARCHAR, name VARCHAR), CREATE TABLE institution (building_id VARCHAR, founded VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个建筑，显示建筑物的名称和其中的机构数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id"
      }
    ],
    "system": "CREATE TABLE building (building_id VARCHAR, name VARCHAR), CREATE TABLE institution (building_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示在1880年后建立的至少有两个机构的建筑物的名称和高度。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.height_feet FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  >  1880 GROUP BY T1.building_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE building (building_id VARCHAR, name VARCHAR, height_feet VARCHAR), CREATE TABLE institution (founded INTEGER, building_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有不同的机构类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT TYPE FROM institution"
      }
    ],
    "system": "CREATE TABLE institution (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示机构名称以及每个机构的蛋白质数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id"
      }
    ],
    "system": "CREATE TABLE institution (institution_id VARCHAR, institution VARCHAR), CREATE TABLE protein (institution_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少蛋白质与1880年后建立的机构或具有“私立”类型的机构相关？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id WHERE T1.founded  >  1880 OR T1.type  =  '私立'"
      }
    ],
    "system": "CREATE TABLE institution (founded INTEGER, type VARCHAR, institution_id VARCHAR), CREATE TABLE protein (institution_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示蛋白质名称和机构名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.protein_name ,  T1.institution FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id"
      }
    ],
    "system": "CREATE TABLE institution (institution_id VARCHAR, institution VARCHAR), CREATE TABLE protein (institution_id VARCHAR, protein_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在至少20层楼的建筑中，有多少机构与蛋白质相关联？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id JOIN building AS T3 ON T3.building_id  =  T1.building_id WHERE T3.floors  >=  20"
      }
    ],
    "system": "CREATE TABLE institution (building_id VARCHAR, institution_id VARCHAR), CREATE TABLE protein (institution_id VARCHAR), CREATE TABLE building (building_id VARCHAR, floors INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在我们的记录中没有蛋白质的相关机构有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM institution WHERE institution_id NOT IN (SELECT institution_id FROM protein)"
      }
    ],
    "system": "CREATE TABLE institution (institution_id VARCHAR), CREATE TABLE protein (institution_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有容量超过800电影院的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有在2010年和2011年开业的电影院。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM cinema WHERE openning_year  =  2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year  =  2011"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR, openning_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少电影院？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM cinema"
      }
    ],
    "system": "CREATE TABLE cinema (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数一数电影院的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM cinema"
      }
    ],
    "system": "CREATE TABLE cinema (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个影院的名称、开张年份和容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  openning_year ,  capacity FROM cinema"
      }
    ],
    "system": "CREATE TABLE cinema (openning_year VARCHAR, capacity VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示容量高于平均水平的电影院的名称和位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR, name VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影院的所有位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT LOCATION FROM cinema"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有电影院的不同地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT LOCATION FROM cinema"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开张年份降序，显示所有的电影名称和开张年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  openning_year FROM cinema ORDER BY openning_year DESC"
      }
    ],
    "system": "CREATE TABLE cinema (openning_year VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大容量的电影院的名字和位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR, capacity VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示2011年或之后所有开业的电影院的平均、最低和最大容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(capacity) ,  min(capacity) ,  max(capacity) FROM cinema WHERE openning_year  >=  2011"
      }
    ],
    "system": "CREATE TABLE cinema (openning_year INTEGER, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个位置和对应电影院的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION ,  count(*) FROM cinema GROUP BY LOCATION"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年或以后电影院最多的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR, openning_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有至少有两个容量超过300的电影院的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些地方有2个或更多容量超过300的电影院？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有电影片名和导演。"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  directed_by FROM film"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, directed_by VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每部电影的片名和导演是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  directed_by FROM film"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, directed_by VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有导演。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT directed_by FROM film"
      }
    ],
    "system": "CREATE TABLE film (directed_by VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有导演是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT directed_by FROM film"
      }
    ],
    "system": "CREATE TABLE film (directed_by VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有导演和导演导演的电影数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT directed_by ,  count(*) FROM film GROUP BY directed_by"
      }
    ],
    "system": "CREATE TABLE film (directed_by VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每家影院每台DAT的显示次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id"
      }
    ],
    "system": "CREATE TABLE schedule (show_times_per_day INTEGER, cinema_id VARCHAR), CREATE TABLE cinema (cinema_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每部电影的片名和最高价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id"
      }
    ],
    "system": "CREATE TABLE schedule (price INTEGER, film_id VARCHAR), CREATE TABLE film (title VARCHAR, film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我每个电影的片名和最高价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id"
      }
    ],
    "system": "CREATE TABLE schedule (price INTEGER, film_id VARCHAR), CREATE TABLE film (title VARCHAR, film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按时间表显示电影院名称、电影片名、日期和价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name ,  T2.title ,  T1.date ,  T1.price FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id JOIN cinema AS T3 ON T1.cinema_id  =  T3.cinema_id"
      }
    ],
    "system": "CREATE TABLE schedule (cinema_id VARCHAR, price VARCHAR, date VARCHAR, film_id VARCHAR), CREATE TABLE film (title VARCHAR, film_id VARCHAR), CREATE TABLE cinema (cinema_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有时间表的电影的片名和导演是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  directed_by FROM film WHERE film_id NOT IN (SELECT film_id FROM schedule)"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, directed_by VARCHAR, film_id VARCHAR), CREATE TABLE schedule (title VARCHAR, directed_by VARCHAR, film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示总共演出时间最多的导演。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE schedule (show_times_per_day INTEGER, film_id VARCHAR), CREATE TABLE film (directed_by VARCHAR, film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有一个以上容量超过300的电影院的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在哪些地方有不止一个电影院的容量超过300？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE cinema (LOCATION VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少电影片名里有“故事”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM film WHERE title LIKE \"故事\""
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算标题包含“故事”的电影的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM film WHERE title LIKE \"故事\""
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "顾客持500金额优惠券是好还是不好？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500"
      }
    ],
    "system": "CREATE TABLE customers (coupon_id VARCHAR, good_or_bad_customer VARCHAR), CREATE TABLE discount_coupons (coupon_amount VARCHAR, coupon_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个客户预订了多少次？列出客户ID、名字和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T1.first_name ,  count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (first_name VARCHAR, customer_id VARCHAR), CREATE TABLE bookings (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "顾客支付的最大总金额是多少？列出客户ID和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Payments (customer_id VARCHAR, amount_paid INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支付次数最多的预订的ID和退款额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.booking_id ,  T1.amount_of_refund FROM Bookings AS T1 JOIN Payments AS T2 ON T1.booking_id  =  T2.booking_id GROUP BY T1.booking_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Bookings (booking_id VARCHAR, amount_of_refund VARCHAR), CREATE TABLE Payments (booking_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预订3次的产品ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3"
      }
    ],
    "system": "CREATE TABLE products_booked (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预定数量为102.76的产品的描述是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76"
      }
    ],
    "system": "CREATE TABLE products_booked (product_id VARCHAR, booked_amount VARCHAR), CREATE TABLE products_for_hire (product_id VARCHAR, product_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预订了名为“书集”的产品的预订的开始日期和结束日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  '书集'"
      }
    ],
    "system": "CREATE TABLE Products_for_hire (product_id VARCHAR, product_name VARCHAR), CREATE TABLE products_booked (product_id VARCHAR, booking_id VARCHAR), CREATE TABLE bookings (booking_start_date VARCHAR, booking_id VARCHAR, booking_end_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可用性等于1的产品名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1"
      }
    ],
    "system": "CREATE TABLE view_product_availability (product_id VARCHAR, available_yn VARCHAR), CREATE TABLE products_for_hire (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的产品类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT product_type_code) FROM products_for_hire"
      }
    ],
    "system": "CREATE TABLE products_for_hire (product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“好”顾客的名字、姓氏和性别是什么？按姓氏排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  gender_mf FROM customers WHERE good_or_bad_customer  =  '良好' ORDER BY last_name"
      }
    ],
    "system": "CREATE TABLE customers (good_or_bad_customer VARCHAR, last_name VARCHAR, gender_mf VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有付款的平均金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(amount_due) FROM payments"
      }
    ],
    "system": "CREATE TABLE payments (amount_due INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预订的产品的最大、最小和平均预订数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked"
      }
    ],
    "system": "CREATE TABLE products_booked (booked_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的支付类型有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT payment_type_code FROM payments"
      }
    ],
    "system": "CREATE TABLE payments (payment_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以“书”为子字符串的产品的日租金是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT daily_hire_cost FROM Products_for_hire WHERE product_name LIKE '书'"
      }
    ],
    "system": "CREATE TABLE Products_for_hire (daily_hire_cost VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少产品的预定数量从没超过200？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 )"
      }
    ],
    "system": "CREATE TABLE Products_for_hire (product_id VARCHAR, booked_amount INTEGER), CREATE TABLE products_booked (product_id VARCHAR, booked_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "好客户和坏客户拥有优惠券的优惠券金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  '良好' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  '差'"
      }
    ],
    "system": "CREATE TABLE Discount_Coupons (coupon_amount VARCHAR, coupon_id VARCHAR), CREATE TABLE customers (coupon_id VARCHAR, good_or_bad_customer VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支付金额高于300或付款类型是“现金”的付款日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_date FROM payments WHERE amount_paid  >  300 OR payment_type_code  =  '现金'"
      }
    ],
    "system": "CREATE TABLE payments (payment_date VARCHAR, amount_paid INTEGER, payment_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是“餐具”类型并且每日租金低于20产品的名称和描述？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  '餐具' AND daily_hire_cost  <  20"
      }
    ],
    "system": "CREATE TABLE products_for_hire (product_description VARCHAR, product_name VARCHAR, daily_hire_cost INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少手机？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM phone"
      }
    ],
    "system": "CREATE TABLE phone (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按价格升序列出手机名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM phone ORDER BY Price ASC"
      }
    ],
    "system": "CREATE TABLE phone (Price VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "手机的内存和运营商是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Memory_in_G ,  Carrier FROM phone"
      }
    ],
    "system": "CREATE TABLE phone (Memory_in_G VARCHAR, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出内存大于32的不同手机的运营商。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Carrier FROM phone WHERE Memory_in_G  >  32"
      }
    ],
    "system": "CREATE TABLE phone (Memory_in_G INTEGER, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示带有“中国联通”或“中国移动”的运营商的手机名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM phone WHERE Carrier  =  \"中国联通\" OR Carrier  =  \"中国移动\""
      }
    ],
    "system": "CREATE TABLE phone (Name VARCHAR, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电话最贵的运营商是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier FROM phone ORDER BY Price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE phone (Price VARCHAR, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的电话运营商和每家运营商的手机总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier ,  COUNT(*) FROM phone GROUP BY Carrier"
      }
    ],
    "system": "CREATE TABLE phone (Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示手机使用频率最高的运营商。"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier FROM phone GROUP BY Carrier ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE phone (Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有内存小于32的手机和内存大于64的手机的运营商。"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64"
      }
    ],
    "system": "CREATE TABLE phone (Memory_in_G INTEGER, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示手机的名称和市场区域。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID"
      }
    ],
    "system": "CREATE TABLE phone_market (Phone_ID VARCHAR, Market_ID VARCHAR), CREATE TABLE market (District VARCHAR, Market_ID VARCHAR), CREATE TABLE phone (Phone_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照市场排名的上升顺序显示手机的名称和所在的市场区域。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking"
      }
    ],
    "system": "CREATE TABLE phone_market (Phone_ID VARCHAR, Market_ID VARCHAR), CREATE TABLE market (District VARCHAR, Ranking VARCHAR, Market_ID VARCHAR), CREATE TABLE phone (Phone_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示市场上有超过50家商店销售的手机的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID WHERE T2.Num_of_shops  >  50"
      }
    ],
    "system": "CREATE TABLE phone_market (Phone_ID VARCHAR, Market_ID VARCHAR), CREATE TABLE market (Num_of_shops INTEGER, Market_ID VARCHAR), CREATE TABLE phone (Phone_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每种手机的名称和总库存量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name"
      }
    ],
    "system": "CREATE TABLE phone_market (Phone_ID VARCHAR, Num_of_stock INTEGER), CREATE TABLE phone (Phone_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示总库存量大于2000的手机的名称，按总库存量的降序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC"
      }
    ],
    "system": "CREATE TABLE phone_market (Phone_ID VARCHAR, Num_of_stock INTEGER), CREATE TABLE phone (Phone_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出任何市场上都不销售的手机的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)"
      }
    ],
    "system": "CREATE TABLE phone (Phone_ID VARCHAR, Name VARCHAR, Phone_id VARCHAR), CREATE TABLE phone_market (Phone_ID VARCHAR, Name VARCHAR, Phone_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少家天然气公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM company"
      }
    ],
    "system": "CREATE TABLE company (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "公司的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM company"
      }
    ],
    "system": "CREATE TABLE company (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照销售量递减顺序列出所有公司的名称和排名。"
      },
      {
        "from": "assistant",
        "value": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC"
      }
    ],
    "system": "CREATE TABLE company (Sales_billion VARCHAR, rank VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按销售额递减顺序订购的每家公司的名称和排名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT company ,  rank FROM company ORDER BY Sales_billion DESC"
      }
    ],
    "system": "CREATE TABLE company (Sales_billion VARCHAR, rank VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有总部不是来自美国的公司名称和主要行业。"
      },
      {
        "from": "assistant",
        "value": "SELECT company ,  main_industry FROM company WHERE headquarters != '美国'"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, headquarters VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总部没有设在美国的所有公司的公司和主要产业是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT company ,  main_industry FROM company WHERE headquarters != '美国'"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, headquarters VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按市场价值递减的顺序显示所有公司名称和总部。"
      },
      {
        "from": "assistant",
        "value": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC"
      }
    ],
    "system": "CREATE TABLE company (market_value VARCHAR, headquarters VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按市值下降排列的所有公司的名称和总部是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT company ,  headquarters FROM company ORDER BY market_value DESC"
      }
    ],
    "system": "CREATE TABLE company (market_value VARCHAR, headquarters VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有公司的最小、最大和平均市场价值。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company"
      }
    ],
    "system": "CREATE TABLE company (market_value INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个公司的最小、最大和平均市场价值是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company"
      }
    ],
    "system": "CREATE TABLE company (market_value INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有公司的主要行业。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT main_industry FROM company"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有公司的主要行业有是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT main_industry FROM company"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有总部及每个总部的公司数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters"
      }
    ],
    "system": "CREATE TABLE company (headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个总部的名称是什么且有多少公司集中在那里？"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters"
      }
    ],
    "system": "CREATE TABLE company (headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示各行业的所有主要行业和总市值。"
      },
      {
        "from": "assistant",
        "value": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, market_value INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个行业的主要行业和总市值是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT main_industry ,  sum(market_value) FROM company GROUP BY main_industry"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, market_value INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出总市值最高的主要行业及其公司数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, market_value INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有最高市场价值的行业的公司总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, market_value INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在银行业中至少有两家公司的公司总部。"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarters FROM company WHERE main_industry  =  '银行业' GROUP BY headquarters HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "银行业中至少有两家公司的公司总部是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarters FROM company WHERE main_industry  =  '银行业' GROUP BY headquarters HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开业年份排列，显示所有加油站的ID、位置和经理名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year"
      }
    ],
    "system": "CREATE TABLE gas_station (LOCATION VARCHAR, open_year VARCHAR, station_id VARCHAR, manager_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开业年份排列，加油站ID、地点和经理姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT station_id ,  LOCATION ,  manager_name FROM gas_station ORDER BY open_year"
      }
    ],
    "system": "CREATE TABLE gas_station (LOCATION VARCHAR, open_year VARCHAR, station_id VARCHAR, manager_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少加油站的开业年份在2000年到2005年之间？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005"
      }
    ],
    "system": "CREATE TABLE gas_station (open_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000至2005年间开业的加油站总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM gas_station WHERE open_year BETWEEN 2000 AND 2005"
      }
    ],
    "system": "CREATE TABLE gas_station (open_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按数目排序，显示所有地点和每个地点的加油站数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"
      }
    ],
    "system": "CREATE TABLE gas_station (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个地点有多少个加油站？，按数目排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)"
      }
    ],
    "system": "CREATE TABLE gas_station (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有有一家银行业公司和一家石油天然气公司的总部。"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarters FROM company WHERE main_industry  =  '银行业' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  '天然气'"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在银行和石油天然气公司行业都有公司的总部是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarters FROM company WHERE main_industry  =  '银行业' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  '天然气'"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在没有银行业的公司的总部。"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  '银行业'"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有银行业的公司的总部是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  '银行业'"
      }
    ],
    "system": "CREATE TABLE company (main_industry VARCHAR, headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示公司名称与加油站的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id"
      }
    ],
    "system": "CREATE TABLE station_company (company_id VARCHAR), CREATE TABLE company (company_id VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个公司ID，公司是什么以及每个公司运营多少个加油站？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.company ,  count(*) FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id"
      }
    ],
    "system": "CREATE TABLE station_company (company_id VARCHAR), CREATE TABLE company (company_id VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有加油站的公司名称和主要行业。"
      },
      {
        "from": "assistant",
        "value": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)"
      }
    ],
    "system": "CREATE TABLE company (company_id VARCHAR, main_industry VARCHAR, company VARCHAR), CREATE TABLE station_company (company_id VARCHAR, main_industry VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有加油站的公司的主要行业是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)"
      }
    ],
    "system": "CREATE TABLE company (company_id VARCHAR, main_industry VARCHAR, company VARCHAR), CREATE TABLE station_company (company_id VARCHAR, main_industry VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示埃克森美孚公司的加油站的经理的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  '石化'"
      }
    ],
    "system": "CREATE TABLE station_company (company_id VARCHAR, station_id VARCHAR), CREATE TABLE company (company_id VARCHAR, company VARCHAR), CREATE TABLE gas_station (station_id VARCHAR, manager_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "埃克森美孚公司经营的加油站经理的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.manager_name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.company  =  '石化'"
      }
    ],
    "system": "CREATE TABLE station_company (company_id VARCHAR, station_id VARCHAR), CREATE TABLE company (company_id VARCHAR, company VARCHAR), CREATE TABLE gas_station (station_id VARCHAR, manager_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有市场价值大于100的公司的加油站所在的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100"
      }
    ],
    "system": "CREATE TABLE station_company (company_id VARCHAR, station_id VARCHAR), CREATE TABLE company (company_id VARCHAR, market_value INTEGER), CREATE TABLE gas_station (station_id VARCHAR, location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有市场价值大于100的公司的加油站所在的位置在什么地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100"
      }
    ],
    "system": "CREATE TABLE station_company (company_id VARCHAR, station_id VARCHAR), CREATE TABLE company (company_id VARCHAR, market_value INTEGER), CREATE TABLE gas_station (station_id VARCHAR, location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在2000年之后开业最多的加油站的经理姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE gas_station (manager_name VARCHAR, open_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年后开张最多的加油站的经理叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE gas_station (manager_name VARCHAR, open_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开业年份排列所有加油站的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM gas_station ORDER BY open_year"
      }
    ],
    "system": "CREATE TABLE gas_station (LOCATION VARCHAR, open_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开业年份排列的所有加油站的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM gas_station ORDER BY open_year"
      }
    ],
    "system": "CREATE TABLE gas_station (LOCATION VARCHAR, open_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照这些公司的销售额和利润，找出它们在银行业公司中的排名、公司名称、市场价值。"
      },
      {
        "from": "assistant",
        "value": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  '银行业' ORDER BY sales_billion ,  profits_billion"
      }
    ],
    "system": "CREATE TABLE company (market_value VARCHAR, main_industry VARCHAR, rank VARCHAR, sales_billion VARCHAR, profits_billion VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照销售和利润的顺序，银行业的每家公司的排名、公司和市场价值是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  '银行业' ORDER BY sales_billion ,  profits_billion"
      }
    ],
    "system": "CREATE TABLE company (market_value VARCHAR, main_industry VARCHAR, rank VARCHAR, sales_billion VARCHAR, profits_billion VARCHAR, company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找资产额最高的3家公司拥有的加油站的位置和代表名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE station_company (company_id VARCHAR, station_id VARCHAR), CREATE TABLE company (company_id VARCHAR, Assets_billion VARCHAR), CREATE TABLE gas_station (Representative_Name VARCHAR, station_id VARCHAR, location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "资产规模最大的3家公司所拥有的加油站的地点和代表姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE station_company (company_id VARCHAR, station_id VARCHAR), CREATE TABLE company (company_id VARCHAR, Assets_billion VARCHAR), CREATE TABLE gas_station (Representative_Name VARCHAR, station_id VARCHAR, location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少个地区？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM region"
      }
    ],
    "system": "CREATE TABLE region (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算区域的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM region"
      }
    ],
    "system": "CREATE TABLE region (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示按标签排序的所有不同区域名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT region_name FROM region ORDER BY Label"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, Label VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的地区名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT region_name FROM region ORDER BY Label"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, Label VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少个政党？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT party_name) FROM party"
      }
    ],
    "system": "CREATE TABLE party (party_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计不同政党的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT party_name) FROM party"
      }
    ],
    "system": "CREATE TABLE party (party_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按离任的时间，显示部长们的上任和离任的时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, took_office VARCHAR, left_office VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按离任时间排列的部长们的上任和离任的时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, took_office VARCHAR, left_office VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示1961年后或1959年之前就职的部长。"
      },
      {
        "from": "assistant",
        "value": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, took_office INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1961年前或1959年前就职的部长是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, took_office INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有不属于进步党的部长。"
      },
      {
        "from": "assistant",
        "value": "SELECT minister FROM party WHERE party_name != '进步党'"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, party_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些部长不是进步党的一员？"
      },
      {
        "from": "assistant",
        "value": "SELECT minister FROM party WHERE party_name != '进步党'"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, party_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照上任时间的先后顺序显示所有部长和党派。"
      },
      {
        "from": "assistant",
        "value": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, took_office VARCHAR, party_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按上任时间顺序排列的各党派的部长们分别是谁？他们属于哪个党派？"
      },
      {
        "from": "assistant",
        "value": "SELECT minister ,  party_name FROM party ORDER BY took_office DESC"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, took_office VARCHAR, party_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最近离任的部长。"
      },
      {
        "from": "assistant",
        "value": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, left_office VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位部长最近离职？"
      },
      {
        "from": "assistant",
        "value": "SELECT minister FROM party ORDER BY left_office DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE party (minister VARCHAR, left_office VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出成员名称和他们的党派名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"
      }
    ],
    "system": "CREATE TABLE Member (member_name VARCHAR, party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "成员名字及其对应党派的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.member_name ,  T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id"
      }
    ],
    "system": "CREATE TABLE Member (member_name VARCHAR, party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有政党名称和党员人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
      }
    ],
    "system": "CREATE TABLE Member (party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个政党有多少成员？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.party_name ,  count(*) FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
      }
    ],
    "system": "CREATE TABLE Member (party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "党员人数最多的政党名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Member (party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最多的成员党的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Member (party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有的政党名称及其地区名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
      }
    ],
    "system": "CREATE TABLE party (region_id VARCHAR, party_name VARCHAR), CREATE TABLE region (region_name VARCHAR, region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有政党及其对应的地区的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.party_name ,  T2.region_name FROM party AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id"
      }
    ],
    "system": "CREATE TABLE party (region_id VARCHAR, party_name VARCHAR), CREATE TABLE region (region_name VARCHAR, region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有任何成员的政党的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"
      }
    ],
    "system": "CREATE TABLE party (party_name VARCHAR, party_id VARCHAR), CREATE TABLE Member (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有成员的政党名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT party_name FROM party WHERE party_id NOT IN (SELECT party_id FROM Member)"
      }
    ],
    "system": "CREATE TABLE party (party_name VARCHAR, party_id VARCHAR), CREATE TABLE Member (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示同时在id为3的政党和id为1的政党的成员名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"
      }
    ],
    "system": "CREATE TABLE member (member_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "同时在id为3的政党和在id为1的政党的成员名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT member_name FROM member WHERE party_id  =  3 INTERSECT SELECT member_name FROM member WHERE party_id  =  1"
      }
    ],
    "system": "CREATE TABLE member (member_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不在进步党中的成员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"进步党\""
      }
    ],
    "system": "CREATE TABLE Member (member_name VARCHAR, party_id VARCHAR), CREATE TABLE party (Party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不在进步党中的成员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.member_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id WHERE T2.Party_name != \"进步党\""
      }
    ],
    "system": "CREATE TABLE Member (member_name VARCHAR, party_id VARCHAR), CREATE TABLE party (Party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少党派的事件？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM party_events"
      }
    ],
    "system": "CREATE TABLE party_events (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计党派事件的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM party_events"
      }
    ],
    "system": "CREATE TABLE party_events (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个党派的名称和事件的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
      }
    ],
    "system": "CREATE TABLE party_events (party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个党派有多少事件？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id"
      }
    ],
    "system": "CREATE TABLE party_events (party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有不负责任何项目的成员名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"
      }
    ],
    "system": "CREATE TABLE member (member_name VARCHAR, member_id VARCHAR), CREATE TABLE party_events (member_in_charge_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不负责任何项目的成员的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id"
      }
    ],
    "system": "CREATE TABLE member (member_name VARCHAR, member_id VARCHAR), CREATE TABLE party_events (member_in_charge_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有2个项目的政党名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE party_events (party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有两个或多个项目的政党的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE party_events (party_id VARCHAR), CREATE TABLE party (party_name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "负责最多项目的成员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE member (member_name VARCHAR, member_id VARCHAR), CREATE TABLE party_events (member_in_charge_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回负责最多项目的成员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE member (member_name VARCHAR, member_id VARCHAR), CREATE TABLE party_events (member_in_charge_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有超过2条记录的事件名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE party_events (event_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有超过2条记录的事件名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT event_name FROM party_events GROUP BY event_name HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE party_events (event_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "英国地区发生了多少年会？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"英国\" AND t3.Event_Name  =  \"年会\""
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE party (region_id VARCHAR, party_id VARCHAR), CREATE TABLE party_events (Event_Name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算在英国地区举行的年度会议的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"英国\" AND t3.Event_Name  =  \"年会\""
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE party (region_id VARCHAR, party_id VARCHAR), CREATE TABLE party_events (Event_Name VARCHAR, party_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少飞行员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM pilot"
      }
    ],
    "system": "CREATE TABLE pilot (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按等级升序排列飞行员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Pilot_name FROM pilot ORDER BY Rank ASC"
      }
    ],
    "system": "CREATE TABLE pilot (Rank VARCHAR, Pilot_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "飞行员的职位和队伍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION ,  Team FROM pilot"
      }
    ],
    "system": "CREATE TABLE pilot (POSITION VARCHAR, Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出30岁以上飞行员的不同位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30"
      }
    ],
    "system": "CREATE TABLE pilot (POSITION VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“小强”或“小利”队飞行员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Pilot_name FROM pilot WHERE Team  =  \"小强\" OR Team  =  \"小利\""
      }
    ],
    "system": "CREATE TABLE pilot (Team VARCHAR, Pilot_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高级别飞行员的加入的年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Join_Year FROM pilot ORDER BY Rank ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE pilot (Join_Year VARCHAR, Rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同国籍的飞行员是什么？显示不同国籍和每个国籍的飞行员人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality ,  COUNT(*) FROM pilot GROUP BY Nationality"
      }
    ],
    "system": "CREATE TABLE pilot (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示飞行员最常见的国籍。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE pilot (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有在2005年以后加入和在2000年之前加入的飞行员位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005"
      }
    ],
    "system": "CREATE TABLE pilot (POSITION VARCHAR, Join_Year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示飞行员的名字和他们飞行的飞行器型号。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID"
      }
    ],
    "system": "CREATE TABLE pilot_record (Aircraft_ID VARCHAR, Pilot_ID VARCHAR), CREATE TABLE aircraft (Aircraft_ID VARCHAR, Model VARCHAR), CREATE TABLE pilot (Pilot_ID VARCHAR, Pilot_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照飞行员级别的升序显示飞行员的姓名和他们驾驶的飞机的系列号。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank"
      }
    ],
    "system": "CREATE TABLE pilot_record (Aircraft_ID VARCHAR, Pilot_ID VARCHAR), CREATE TABLE aircraft (Aircraft_ID VARCHAR, Fleet_Series VARCHAR), CREATE TABLE pilot (Pilot_ID VARCHAR, Rank VARCHAR, Pilot_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示由34岁以下飞行员驾驶的飞机系列号"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34"
      }
    ],
    "system": "CREATE TABLE pilot_record (Aircraft_ID VARCHAR, Pilot_ID VARCHAR), CREATE TABLE aircraft (Aircraft_ID VARCHAR, Fleet_Series VARCHAR), CREATE TABLE pilot (Pilot_ID VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示飞行员的名字和他们的记录数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name"
      }
    ],
    "system": "CREATE TABLE pilot_record (pilot_ID VARCHAR), CREATE TABLE pilot (Pilot_name VARCHAR, pilot_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有一个以上记录的飞行员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE pilot_record (pilot_ID VARCHAR), CREATE TABLE pilot (Pilot_name VARCHAR, pilot_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有任何记录的飞行员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Pilot_name FROM pilot WHERE Pilot_ID NOT IN (SELECT Pilot_ID FROM pilot_record)"
      }
    ],
    "system": "CREATE TABLE pilot (Pilot_ID VARCHAR, Pilot_name VARCHAR), CREATE TABLE pilot_record (Pilot_ID VARCHAR, Pilot_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有什么文档状态代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_status_code FROM Ref_Document_Status;"
      }
    ],
    "system": "CREATE TABLE Ref_Document_Status (document_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档状态代码“工作”的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_status_description FROM Ref_Document_Status WHERE document_status_code = \"工作\";"
      }
    ],
    "system": "CREATE TABLE Ref_Document_Status (document_status_description VARCHAR, document_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有什么文档类型代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Ref_Document_Types;"
      }
    ],
    "system": "CREATE TABLE Ref_Document_Types (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档类型“论文”的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_description FROM Ref_Document_Types WHERE document_type_code = \"论文\";"
      }
    ],
    "system": "CREATE TABLE Ref_Document_Types (document_type_description VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "运输代理名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT shipping_agent_name FROM Ref_Shipping_Agents;"
      }
    ],
    "system": "CREATE TABLE Ref_Shipping_Agents (shipping_agent_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“中国邮政”船舶代理的运输代理代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT shipping_agent_code FROM Ref_Shipping_Agents WHERE shipping_agent_name = \"中国邮政\";"
      }
    ],
    "system": "CREATE TABLE Ref_Shipping_Agents (shipping_agent_name VARCHAR, shipping_agent_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是所有角色代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM ROLES;"
      }
    ],
    "system": "CREATE TABLE ROLES (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "角色代码为“ED”的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_description FROM ROLES WHERE role_code = \"ED\";"
      }
    ],
    "system": "CREATE TABLE ROLES (role_code VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Employees;"
      }
    ],
    "system": "CREATE TABLE Employees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "雇员“可可”的角色是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = \"可可\";"
      }
    ],
    "system": "CREATE TABLE ROLES (role_code VARCHAR, role_description VARCHAR), CREATE TABLE Employees (employee_name VARCHAR, role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出文件的所有ID和收据日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id ,  receipt_date FROM Documents;"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, receipt_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个角色有多少员工？列出员工的角色描述、ID和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.role_description ,  T2.role_code ,  count(*) FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code GROUP BY T2.role_code;"
      }
    ],
    "system": "CREATE TABLE ROLES (role_code VARCHAR, role_description VARCHAR), CREATE TABLE Employees (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出具有不止一个雇员的角色，并列出角色描述和员工的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Roles.role_description , count(Employees.employee_id) FROM ROLES JOIN Employees ON Employees.role_code = Roles.role_code GROUP BY Employees.role_code HAVING count(Employees.employee_id)  >  1;"
      }
    ],
    "system": "CREATE TABLE ROLES (Id VARCHAR), CREATE TABLE Employees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID为1的文档的文档状态描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Ref_Document_Status.document_status_description FROM Ref_Document_Status JOIN Documents ON Documents.document_status_code = Ref_Document_Status.document_status_code WHERE Documents.document_id = 1;"
      }
    ],
    "system": "CREATE TABLE Ref_Document_Status (Id VARCHAR), CREATE TABLE Documents (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少文档的状态代码是完成状态？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Documents WHERE document_status_code = \"完结\";"
      }
    ],
    "system": "CREATE TABLE Documents (document_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出ID是2的文档的文档类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Documents WHERE document_id = 2;"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出具有完成状态代码和类型代码为论文的所有文档的文档ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id FROM Documents WHERE document_status_code = \"完结\" AND document_type_code = \"论文\";"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_type_code VARCHAR, document_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID为2的文件的运输代理的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Ref_Shipping_Agents.shipping_agent_name FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Documents.document_id = 2;"
      }
    ],
    "system": "CREATE TABLE Ref_Shipping_Agents (Id VARCHAR), CREATE TABLE Documents (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“中国邮政”公司运送了多少份文件？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"中国邮政\";"
      }
    ],
    "system": "CREATE TABLE Ref_Shipping_Agents (Id VARCHAR), CREATE TABLE Documents (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个运输代理运送了最多的文件？列出运输代理名称和文件数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Ref_Shipping_Agents (Id VARCHAR), CREATE TABLE Documents (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文件ID为3的收据日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT receipt_date FROM Documents WHERE document_id = 3;"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, receipt_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID为4的文件的邮寄地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Addresses.address_details FROM Addresses JOIN Documents_Mailed ON Documents_Mailed.mailed_to_address_id = Addresses.address_id WHERE document_id = 4;"
      }
    ],
    "system": "CREATE TABLE Addresses (document_id VARCHAR), CREATE TABLE Documents_Mailed (document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID 7的文件的邮寄日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT mailing_date FROM Documents_Mailed WHERE document_id = 7;"
      }
    ],
    "system": "CREATE TABLE Documents_Mailed (document_id VARCHAR, mailing_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出具有完成状态和“论文”类型且不是由名为“中国邮政”公司代理运输的文件的文件ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id FROM Documents WHERE document_status_code  =  \"完结\" AND document_type_code = \"论文\" EXCEPT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"中国邮政\";"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_type_code VARCHAR, document_status_code VARCHAR), CREATE TABLE Ref_Shipping_Agents (document_id VARCHAR, document_type_code VARCHAR, document_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出不是由名为“中国邮政”运输代理且具有完成状态和“论文”类型运输的文件的文件ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id FROM Documents WHERE document_status_code  =  \"完结\" AND document_type_code = \"论文\" INTERSECT SELECT document_id FROM Documents JOIN Ref_Shipping_Agents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"中国邮政\";"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_type_code VARCHAR, document_status_code VARCHAR), CREATE TABLE Ref_Shipping_Agents (document_id VARCHAR, document_type_code VARCHAR, document_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档ID为7的草稿信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT draft_details FROM Document_Drafts WHERE document_id = 7;"
      }
    ],
    "system": "CREATE TABLE Document_Drafts (document_id VARCHAR, draft_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID为2的文件有多少份草稿？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Draft_Copies WHERE document_id = 2;"
      }
    ],
    "system": "CREATE TABLE Draft_Copies (document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪份文件的草稿最多？列出其文件ID和草稿的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Draft_Copies (document_id VARCHAR, copy_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些文件有超过1份草稿？列出文件ID和草稿的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id , count(*) FROM Draft_Copies GROUP BY document_id HAVING count(*)  >  1;"
      }
    ],
    "system": "CREATE TABLE Draft_Copies (document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出出现在文档id为1的流通文件上的员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;"
      }
    ],
    "system": "CREATE TABLE Employees (Id VARCHAR), CREATE TABLE Circulation_History (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有出现在任何流通文件上的员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_name FROM Employees EXCEPT SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id"
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR), CREATE TABLE Circulation_History (employee_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个雇员在流通文件中出现的最多。列出员工姓名、文件草稿和复印件的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Employees (Id VARCHAR), CREATE TABLE Circulation_History (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个文档，列出在该文档的流通史中出现的雇员人数、文档ID和员工数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id ,  count(DISTINCT employee_id) FROM Circulation_History GROUP BY document_id;"
      }
    ],
    "system": "CREATE TABLE Circulation_History (document_id VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开始日期列出所有的部门名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT dname FROM department ORDER BY mgr_start_date"
      }
    ],
    "system": "CREATE TABLE department (dname VARCHAR, mgr_start_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有与某个雇员有配偶关系的家属姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Dependent_name FROM dependent WHERE relationship  =  '配偶'"
      }
    ],
    "system": "CREATE TABLE dependent (relationship VARCHAR, Dependent_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少女性家属？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM dependent WHERE sex  =  '女'"
      }
    ],
    "system": "CREATE TABLE dependent (sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找位于休斯敦的部门名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  '武汉'"
      }
    ],
    "system": "CREATE TABLE department (dnumber VARCHAR, dname VARCHAR), CREATE TABLE dept_locations (dlocation VARCHAR, dnumber VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回工资超过3万的员工的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM employee WHERE salary  >  30000"
      }
    ],
    "system": "CREATE TABLE employee (fname VARCHAR, salary INTEGER, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每种性别工资低于50000的员工的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  sex FROM employee WHERE salary  <  50000 GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE employee (sex VARCHAR, salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按出生日期的上升顺序列出所有员工的名字、姓氏和地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname ,  address FROM employee ORDER BY Bdate"
      }
    ],
    "system": "CREATE TABLE employee (fname VARCHAR, address VARCHAR, lname VARCHAR, Bdate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "类型代码为“结婚”的服务的时间信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  '结婚'"
      }
    ],
    "system": "CREATE TABLE EVENTS (Service_ID VARCHAR, event_details VARCHAR), CREATE TABLE Services (Service_ID VARCHAR, Service_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多于一个参与者的活动的ID和信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE EVENTS (event_id VARCHAR, event_details VARCHAR, Event_ID VARCHAR), CREATE TABLE Participants_in_Events (Event_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个参与者参加了多少活动？列出参与者的ID、类型和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Participant_ID ,  T1.Participant_Type_Code ,  count(*) FROM Participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID GROUP BY T1.Participant_ID"
      }
    ],
    "system": "CREATE TABLE Participants (Participant_ID VARCHAR, Participant_Type_Code VARCHAR), CREATE TABLE Participants_in_Events (Participant_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有参与者的ID、类型代码和详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants"
      }
    ],
    "system": "CREATE TABLE Participants (Participant_ID VARCHAR, Participant_Type_Code VARCHAR, Participant_Details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少参与者属于“组织者”类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM participants WHERE participant_type_code  =  '组织者'"
      }
    ],
    "system": "CREATE TABLE participants (participant_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出服务的类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT service_type_code FROM services ORDER BY service_type_code"
      }
    ],
    "system": "CREATE TABLE services (service_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出服务ID和活动的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT service_id ,  event_details FROM EVENTS"
      }
    ],
    "system": "CREATE TABLE EVENTS (service_id VARCHAR, event_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少有参与者的活动的详细信息中包含子串'博士'。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '博士'"
      }
    ],
    "system": "CREATE TABLE participants (Participant_ID VARCHAR, participant_details VARCHAR), CREATE TABLE Participants_in_Events (Participant_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参与者最多的类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE participants (participant_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种服务ID和类型的参与者最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.service_id ,  T4.Service_Type_Code FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID JOIN EVENTS AS T3 ON T2.Event_ID   =  T3.Event_ID JOIN services AS T4 ON T3.service_id  =  T4.service_id GROUP BY T3.service_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE participants (Participant_ID VARCHAR), CREATE TABLE Participants_in_Events (Participant_ID VARCHAR, Event_ID VARCHAR), CREATE TABLE EVENTS (service_id VARCHAR, Event_ID VARCHAR), CREATE TABLE services (service_id VARCHAR, Service_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参与者最多的活动ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Event_ID FROM Participants_in_Events GROUP BY Event_ID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Participants_in_Events (Event_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参与者的详细信息不包含“李强”的活动的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  '李强'"
      }
    ],
    "system": "CREATE TABLE EVENTS (event_id VARCHAR, Participant_Details VARCHAR), CREATE TABLE Participants_in_Events (Participant_ID VARCHAR, event_id VARCHAR), CREATE TABLE Participants (Participant_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些服务类型既有成功活动又有失败的事件细节？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  '成功' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  '失败'"
      }
    ],
    "system": "CREATE TABLE services (service_id VARCHAR, service_type_code VARCHAR), CREATE TABLE EVENTS (service_id VARCHAR, event_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少事件没有参与者？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM EVENTS WHERE event_id NOT IN (SELECT event_id FROM Participants_in_Events)"
      }
    ],
    "system": "CREATE TABLE EVENTS (event_id VARCHAR), CREATE TABLE Participants_in_Events (event_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些不同的参与者参加了活动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT participant_id) FROM participants_in_Events"
      }
    ],
    "system": "CREATE TABLE participants_in_Events (participant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近举行的比赛叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM races ORDER BY date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近举办的比赛的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM races ORDER BY date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近一场比赛的名称和日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近发生的比赛的名称和日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出2017年举办的所有比赛的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM races WHERE YEAR = 2017"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2017年举办的所有比赛的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM races WHERE YEAR = 2017"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出2014到2017年间所有比赛的不同名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017"
      }
    ],
    "system": "CREATE TABLE races (YEAR INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2014年到2017年间所有比赛的不同名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM races WHERE YEAR BETWEEN 2014 AND 2017"
      }
    ],
    "system": "CREATE TABLE races (YEAR INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出单圈时间小于93000毫秒的所有不同的司机的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR), CREATE TABLE laptimes (driverid VARCHAR, milliseconds INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有单圈时间小于93000毫秒的不同司机的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds < 93000"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR), CREATE TABLE laptimes (driverid VARCHAR, milliseconds INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有单圈时间高于100000毫秒的司机的ID和国籍？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, nationality VARCHAR), CREATE TABLE laptimes (driverid VARCHAR, milliseconds INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "单圈时间在100000毫秒以上的所有不同驾驶员的ID和国籍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.driverid ,  T1.nationality FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE T2.milliseconds >  100000"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, nationality VARCHAR), CREATE TABLE laptimes (driverid VARCHAR, milliseconds INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小单圈时间的司机的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR), CREATE TABLE laptimes (driverid VARCHAR, milliseconds VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最短单圈时间的司机的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR), CREATE TABLE laptimes (driverid VARCHAR, milliseconds VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最长单圈时间记录的司机的ID和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR), CREATE TABLE laptimes (driverid VARCHAR, milliseconds VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有单圈时间最长记录的司机的ID和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR), CREATE TABLE laptimes (driverid VARCHAR, milliseconds VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "单圈时间有两次排名第一的司机的ID、名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR), CREATE TABLE laptimes (driverid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有两次到达单圈时间排名第一的司机的ID、名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR), CREATE TABLE laptimes (driverid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少司机参加了2009澳大利亚大奖赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"澳大利亚大奖赛\" AND YEAR = 2009"
      }
    ],
    "system": "CREATE TABLE results (raceid VARCHAR), CREATE TABLE races (name VARCHAR, raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2009年举行的澳大利亚大奖赛中有多少车手？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid WHERE T2.name = \"澳大利亚大奖赛\" AND YEAR = 2009"
      }
    ],
    "system": "CREATE TABLE results (raceid VARCHAR), CREATE TABLE races (name VARCHAR, raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少司机没有参加2009年的比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )"
      }
    ],
    "system": "CREATE TABLE results (driverId VARCHAR, YEAR VARCHAR, raceId VARCHAR), CREATE TABLE races (driverId VARCHAR, YEAR VARCHAR, raceId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少司机在2009年没有参加比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT driverId) FROM results WHERE raceId NOT IN( SELECT raceId FROM races WHERE YEAR != 2009 )"
      }
    ],
    "system": "CREATE TABLE results (driverId VARCHAR, YEAR VARCHAR, raceId VARCHAR), CREATE TABLE races (driverId VARCHAR, YEAR VARCHAR, raceId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出名字是刘易斯的司机参赛的比赛名称和比赛的年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"姚\""
      }
    ],
    "system": "CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (year VARCHAR, name VARCHAR, raceid VARCHAR), CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏是刘易斯的司机参加的所有比赛的名称和年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.year FROM results AS T1 JOIN races AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T1.driverid = T3.driverid WHERE T3.forename = \"姚\""
      }
    ],
    "system": "CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (year VARCHAR, name VARCHAR, raceid VARCHAR), CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找国籍为德国的司机的名字和姓氏？"
      },
      {
        "from": "assistant",
        "value": "SELECT forename ,  surname FROM drivers WHERE nationality = \"德国\""
      }
    ],
    "system": "CREATE TABLE drivers (nationality VARCHAR, surname VARCHAR, forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自德国的司机的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT forename ,  surname FROM drivers WHERE nationality = \"德国\""
      }
    ],
    "system": "CREATE TABLE drivers (nationality VARCHAR, surname VARCHAR, forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请问参加过澳大利亚大奖赛和中国大奖赛的车手的ID和名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"澳大利亚大奖赛\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"中国大奖赛\""
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, raceid VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加澳大利亚大奖赛和中国大奖赛的所有车手的ID和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"澳大利亚大奖赛\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"中国大奖赛\""
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, raceid VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加过澳大利亚大奖赛但没有参加中国大奖赛的司机的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"澳大利亚大奖赛\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"中国大奖赛\""
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, raceid VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加澳大利亚大奖赛但没参加中国大奖赛的所有车手的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"澳大利亚大奖赛\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"中国大奖赛\""
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, raceid VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有位置是1并获胜的不同司机的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR), CREATE TABLE driverstandings (driverid VARCHAR, wins VARCHAR, position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些位置是1并获胜的车手的不同名字有什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR), CREATE TABLE driverstandings (driverid VARCHAR, wins VARCHAR, position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有在1号位置获胜并得分超过20分以上的不同车手的姓氏？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR), CREATE TABLE driverstandings (driverid VARCHAR, wins VARCHAR, points INTEGER, position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1号位置获胜并获得20分以上的车手的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR), CREATE TABLE driverstandings (driverid VARCHAR, wins VARCHAR, points INTEGER, position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同国家的制造商数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality"
      }
    ],
    "system": "CREATE TABLE constructors (nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个国家，有多少不同的制造商？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality"
      }
    ],
    "system": "CREATE TABLE constructors (nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个制造商ID的竞赛数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid"
      }
    ],
    "system": "CREATE TABLE constructorStandings (constructorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "针对不同制造商ID的不同比赛数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  constructorid FROM constructorStandings GROUP BY constructorid"
      }
    ],
    "system": "CREATE TABLE constructorStandings (constructorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2017年之后在西班牙举行的赛事和赛道名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"西班牙\" AND T1.year > 2017"
      }
    ],
    "system": "CREATE TABLE races (year INTEGER, name VARCHAR, circuitid VARCHAR), CREATE TABLE circuits (country VARCHAR, circuitid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2017年以后在西班牙举行的比赛的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"西班牙\" AND T1.year > 2017"
      }
    ],
    "system": "CREATE TABLE races (year INTEGER, name VARCHAR, circuitid VARCHAR), CREATE TABLE circuits (country VARCHAR, circuitid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年后在西班牙举行的赛事的不同的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"西班牙\" AND T1.year > 2000"
      }
    ],
    "system": "CREATE TABLE races (year INTEGER, name VARCHAR, circuitid VARCHAR), CREATE TABLE circuits (country VARCHAR, circuitid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "西班牙在2000年以后举行的所有比赛的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"西班牙\" AND T1.year > 2000"
      }
    ],
    "system": "CREATE TABLE races (year INTEGER, name VARCHAR, circuitid VARCHAR), CREATE TABLE circuits (country VARCHAR, circuitid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出ID为841的比赛中所有比一些车手停站时间更少的车手的ID和停站次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)"
      }
    ],
    "system": "CREATE TABLE pitstops (driverid VARCHAR, STOP VARCHAR, raceid VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ID为841的比赛中，每个车手比一些车手停站时间更短的车手的ID和停站次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  <  (SELECT max(duration) FROM pitstops WHERE raceid  =  841)"
      }
    ],
    "system": "CREATE TABLE pitstops (driverid VARCHAR, STOP VARCHAR, raceid VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ID841比赛中，找出所有车手停站时间比一些车手的停站时间长的不同的车手ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)"
      }
    ],
    "system": "CREATE TABLE pitstops (driverid VARCHAR, STOP VARCHAR, raceid VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ID为841的比赛中，所有停车时间比某些车手更长的驾驶员的id和停车持续时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)"
      }
    ],
    "system": "CREATE TABLE pitstops (driverid VARCHAR, STOP VARCHAR, raceid VARCHAR, duration INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有不同车手的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC"
      }
    ],
    "system": "CREATE TABLE drivers (forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的不同驾驶员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT forename FROM drivers ORDER BY forename ASC"
      }
    ],
    "system": "CREATE TABLE drivers (forename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字典反序顺序列出所有不同比赛的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM races ORDER BY name DESC"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母反序顺序排列的所有比赛的不同名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM races ORDER BY name DESC"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2009到2011年间的比赛名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011"
      }
    ],
    "system": "CREATE TABLE races (YEAR INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2009到2011年间所有比赛的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM races WHERE YEAR BETWEEN 2009 AND 2011"
      }
    ],
    "system": "CREATE TABLE races (YEAR INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“12:00:00”之后或“09:00:00”之前的比赛名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\""
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, TIME INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "12:00:00之后或09:00:00之前发生的所有比赛的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\""
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, TIME INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过8次停站或参加超过5次比赛的司机的名字、姓氏和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR), CREATE TABLE pitstops (driverid VARCHAR), CREATE TABLE results (driverid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "超过8次停站或参加5场以上比赛的车手的名字、姓氏和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR, forename VARCHAR), CREATE TABLE pitstops (driverid VARCHAR), CREATE TABLE results (driverid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有11次停站并参加过5次以上的比赛车手的姓氏和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR), CREATE TABLE pitstops (driverid VARCHAR), CREATE TABLE results (driverid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加过5次以上赛事且有11次停站的所有车手的姓氏和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR), CREATE TABLE pitstops (driverid VARCHAR), CREATE TABLE results (driverid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年后参加最多比赛的车手的ID和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (year INTEGER, raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年后参加比赛数量最多的车手的ID和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (year INTEGER, raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "属于英国或马来西亚的环路名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM circuits WHERE country = \"英国\" OR country = \"马来西亚\""
      }
    ],
    "system": "CREATE TABLE circuits (country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "英国或马来西亚的所有环路的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM circuits WHERE country = \"英国\" OR country = \"马来西亚\""
      }
    ],
    "system": "CREATE TABLE circuits (country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找属于法国或比利时的环路的ID和位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"法国\" OR country = \"比利时\""
      }
    ],
    "system": "CREATE TABLE circuits (LOCATION VARCHAR, country VARCHAR, circuitid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "法国或比利时的所有环路的ID和位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"法国\" OR country = \"比利时\""
      }
    ],
    "system": "CREATE TABLE circuits (LOCATION VARCHAR, country VARCHAR, circuitid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到曾经获得超过5分的日本制造商的名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"日本\" AND T2.points > 5"
      }
    ],
    "system": "CREATE TABLE constructors (constructorid VARCHAR, name VARCHAR, nationality VARCHAR), CREATE TABLE constructorstandings (constructorid VARCHAR, points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "获得5分以上的所有日本制造商的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM constructors AS T1 JOIN constructorstandings AS T2 ON T1.constructorid = T2.constructorid WHERE T1.nationality = \"日本\" AND T2.points > 5"
      }
    ],
    "system": "CREATE TABLE constructors (constructorid VARCHAR, name VARCHAR, nationality VARCHAR), CREATE TABLE constructorstandings (constructorid VARCHAR, points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2008年“摩纳哥大奖赛”比赛平均最快圈速是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"摩纳哥大奖赛\""
      }
    ],
    "system": "CREATE TABLE races (year VARCHAR, name VARCHAR, raceid VARCHAR), CREATE TABLE results (raceid VARCHAR, fastestlapspeed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2008年“摩纳哥大奖赛”平均最快圈速是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"摩纳哥大奖赛\""
      }
    ],
    "system": "CREATE TABLE races (year VARCHAR, name VARCHAR, raceid VARCHAR), CREATE TABLE results (raceid VARCHAR, fastestlapspeed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2008年“摩纳哥大奖赛”比赛最快圈速是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"摩纳哥大奖赛\""
      }
    ],
    "system": "CREATE TABLE races (year VARCHAR, name VARCHAR, raceid VARCHAR), CREATE TABLE results (raceid VARCHAR, fastestlapspeed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2008年“摩纳哥大奖赛”最快的圈速是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"摩纳哥大奖赛\""
      }
    ],
    "system": "CREATE TABLE races (year VARCHAR, name VARCHAR, raceid VARCHAR), CREATE TABLE results (raceid VARCHAR, fastestlapspeed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年份排序，在2004年以后按比赛名称分组的比赛最快圈速是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, year INTEGER, raceid VARCHAR), CREATE TABLE results (raceid VARCHAR, fastestlapspeed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2004年后的每个比赛中比赛的最快圈速是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, year INTEGER, raceid VARCHAR), CREATE TABLE results (raceid VARCHAR, fastestlapspeed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年份排序，在2004年按比赛名称分组举办的比赛平均最快圈速是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, year INTEGER, raceid VARCHAR), CREATE TABLE results (raceid VARCHAR, fastestlapspeed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年份排序，2004年后举行的每场比赛的平均最快圈速是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year"
      }
    ],
    "system": "CREATE TABLE races (name VARCHAR, year INTEGER, raceid VARCHAR), CREATE TABLE results (raceid VARCHAR, fastestlapspeed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有至少参加过两次比赛的司机的id、姓氏和比赛次数？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加过至少2场比赛的所有驾驶员的ID、姓氏和比赛次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, forename VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请查找参加过最多30场比赛的所有驾驶员的ID和比赛次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个参加最多30场比赛的驾驶员来时，他们的id是什么且每个人参加了多少场比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到参加比赛最多的司机的ID和姓氏？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加最多比赛的所有司机的ID和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE drivers (driverid VARCHAR, surname VARCHAR), CREATE TABLE results (driverid VARCHAR, raceid VARCHAR), CREATE TABLE races (raceid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少技术人员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM technician"
      }
    ],
    "system": "CREATE TABLE technician (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "技术人员的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM technician"
      }
    ],
    "system": "CREATE TABLE technician (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄顺序列出技术人员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM technician ORDER BY Age ASC"
      }
    ],
    "system": "CREATE TABLE technician (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄顺序排列的技术人员姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM technician ORDER BY Age ASC"
      }
    ],
    "system": "CREATE TABLE technician (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "技术人员的团队名和起始年是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team ,  Starting_Year FROM technician"
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR, Starting_Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个技术员的团队名称和起始年是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team ,  Starting_Year FROM technician"
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR, Starting_Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出不属于“上海上港”的技术人员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM technician WHERE Team != \"上海上港\""
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上海上港”团队的技术员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM technician WHERE Team != \"上海上港\""
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示36岁或37岁的技术人员的姓名"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37"
      }
    ],
    "system": "CREATE TABLE technician (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "36岁或37岁的技术人员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM technician WHERE Age  =  36 OR Age  =  37"
      }
    ],
    "system": "CREATE TABLE technician (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最老的技术人员的起始年是哪一年？"
      },
      {
        "from": "assistant",
        "value": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE technician (Age VARCHAR, Starting_Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最老的技术人员的起始年是哪一年？"
      },
      {
        "from": "assistant",
        "value": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE technician (Age VARCHAR, Starting_Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示技术人员的不同团队和每个团队技术人员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team"
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个团队有多少技术员？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team"
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示技术人员最多的队伍。"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "技术人员最多的团队是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM technician GROUP BY Team ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两名技术人员的团队。"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有2名技术人员的团队是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示技术人员的名字和他们指定的维修机器系列的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID"
      }
    ],
    "system": "CREATE TABLE repair_assignment (machine_id VARCHAR, technician_ID VARCHAR), CREATE TABLE machine (machine_id VARCHAR, Machine_series VARCHAR), CREATE TABLE technician (technician_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "技术人员的名字和他们需要修理机器系列的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID"
      }
    ],
    "system": "CREATE TABLE repair_assignment (machine_id VARCHAR, technician_ID VARCHAR), CREATE TABLE machine (machine_id VARCHAR, Machine_series VARCHAR), CREATE TABLE technician (technician_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照所分配机器质量等级的上升顺序显示技术人员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank"
      }
    ],
    "system": "CREATE TABLE repair_assignment (machine_id VARCHAR, technician_ID VARCHAR), CREATE TABLE machine (machine_id VARCHAR, quality_rank VARCHAR), CREATE TABLE technician (technician_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按他们分配的机器质量等级升序的技术人员的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank"
      }
    ],
    "system": "CREATE TABLE repair_assignment (machine_id VARCHAR, technician_ID VARCHAR), CREATE TABLE machine (machine_id VARCHAR, quality_rank VARCHAR), CREATE TABLE technician (technician_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示分配需要维修的价值点超过70的机器的技术人员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70"
      }
    ],
    "system": "CREATE TABLE repair_assignment (machine_id VARCHAR, technician_ID VARCHAR), CREATE TABLE machine (machine_id VARCHAR, value_points INTEGER), CREATE TABLE technician (technician_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "分配需要修理的价值点大于70的机器的技术人员的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID WHERE T2.value_points  >  70"
      }
    ],
    "system": "CREATE TABLE repair_assignment (machine_id VARCHAR, technician_ID VARCHAR), CREATE TABLE machine (machine_id VARCHAR, value_points INTEGER), CREATE TABLE technician (technician_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示技术人员的姓名和他们被分配修理的机器的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name"
      }
    ],
    "system": "CREATE TABLE repair_assignment (technician_ID VARCHAR), CREATE TABLE technician (technician_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "技术人员的姓名是什么？他们被指派修理多少台机器？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name"
      }
    ],
    "system": "CREATE TABLE repair_assignment (technician_ID VARCHAR), CREATE TABLE technician (technician_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出未被指派修理机器的技术人员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)"
      }
    ],
    "system": "CREATE TABLE technician (Name VARCHAR, technician_id VARCHAR), CREATE TABLE repair_assignment (Name VARCHAR, technician_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有被分配修理机器的技术人员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)"
      }
    ],
    "system": "CREATE TABLE technician (Name VARCHAR, technician_id VARCHAR), CREATE TABLE repair_assignment (Name VARCHAR, technician_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“山东鲁能”和“天津泰达”团队所共有的技术人员的起始年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT Starting_Year FROM technician WHERE Team  =  \"山东鲁能\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"天津泰达\""
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR, Starting_Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东鲁能”或“天津泰达”团队的共有技术人员的起始年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Starting_Year FROM technician WHERE Team  =  \"山东鲁能\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"天津泰达\""
      }
    ],
    "system": "CREATE TABLE technician (Team VARCHAR, Starting_Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少企业家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM entrepreneur"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计企业家人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM entrepreneur"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照要求的资金顺序列出企业家的公司。"
      },
      {
        "from": "assistant",
        "value": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR, Money_Requested VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按金额减少的顺序，企业家的公司是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Company FROM entrepreneur ORDER BY Money_Requested DESC"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR, Money_Requested VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出企业家的公司和投资者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Company ,  Investor FROM entrepreneur"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR, Investor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与每个企业家相对应的公司和投资者是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Company ,  Investor FROM entrepreneur"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR, Investor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有企业家的平均资金是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Money_Requested) FROM entrepreneur"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Money_Requested INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有企业家的平均资金。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Money_Requested) FROM entrepreneur"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Money_Requested INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按体重的上升顺序排列的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM People ORDER BY Weight ASC"
      }
    ],
    "system": "CREATE TABLE People (Name VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按重量排序上升返回的人的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM People ORDER BY Weight ASC"
      }
    ],
    "system": "CREATE TABLE People (Name VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "企业家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回企业家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些投资者不是““马云””的企业家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"马云\""
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR, Investor VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回没有投资者“马云”的企业家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"马云\""
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR, Investor VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最矮的人的体重是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (Height VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最矮的人的体重。"
      },
      {
        "from": "assistant",
        "value": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (Height VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最重的企业家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最重的企业家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "身高超过1.85的企业家的申请资金总额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85"
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR, Money_Requested INTEGER), CREATE TABLE people (People_ID VARCHAR, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出高于1.85的企业家的总申请金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.Money_Requested) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Height  >  1.85"
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR, Money_Requested INTEGER), CREATE TABLE people (People_ID VARCHAR, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“马化腾”或“李彦宏”的企业家的出生日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"马化腾\" OR T1.Investor  =  \"李彦宏\""
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR, Investor VARCHAR), CREATE TABLE people (Date_of_Birth VARCHAR, People_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回名字是“马化腾”或“李彦宏”的企业家的出生日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"马化腾\" OR T1.Investor  =  \"李彦宏\""
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR, Investor VARCHAR), CREATE TABLE people (Date_of_Birth VARCHAR, People_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按金额降序排列，企业家的重量是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC"
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR, Money_Requested VARCHAR), CREATE TABLE people (People_ID VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按要求的申请金额降序排列返回企业家的重量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC"
      }
    ],
    "system": "CREATE TABLE entrepreneur (People_ID VARCHAR, Money_Requested VARCHAR), CREATE TABLE people (People_ID VARCHAR, Weight VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "企业家的投资者有哪些？每个投资者投资的企业家人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Investor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个投资者对应着多少企业家？"
      },
      {
        "from": "assistant",
        "value": "SELECT Investor ,  COUNT(*) FROM entrepreneur GROUP BY Investor"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Investor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "投资最多企业家的投资者是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Investor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回那些投资最多企业家的投资者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Investor FROM entrepreneur GROUP BY Investor ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Investor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "投资至少两位企业家的投资者是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Investor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回投资两个或更多企业家的投资者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Investor FROM entrepreneur GROUP BY Investor HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Investor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按申请资金的降序列出企业家及其公司的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR, Money_Requested VARCHAR, People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按申请金额降序排列的企业家及其相应的投资者的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR, Money_Requested VARCHAR, People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出不是企业家的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE entrepreneur (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些不是企业家的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE entrepreneur (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示申请超过14万的企业家和申请不到12万的企业家所共有的投资者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Investor VARCHAR, Money_Requested INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对申请超过14万的企业家和申请不到12万的企业家都进行投资的投资者是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Investor VARCHAR, Money_Requested INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少家不同的公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Company) FROM entrepreneur"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计不同公司的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Company) FROM entrepreneur"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示身高最高的企业家的公司。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR, People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪家公司是由最高身高的企业家创办的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE entrepreneur (Company VARCHAR, People_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少犯罪者在那里？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM perpetrator"
      }
    ],
    "system": "CREATE TABLE perpetrator (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按死亡人数的降序列出犯罪者的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date FROM perpetrator ORDER BY Killed DESC"
      }
    ],
    "system": "CREATE TABLE perpetrator (Date VARCHAR, Killed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以受伤人数的升序列出犯罪者伤害的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Injured FROM perpetrator ORDER BY Injured ASC"
      }
    ],
    "system": "CREATE TABLE perpetrator (Injured VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有犯罪者伤害的平均人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Injured) FROM perpetrator"
      }
    ],
    "system": "CREATE TABLE perpetrator (Injured INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有着最大死亡人数的犯罪者地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE perpetrator (LOCATION VARCHAR, Killed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按身高的上升顺序列出的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM People ORDER BY Height ASC"
      }
    ],
    "system": "CREATE TABLE People (Height VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "犯罪者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE perpetrator (People_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些国家不是“中国”的犯罪者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != \"中国\""
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE perpetrator (People_ID VARCHAR, Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "体重最大的犯罪者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Name VARCHAR, Weight VARCHAR), CREATE TABLE perpetrator (People_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "身高超过1.84的犯罪者的总杀害的人数是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  1.84"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Height INTEGER), CREATE TABLE perpetrator (People_ID VARCHAR, Killed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "国家是“中国”或“日本”的犯罪者姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  \"中国\" OR T2.Country  =  \"日本\""
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE perpetrator (People_ID VARCHAR, Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照他们受伤人数的下降顺序，犯罪者的身高是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Injured DESC"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Height VARCHAR), CREATE TABLE perpetrator (People_ID VARCHAR, Injured VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "犯罪者的国家是什么？显示每个国家和相应的犯罪者数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country"
      }
    ],
    "system": "CREATE TABLE perpetrator (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个国家的犯罪分子最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE perpetrator (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家至少有两个犯罪者？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE perpetrator (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年份降序列出犯罪者的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Year DESC"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE perpetrator (People_ID VARCHAR, Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出那些不是犯罪者的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE perpetrator (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示那些既有50多人受伤的犯罪者，又有少于20人受伤的犯罪者所在的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM perpetrator WHERE Injured  >  50 INTERSECT SELECT Country FROM perpetrator WHERE Injured  <  20"
      }
    ],
    "system": "CREATE TABLE perpetrator (Country VARCHAR, Injured INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "犯罪者有几个不同的位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT LOCATION) FROM perpetrator"
      }
    ],
    "system": "CREATE TABLE perpetrator (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示身高最高犯罪者的犯罪日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Height VARCHAR), CREATE TABLE perpetrator (People_ID VARCHAR, Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近的犯罪发生在哪一年？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(YEAR) FROM perpetrator;"
      }
    ],
    "system": "CREATE TABLE perpetrator (YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "报告“上海”市所有校区的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE county  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上海”市有哪些校区？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE county  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“武汉”所有校区的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE LOCATION  =  \"武汉\""
      }
    ],
    "system": "CREATE TABLE campuses (LOCATION VARCHAR, campus VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“武汉”有哪些校区？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE LOCATION  =  \"武汉\""
      }
    ],
    "system": "CREATE TABLE campuses (LOCATION VARCHAR, campus VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到在1958开办的所有的校园。"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE YEAR  =  1958"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1958年开办的校园名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE YEAR  =  1958"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到在1800年之前开办的校园名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE YEAR  <  1800"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么学校在1800年之前开办？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE YEAR  <  1800"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1935到1939年间创办了哪个学校？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1935至1939年间开设了哪些学校？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到在“徐汇”、“上海”或“厦门”的校园名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE LOCATION  =  \"徐汇\" AND county  =  \"上海\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"厦门\" AND county  =  \"厦门\""
      }
    ],
    "system": "CREATE TABLE campuses (LOCATION VARCHAR, campus VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“徐汇”、“上海”或“厦门”有哪些校区？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE LOCATION  =  \"徐汇\" AND county  =  \"上海\" UNION SELECT campus FROM campuses WHERE LOCATION  =  \"厦门\" AND county  =  \"厦门\""
      }
    ],
    "system": "CREATE TABLE campuses (LOCATION VARCHAR, campus VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1996年度“湖南大学”州立大学的学费是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"湖南大学\" AND T2.year  =  1996"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE csu_fees (year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1996年，“湖南大学”的学费是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"湖南大学\" AND T2.year  =  1996"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE csu_fees (year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1996年度“厦门大学”的所需要的学费是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"厦门大学\" AND T2.year  =  1996"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE csu_fees (year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1996入学“厦门大学”需要的学费是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"厦门大学\" AND T2.year  =  1996"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE csu_fees (year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找校园费用高于平均校园费用的大学的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少大学的学费高于平均水平？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找高于平均校园费用大学的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学费高于平均水平的大学有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM csu_fees WHERE campusfee  >  (SELECT avg(campusfee) FROM csu_fees)"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪所大学在“上海”市且在1950年以后开办？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE county  =  \"上海\" AND YEAR  >  1950"
      }
    ],
    "system": "CREATE TABLE campuses (YEAR INTEGER, campus VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1950年后开办的位于“上海”的学校在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE county  =  \"上海\" AND YEAR  >  1950"
      }
    ],
    "system": "CREATE TABLE campuses (YEAR INTEGER, campus VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一年授予了最多学位？"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE degrees (degrees INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在哪一年被授予的学位的数量最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE degrees (degrees INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个学校的学位授予的次数最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE degrees (degrees INTEGER, campus VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么大学的学位授予数最高？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE degrees (degrees INTEGER, campus VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个大学在第2003年有最多的教师？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR), CREATE TABLE faculty (year VARCHAR, campus VARCHAR, faculty VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2003年那个学校教师人数最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR), CREATE TABLE faculty (year VARCHAR, campus VARCHAR, faculty VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出1996年CSU大学的平均费用。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1996年度大学的平均CSU费用是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  1996"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2005在校园的平均CSU费用是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2005年度高校的平均CSU费用是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(campusfee) FROM csu_fees WHERE YEAR  =  2005"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "报告1998至2002年间授予的学位总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR), CREATE TABLE degrees (degrees INTEGER, campus VARCHAR, year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1998到2002年之间授予多少学位？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T2.year  >=  1998 AND T2.year  <=  2002 GROUP BY T1.campus"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR), CREATE TABLE degrees (degrees INTEGER, campus VARCHAR, year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个“湖北”省的校园，找出其在2000年后学位授予的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"湖北\" AND T2.year  >=  2000 GROUP BY T1.campus"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR, county VARCHAR), CREATE TABLE degrees (degrees INTEGER, campus VARCHAR, year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年后，每个“湖北”省的校园授予的学位总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"湖北\" AND T2.year  >=  2000 GROUP BY T1.campus"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR, county VARCHAR), CREATE TABLE degrees (degrees INTEGER, campus VARCHAR, year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在2002年拥有比“湖北”省每个校园教职工都多的学院的校名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"湖北\")"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR, county VARCHAR), CREATE TABLE faculty (year VARCHAR, campus VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2002年，比“湖北”省的拥有比每个校园教职工都多的学院的校名名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"湖北\")"
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, id VARCHAR, county VARCHAR), CREATE TABLE faculty (year VARCHAR, campus VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1956年，哪个学校的招生总数超过400人但全日制招生却超过200人？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE enrollments (year VARCHAR, campus VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么校区始于1956年且有200多全日制学生和400多名学生入学？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE enrollments (year VARCHAR, campus VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上海”省有多少个校园？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM campuses WHERE county  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE campuses (county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上海”的校区数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM campuses WHERE county  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE campuses (county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“上海”省的校区。"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE county  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上海”省有哪些校区？"
      },
      {
        "from": "assistant",
        "value": "SELECT campus FROM campuses WHERE county  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE campuses (campus VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年度\"湖南大学\"授予的学位数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"湖南大学\" AND t2.year  =  2000"
      }
    ],
    "system": "CREATE TABLE campuses (Id VARCHAR), CREATE TABLE degrees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000在\"湖南大学\"授予了多少学位？"
      },
      {
        "from": "assistant",
        "value": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"湖南大学\" AND t2.year  =  2000"
      }
    ],
    "system": "CREATE TABLE campuses (Id VARCHAR), CREATE TABLE degrees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2001年“厦门大学”授予的学位是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"厦门大学\" AND t2.year  =  2001"
      }
    ],
    "system": "CREATE TABLE campuses (Id VARCHAR), CREATE TABLE degrees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门大学”在2001年度授予了什么学位？"
      },
      {
        "from": "assistant",
        "value": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"厦门大学\" AND t2.year  =  2001"
      }
    ],
    "system": "CREATE TABLE campuses (Id VARCHAR), CREATE TABLE degrees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2002年度总共有多少教师？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"
      }
    ],
    "system": "CREATE TABLE faculty (faculty INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2002年的合计教师数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002"
      }
    ],
    "system": "CREATE TABLE faculty (faculty INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2002年“山东大学”的师资队伍有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"山东大学\""
      }
    ],
    "system": "CREATE TABLE faculty (year VARCHAR, campus VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2002年“山东大学”的教师人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2002 AND T2.campus  =  \"山东大学\""
      }
    ],
    "system": "CREATE TABLE faculty (year VARCHAR, campus VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门大学”2004年有多少教师队伍？"
      },
      {
        "from": "assistant",
        "value": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"厦门大学\""
      }
    ],
    "system": "CREATE TABLE faculty (year VARCHAR, campus VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2004在“厦门大学”有多少教师队伍？"
      },
      {
        "from": "assistant",
        "value": "SELECT faculty FROM faculty AS T1 JOIN campuses AS T2 ON T1.campus  =  T2.id WHERE T1.year  =  2004 AND T2.campus  =  \"厦门大学\""
      }
    ],
    "system": "CREATE TABLE faculty (year VARCHAR, campus VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出在2004年间有600到1000个教职员工的学校。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE faculty (campus VARCHAR, faculty INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2004年有哪些学校拥有600到1000名的教职工？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE faculty (campus VARCHAR, faculty INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2002年授予的学位最多的大学教职数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE faculty (faculty VARCHAR), CREATE TABLE degrees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2002年授予学位最多的那所大学有多少名教员？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE faculty (faculty VARCHAR), CREATE TABLE degrees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2001年授予的学位最少的学校的教师队伍是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE faculty (faculty VARCHAR), CREATE TABLE degrees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2001年授予的学位数最少的大学中的教职员工数量有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1"
      }
    ],
    "system": "CREATE TABLE campuses (id VARCHAR), CREATE TABLE faculty (faculty VARCHAR), CREATE TABLE degrees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2004年“湖南大学”有多少本科生？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"湖南大学\""
      }
    ],
    "system": "CREATE TABLE discipline_enrollments (year VARCHAR, campus VARCHAR, undergraduate INTEGER), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湖南大学”有多少本科生？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t1.undergraduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"湖南大学\""
      }
    ],
    "system": "CREATE TABLE discipline_enrollments (year VARCHAR, campus VARCHAR, undergraduate INTEGER), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "\"厦门大学\"2004年级毕业生人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"厦门大学\""
      }
    ],
    "system": "CREATE TABLE discipline_enrollments (graduate INTEGER, year VARCHAR, campus VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "\"厦门大学\"有多少人毕业于2004年？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"厦门大学\""
      }
    ],
    "system": "CREATE TABLE discipline_enrollments (graduate INTEGER, year VARCHAR, campus VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年度\"厦门大学\"的学费是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"厦门大学\" AND t1.year  =  2000"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee VARCHAR, campus VARCHAR, year VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年度的\"厦门大学\"的学费金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"厦门大学\" AND t1.year  =  2000"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee VARCHAR, campus VARCHAR, year VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“湖南大学”2000年度的学费。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"湖南大学\" AND t1.year  =  2000"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee VARCHAR, campus VARCHAR, year VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湖南大学”2000年度的学费金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"湖南大学\" AND t1.year  =  2000"
      }
    ],
    "system": "CREATE TABLE csu_fees (campusfee VARCHAR, campus VARCHAR, year VARCHAR), CREATE TABLE campuses (campus VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个学校？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM campuses"
      }
    ],
    "system": "CREATE TABLE campuses (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "校园的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM campuses"
      }
    ],
    "system": "CREATE TABLE campuses (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少候选人？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM candidate"
      }
    ],
    "system": "CREATE TABLE candidate (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计候选人人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM candidate"
      }
    ],
    "system": "CREATE TABLE candidate (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些投票资源提供了最多的候选信息？"
      },
      {
        "from": "assistant",
        "value": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE candidate (poll_source VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回候选人最多的民意调查。"
      },
      {
        "from": "assistant",
        "value": "SELECT poll_source FROM candidate GROUP BY poll_source ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE candidate (poll_source VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "前3大支持率是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE candidate (support_rate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回前3大支持率。"
      },
      {
        "from": "assistant",
        "value": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE candidate (support_rate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到反对率最低的候选人的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1"
      }
    ],
    "system": "CREATE TABLE candidate (Candidate_ID VARCHAR, oppose_rate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "反对率最低的候选人的身份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1"
      }
    ],
    "system": "CREATE TABLE candidate (Candidate_ID VARCHAR, oppose_rate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按不确定率升序列出每个候选人的支持，考虑和反对率。"
      },
      {
        "from": "assistant",
        "value": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate"
      }
    ],
    "system": "CREATE TABLE candidate (Consider_rate VARCHAR, Support_rate VARCHAR, unsure_rate VARCHAR, Oppose_rate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按不确定率升序排列的每个候选人的支持率、考虑率和反对率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Support_rate ,  Consider_rate ,  Oppose_rate FROM candidate ORDER BY unsure_rate"
      }
    ],
    "system": "CREATE TABLE candidate (Consider_rate VARCHAR, Support_rate VARCHAR, unsure_rate VARCHAR, Oppose_rate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "针对那一项的民意调查有最高的反对率？"
      },
      {
        "from": "assistant",
        "value": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE candidate (poll_source VARCHAR, oppose_rate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最有反对率的候选人对应的民意调查。"
      },
      {
        "from": "assistant",
        "value": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE candidate (poll_source VARCHAR, oppose_rate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按出生日期顺序从年长到年轻列出所有人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM people ORDER BY date_of_birth"
      }
    ],
    "system": "CREATE TABLE people (date_of_birth VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按出生日期顺序列出所有人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM people ORDER BY date_of_birth"
      }
    ],
    "system": "CREATE TABLE people (date_of_birth VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有男性的平均身高和体重(性别是“男”)。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  '男'"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, height INTEGER, weight INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "男性的平均身高和体重是多少(性别是“男”)？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  '男'"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, height INTEGER, weight INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出身高在200以上或190以下的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM people WHERE height  >  200 OR height  <  190"
      }
    ],
    "system": "CREATE TABLE people (height INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "身高大于200或小于190的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM people WHERE height  >  200 OR height  <  190"
      }
    ],
    "system": "CREATE TABLE people (height INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个性别的平均和最小重量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, weight INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个性别的平均体重和最小体重是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, weight INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出获得最高支持率的候选人的姓名和性别。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (support_rate VARCHAR, people_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支持率最高的候选人的姓名和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (support_rate VARCHAR, people_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个性别中反对比例最低的候选人的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (people_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个性别，反对率最低的候选人的姓名和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (people_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个性别的平均不确定率最高。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, people_id VARCHAR), CREATE TABLE candidate (people_id VARCHAR, unsure_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不确定率最高的候选人的性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, people_id VARCHAR), CREATE TABLE candidate (people_id VARCHAR, unsure_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不参加候选人选举的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)"
      }
    ],
    "system": "CREATE TABLE people (people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (people_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出不参加候选人选举的人的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM people WHERE people_id NOT IN (SELECT people_id FROM candidate)"
      }
    ],
    "system": "CREATE TABLE people (people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (people_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出支持率低于反对率的候选人的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate"
      }
    ],
    "system": "CREATE TABLE people (people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (oppose_rate INTEGER, people_id VARCHAR, support_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支持率低于反对率的候选人姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate"
      }
    ],
    "system": "CREATE TABLE people (people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (oppose_rate INTEGER, people_id VARCHAR, support_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "针对每个性别有多少人的体重高于85？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, weight INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计每一个体重超过85的人的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, weight INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有候选人的最高支持率、最低考虑率和反对率。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate"
      }
    ],
    "system": "CREATE TABLE candidate (consider_rate INTEGER, oppose_rate INTEGER, support_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有候选人的最大支持率、最小考虑率和最小反对率？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate"
      }
    ],
    "system": "CREATE TABLE candidate (consider_rate INTEGER, oppose_rate INTEGER, support_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有女性(性别是“女”)候选人姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  '女' ORDER BY t1.name"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (people_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列所有女性候选人的姓名(性别是“女”)？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t1.sex  =  '女' ORDER BY t1.name"
      }
    ],
    "system": "CREATE TABLE people (sex VARCHAR, people_id VARCHAR, name VARCHAR), CREATE TABLE candidate (people_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出身高低于平均值的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)"
      }
    ],
    "system": "CREATE TABLE people (height INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "身高低于平均水平的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM people WHERE height  <  (SELECT avg(height) FROM people)"
      }
    ],
    "system": "CREATE TABLE people (height INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有人的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM people"
      }
    ],
    "system": "CREATE TABLE people (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有人的全部信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM people"
      }
    ],
    "system": "CREATE TABLE people (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出'李安'导演的所有电影的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE director = '李安'"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "'李安'导演的所有电影的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE director = '李安'"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年后由“姜文”导演的电影名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE director = '姜文' AND YEAR  >  2000"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, YEAR INTEGER, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年后“姜文”导演的所有电影的片名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE director = '姜文' AND YEAR  >  2000"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, YEAR INTEGER, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年之前拍了多少电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"
      }
    ],
    "system": "CREATE TABLE Movie (YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年之前拍了多少电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Movie WHERE YEAR  <  2000"
      }
    ],
    "system": "CREATE TABLE Movie (YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“让子弹飞”的导演是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM Movie WHERE title  = '让子弹飞'"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“让子弹飞”导演是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM Movie WHERE title  = '让子弹飞'"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少评论者？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Reviewer"
      }
    ],
    "system": "CREATE TABLE Reviewer (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少评论者？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Reviewer"
      }
    ],
    "system": "CREATE TABLE Reviewer (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中包含'佳佳'的评论者的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rID FROM Reviewer WHERE name LIKE \"佳佳\""
      }
    ],
    "system": "CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "评论者的名字中包括'佳佳'这个词的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rID FROM Reviewer WHERE name LIKE \"佳佳\""
      }
    ],
    "system": "CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "评论者“苏铭”的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rID FROM Reviewer WHERE name  =  \"苏铭\""
      }
    ],
    "system": "CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名叫“苏铭”评论者的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rID FROM Reviewer WHERE name  =  \"苏铭\""
      }
    ],
    "system": "CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过3颗星的评分的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Rating WHERE stars  >  3"
      }
    ],
    "system": "CREATE TABLE Rating (stars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少电影评分超过3颗星？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Rating WHERE stars  >  3"
      }
    ],
    "system": "CREATE TABLE Rating (stars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最低和最高评级星级是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(stars) ,  min(stars) FROM Rating"
      }
    ],
    "system": "CREATE TABLE Rating (stars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个评分能得到的最大和最小的星数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(stars) ,  min(stars) FROM Rating"
      }
    ],
    "system": "CREATE TABLE Rating (stars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有有评分为4或5的电影的所有年份，并按照年份的顺序进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year"
      }
    ],
    "system": "CREATE TABLE Movie (year VARCHAR, mID VARCHAR), CREATE TABLE Rating (mID VARCHAR, stars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年份由远及近列出有电影获得4或5星级的评分的年份有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT YEAR FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  >=  4 ORDER BY T1.year"
      }
    ],
    "system": "CREATE TABLE Movie (year VARCHAR, mID VARCHAR), CREATE TABLE Rating (mID VARCHAR, stars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "导演评分是5星级电影的导演名字是什么？返回这些电影的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR), CREATE TABLE Rating (mID VARCHAR, stars VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制作了评分是5星的电影的导演叫什么名字以及对应的电影名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR), CREATE TABLE Rating (mID VARCHAR, stars VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个评论者给出的平均星级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE Rating (stars INTEGER, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个评论者对一部电影的平均星级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE Rating (stars INTEGER, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有没有评分的电影的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, mID VARCHAR), CREATE TABLE Rating (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有未被评价的电影的片名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, mID VARCHAR), CREATE TABLE Rating (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找评价日期为'空'的所有评论者的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""
      }
    ],
    "system": "CREATE TABLE Reviewer (rID VARCHAR), CREATE TABLE Rating (rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有没有评价日期的不同评论者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM Reviewer AS T1 JOIN Rating AS T2 ON T1.rID  =  T2.rID WHERE ratingDate  =  \"null\""
      }
    ],
    "system": "CREATE TABLE Reviewer (rID VARCHAR), CREATE TABLE Rating (rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最老电影的平均星级和标题是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于列出的最老的电影，它的平均评级和标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近的电影叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最新电影的片名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近一部电影的最高星级和年份是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近的电影的最高评分是什么，什么时候发布？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.stars) ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT max(YEAR) FROM Movie)"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“李安”执导的所有电影完成之后在进行拍摄的电影名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"李安\")"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, YEAR INTEGER, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有在最近一部“李安”的电影完成之后再拍摄的电影的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"李安\")"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, YEAR INTEGER, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "星级高于“姜文”导演的电影平均水平的片名和导演有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"姜文\")"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有高于“姜文”电影的平均评级的电影的片名和导演是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  >  (SELECT avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.director  =  \"姜文\")"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照评论者名字，片名，最后是星级数目的顺序排序，返回评论者的名字，电影片名，星级，和评价日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, ratingDate VARCHAR, rID VARCHAR, stars VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据按照评论者名字，片名，最后是星级数目的顺序排序，返回评论者的名字，电影片名，星级，和评价日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, ratingDate VARCHAR, rID VARCHAR, stars VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有贡献了三次以上评价的评论者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE Rating (rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有评价过3部或更多部电影的评论者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T1.rID HAVING COUNT(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE Rating (rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有评价过“飘”的评论者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  '飘'"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "评价过“飘”不同的评论者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  '飘'"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有被“沈荣”评价过的电影的导演的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  '沈荣'"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Movie (mID VARCHAR, director VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有被“沈荣”评价过的电影的导演的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  '沈荣'"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Movie (mID VARCHAR, director VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于任何评价，如果评论者的名字与电影导演相同，那么返回评论者的名字、电影标题和星级数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR, stars VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对每个评价，如果评论员和导演同名，则评论员的名字、电影片名、星级是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR, stars VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有评论者的名字和电影的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Reviewer UNION SELECT title FROM Movie"
      }
    ],
    "system": "CREATE TABLE Reviewer (title VARCHAR, name VARCHAR), CREATE TABLE Movie (title VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有评论者和电影的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Reviewer UNION SELECT title FROM Movie"
      }
    ],
    "system": "CREATE TABLE Reviewer (title VARCHAR, name VARCHAR), CREATE TABLE Movie (title VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有未被“谢晨”评论的电影的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  '谢晨'"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, mID VARCHAR), CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“谢晨”没有评论的所有电影的标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT title FROM Movie EXCEPT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  '谢晨'"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, mID VARCHAR), CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按导演姓名和电影标题排序，返回导演不止一部电影的导演所拍摄的所有电影名称和导演的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于所有导演不止一部电影的导演，他们导演的不同电影名称以及他们的名字都是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于有不止一部电影的导演，返回所有由他们执导的电影的片名和制作年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个导演不止一部电影的导演，他们导演的电影的片名和发行日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位导演只导演了一部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE Movie (director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "只制作了一部电影的所有导演的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE Movie (director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "除了导演为“空”之外，那些只拍了一部电影的导演叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE Movie (director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "除导演为“空”之外的所有拍过一部电影的导演的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM Movie WHERE director != \"null\" GROUP BY director HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE Movie (director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个导演有多少个电影评论？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director"
      }
    ],
    "system": "CREATE TABLE Movie (mID VARCHAR, director VARCHAR), CREATE TABLE Rating (mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个导演，他们收到了多少评论？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director"
      }
    ],
    "system": "CREATE TABLE Movie (mID VARCHAR, director VARCHAR), CREATE TABLE Rating (mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出平均评级最高的电影。返回电影片名和平均评级。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均评级最高的电影片名是什么及它们的评级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均评级最低的电影的片名和平均评级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均评级最低的所有电影的片名是什么？和平均的评级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "评价排名前三位的电影的片名和发行年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "评价最高的3部电影的片名和放映年限是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个导演，返回导演的姓名以及他们导演所有电影中评价最高的片名以及该评价的值。忽略导演为“空”的电影。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个导演，他们导演过的所有电影的片名和评级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每位评价者评价最低的电影的片名和星级。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER, rID VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个评论者ID，评级最低的电影的名称和评级是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER, rID VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个导演执导的所有电影中评价最低的电影的片名和得分。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个导演来说，他们评分最差的电影的片名和得分是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T1.stars ,  T2.director ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T2.director"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "评价次数最多的电影的名字叫什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最被评论最多次的电影的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "星级是在3和5之间的所有电影的标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有3到5颗星的电影的标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars BETWEEN 3 AND 5"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出评价都高于3星级的评论人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3"
      }
    ],
    "system": "CREATE TABLE Rating (stars INTEGER, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给一部电影打过3星以上的评论人叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3"
      }
    ],
    "system": "CREATE TABLE Rating (stars INTEGER, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有“韦浩”评论每部电影的平均评价星级。"
      },
      {
        "from": "assistant",
        "value": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"韦浩\") GROUP BY mID"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“韦浩”从未评价的每部电影的平均评价星级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT mID ,  avg(stars) FROM Rating WHERE mID NOT IN (SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"韦浩\") GROUP BY mID"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“韦浩”没有评价的电影ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"韦浩\""
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“韦浩”还没有评价过的所有的电影的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"韦浩\""
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出收到至少2次评论的每部电影的平均评级是多少。"
      },
      {
        "from": "assistant",
        "value": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每部超过3次评论的电影的平均评级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些没有给4星级评论的评价者的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4"
      }
    ],
    "system": "CREATE TABLE Rating (rID VARCHAR, stars VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有给4星级评论的所有评价者的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4"
      }
    ],
    "system": "CREATE TABLE Rating (rID VARCHAR, stars VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到至少一次没有给过4颗星评论的评价者的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT rID FROM Rating WHERE stars != 4"
      }
    ],
    "system": "CREATE TABLE Rating (rID VARCHAR, stars VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少一次没有给过4颗星评论的所有评价者的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rID FROM Rating WHERE stars != 4"
      }
    ],
    "system": "CREATE TABLE Rating (rID VARCHAR, stars VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年以后制作或是由“韦浩”评论的电影的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  '韦浩' OR T2.year  >  2000"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, year INTEGER), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年以后制作或“韦浩”评论过的所有电影的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  '韦浩' OR T2.year  >  2000"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, rID VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR, year INTEGER), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1980年之前制作的或者由“姜文”导演的电影的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE director  =  \"姜文\" OR YEAR   <  1980"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, YEAR INTEGER, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1980年以前拍的电影或由“姜文”担任导演的电影都有哪些名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM Movie WHERE director  =  \"姜文\" OR YEAR   <  1980"
      }
    ],
    "system": "CREATE TABLE Movie (title VARCHAR, YEAR INTEGER, director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "曾经给出3星级和4星级评价的评价者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4"
      }
    ],
    "system": "CREATE TABLE Rating (rID VARCHAR, stars VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出3颗星或4颗星评价的评论者的叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  3 INTERSECT SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  =  4"
      }
    ],
    "system": "CREATE TABLE Rating (rID VARCHAR, stars VARCHAR), CREATE TABLE Reviewer (name VARCHAR, rID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有3颗星和4颗星评价的电影叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有收到3和4颗星评价的电影的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  3 INTERSECT SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T1.stars  =  4"
      }
    ],
    "system": "CREATE TABLE Rating (mID VARCHAR, stars VARCHAR), CREATE TABLE Movie (title VARCHAR, mID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM county_public_safety"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计省的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM county_public_safety"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按人口降序列出各个省的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM county_public_safety ORDER BY Population DESC"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Name VARCHAR, Population VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按人口下降顺序排列的省的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM county_public_safety ORDER BY Population DESC"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Name VARCHAR, Population VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出不在东边的省的不同警察机关。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"冬\""
      }
    ],
    "system": "CREATE TABLE county_public_safety (LOCATION VARCHAR, Police_force VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不位于东部的省有哪些不同的警察机关？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Police_force FROM county_public_safety WHERE LOCATION != \"冬\""
      }
    ],
    "system": "CREATE TABLE county_public_safety (LOCATION VARCHAR, Police_force VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有省的最低犯罪率和最高犯罪率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Crime_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有省的最低和最高犯罪率。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Crime_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按警官数量的升序显示各省的犯罪率。"
      },
      {
        "from": "assistant",
        "value": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Crime_rate VARCHAR, Police_officers VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按警官数目升序排列的每个省的犯罪率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Crime_rate FROM county_public_safety ORDER BY Police_officers ASC"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Crime_rate VARCHAR, Police_officers VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按城市字母顺序排列的城市的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM city ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE city (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回按字母顺序排列的城市名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM city ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE city (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在黑人比例高于10的城市，西班牙裔的比例是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Hispanic FROM city WHERE Black  >  10"
      }
    ],
    "system": "CREATE TABLE city (Hispanic VARCHAR, Black INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回黑人百分比大于10的城市的西班牙裔百分比。"
      },
      {
        "from": "assistant",
        "value": "SELECT Hispanic FROM city WHERE Black  >  10"
      }
    ],
    "system": "CREATE TABLE city (Hispanic VARCHAR, Black INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出人口最多的省的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Name VARCHAR, Population VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的省叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Name VARCHAR, Population VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出白人百分比最大的5个的城市名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM city ORDER BY White DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE city (White VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "白人比例最大的五个城市叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM city ORDER BY White DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE city (White VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示城市名称和所在省的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
      }
    ],
    "system": "CREATE TABLE city (County_ID VARCHAR, Name VARCHAR), CREATE TABLE county_public_safety (County_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "城市的名称以及它们所对应的省的名称分别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Name FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
      }
    ],
    "system": "CREATE TABLE city (County_ID VARCHAR, Name VARCHAR), CREATE TABLE county_public_safety (County_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示城市的白人百分比和他们所在的省的犯罪率。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
      }
    ],
    "system": "CREATE TABLE city (White VARCHAR, County_ID VARCHAR), CREATE TABLE county_public_safety (Crime_rate VARCHAR, County_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "城市的白人比例是多少，它们所对应的省的犯罪率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID"
      }
    ],
    "system": "CREATE TABLE city (White VARCHAR, County_ID VARCHAR), CREATE TABLE county_public_safety (Crime_rate VARCHAR, County_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在警察数量最多的省的城市名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE city (Police_officers VARCHAR, name VARCHAR, county_ID VARCHAR), CREATE TABLE county_public_safety (Police_officers VARCHAR, name VARCHAR, county_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "省内警察最多的城市叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE city (Police_officers VARCHAR, name VARCHAR, county_ID VARCHAR), CREATE TABLE county_public_safety (Police_officers VARCHAR, name VARCHAR, county_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示人口超过20000的省的城市数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)"
      }
    ],
    "system": "CREATE TABLE city (population INTEGER, county_ID VARCHAR), CREATE TABLE county_public_safety (population INTEGER, county_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口超过20000的省有多少城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)"
      }
    ],
    "system": "CREATE TABLE city (population INTEGER, county_ID VARCHAR), CREATE TABLE county_public_safety (population INTEGER, county_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示一个白人比例超过90的城市的犯罪率。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90"
      }
    ],
    "system": "CREATE TABLE city (County_ID VARCHAR, White INTEGER), CREATE TABLE county_public_safety (Crime_rate VARCHAR, County_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "白人比例超过90的城市的省的犯罪率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90"
      }
    ],
    "system": "CREATE TABLE city (County_ID VARCHAR, White INTEGER), CREATE TABLE county_public_safety (Crime_rate VARCHAR, County_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示警察机关和每个警察机关管辖的省的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Police_force VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个警察机关对应多少个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT Police_force ,  COUNT(*) FROM county_public_safety GROUP BY Police_force"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Police_force VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么地方有数量最多的省？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE county_public_safety (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个地方有最多相对应的省？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE county_public_safety (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有城市的省的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)"
      }
    ],
    "system": "CREATE TABLE county_public_safety (County_ID VARCHAR, Name VARCHAR), CREATE TABLE city (County_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不包含任何城市的省的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)"
      }
    ],
    "system": "CREATE TABLE county_public_safety (County_ID VARCHAR, Name VARCHAR), CREATE TABLE city (County_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示东部和西部共同管辖的警察机构。"
      },
      {
        "from": "assistant",
        "value": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"冬\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"西\""
      }
    ],
    "system": "CREATE TABLE county_public_safety (LOCATION VARCHAR, Police_force VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在东部和西部的两个省都有哪些警察机构同时管辖？"
      },
      {
        "from": "assistant",
        "value": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"冬\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"西\""
      }
    ],
    "system": "CREATE TABLE county_public_safety (LOCATION VARCHAR, Police_force VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示犯罪率低于100的省的城市名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)"
      }
    ],
    "system": "CREATE TABLE city (county_id VARCHAR, name VARCHAR, Crime_rate INTEGER), CREATE TABLE county_public_safety (county_id VARCHAR, name VARCHAR, Crime_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "犯罪率低于100的省的城市名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM city WHERE county_id IN (SELECT county_id FROM county_public_safety WHERE Crime_rate  <  100)"
      }
    ],
    "system": "CREATE TABLE city (county_id VARCHAR, name VARCHAR, Crime_rate INTEGER), CREATE TABLE county_public_safety (county_id VARCHAR, name VARCHAR, Crime_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按人口递减顺序显示省的人口负担。"
      },
      {
        "from": "assistant",
        "value": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Population VARCHAR, Case_burden VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按人口降序，每个省的人口负担是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Case_burden FROM county_public_safety ORDER BY Population DESC"
      }
    ],
    "system": "CREATE TABLE county_public_safety (Population VARCHAR, Case_burden VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有底价低于160美元且包含两张床的现代风格的房间的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  '现代化';"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, beds VARCHAR, roomName VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些底价低于160美元并包含两张床的现代风格的房间叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  '现代化';"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, beds VARCHAR, roomName VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有价格高于160且可以容纳2人以上的房间的房间名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;"
      }
    ],
    "system": "CREATE TABLE Rooms (maxOccupancy INTEGER, RoomId VARCHAR, roomName VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请问超过花费超过160且可以住两个人的所有房间的名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName ,  RoomId FROM Rooms WHERE basePrice  >  160 AND maxOccupancy  >  2;"
      }
    ],
    "system": "CREATE TABLE Rooms (maxOccupancy INTEGER, RoomId VARCHAR, roomName VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到酒店里最受欢迎即预订数量最多的房间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预订次数最多的房间是哪一间？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少孩子待在“罗”“锋”预定的房间里？"
      },
      {
        "from": "assistant",
        "value": "SELECT kids FROM Reservations WHERE FirstName = \"罗\" AND LastName  =  \"锋\";"
      }
    ],
    "system": "CREATE TABLE Reservations (kids VARCHAR, FirstName VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出名字是“罗”“锋”的人预订的房间中孩子的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT kids FROM Reservations WHERE FirstName = \"罗\" AND LastName  =  \"锋\";"
      }
    ],
    "system": "CREATE TABLE Reservations (kids VARCHAR, FirstName VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“罗”“锋”曾预订过多少次房间。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Reservations WHERE FirstName = \"罗\" AND LastName  =  \"锋\";"
      }
    ],
    "system": "CREATE TABLE Reservations (FirstName VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“罗”“锋”预订过房间的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Reservations WHERE FirstName = \"罗\" AND LastName  =  \"锋\";"
      }
    ],
    "system": "CREATE TABLE Reservations (FirstName VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出房价最高的房间的全名、房价、入住和退房日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Reservations (Rate VARCHAR, Room VARCHAR, CheckOut VARCHAR, CheckIn VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回房价最高的房间的名称、房价、入住日期和退房日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName ,  T1.Rate ,  T1.CheckIn ,  T1.CheckOut FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY T1.Rate DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Reservations (Rate VARCHAR, Room VARCHAR, CheckOut VARCHAR, CheckIn VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“康” “运杰”在2010年10月23日登记入住的房间内有多少成年人？"
      },
      {
        "from": "assistant",
        "value": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"康\" AND LastName  =  \"运杰\";"
      }
    ],
    "system": "CREATE TABLE Reservations (FirstName VARCHAR, Adults VARCHAR, CheckIn VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找由“康” “运杰”于2010年10月23日预订和登记的房间的成人数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"康\" AND LastName  =  \"运杰\";"
      }
    ],
    "system": "CREATE TABLE Reservations (FirstName VARCHAR, Adults VARCHAR, CheckIn VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少孩子待在2010年9月21日“田” “智”入住的房间里？"
      },
      {
        "from": "assistant",
        "value": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"田\" AND LastName  =  \"智\";"
      }
    ],
    "system": "CREATE TABLE Reservations (FirstName VARCHAR, Kids VARCHAR, CheckIn VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回由“田” “智”于2010年9月21日预订并登记入住的房间的孩子数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Kids FROM Reservations WHERE CheckIn  =  \"2010-09-21\" AND FirstName  =  \"田\" AND LastName  =  \"智\";"
      }
    ],
    "system": "CREATE TABLE Reservations (FirstName VARCHAR, Kids VARCHAR, CheckIn VARCHAR, LastName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少张“大床”？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  '大床';"
      }
    ],
    "system": "CREATE TABLE Rooms (beds INTEGER, bedtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到可用的“大床”的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  '大床';"
      }
    ],
    "system": "CREATE TABLE Rooms (beds INTEGER, bedtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按价格排序列出有“大床”的房间的名称和装饰。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  '大床' ORDER BY basePrice;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, decor VARCHAR, bedtype VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按价格排序排列的有一张“大床”的房间的名称和装饰是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  '大床' ORDER BY basePrice;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, decor VARCHAR, bedtype VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个房间的底价最便宜？列出房间的名称和底价。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最低底价的房间名称和底价是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北欧风格”房间的装饰是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT decor FROM Rooms WHERE roomName  =  \"北欧风格\";"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回房间名为“北欧风格”的装饰。"
      },
      {
        "from": "assistant",
        "value": "SELECT decor FROM Rooms WHERE roomName  =  \"北欧风格\";"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同床位的平均底价是多少？列出床位类型和平均底价。"
      },
      {
        "from": "assistant",
        "value": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一床类型，找出不同床类型对应的平均底价。"
      },
      {
        "from": "assistant",
        "value": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "能住在这家旅店的现代风格客房的总人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  '现代化';"
      }
    ],
    "system": "CREATE TABLE Rooms (maxOccupancy INTEGER, decor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少人能住在这家旅店的现代风格房间里？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(maxOccupancy) FROM Rooms WHERE decor  =  '现代化';"
      }
    ],
    "system": "CREATE TABLE Rooms (maxOccupancy INTEGER, decor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么样的装饰预订量最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (decor VARCHAR, RoomId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预定量最少的装饰是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.decor FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T2.decor ORDER BY count(T2.decor) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (decor VARCHAR, RoomId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出房间人的数量达到最大容量的次数。人的数量包括成年人和孩子。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;"
      }
    ],
    "system": "CREATE TABLE Reservations (Adults VARCHAR, Room VARCHAR, Kids VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, maxOccupancy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在一个房间里的成年人和孩子的数量达到房间最大容量的次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.maxOccupancy  =  T1.Adults + T1.Kids;"
      }
    ],
    "system": "CREATE TABLE Reservations (Adults VARCHAR, Room VARCHAR, Kids VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, maxOccupancy VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出支付高于房间底价的人的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"
      }
    ],
    "system": "CREATE TABLE Reservations (firstname VARCHAR, Rate VARCHAR, lastname VARCHAR, Room VARCHAR), CREATE TABLE Rooms (basePrice VARCHAR, RoomId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "支付高于房间底价的人的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0"
      }
    ],
    "system": "CREATE TABLE Reservations (firstname VARCHAR, Rate VARCHAR, lastname VARCHAR, Room VARCHAR), CREATE TABLE Rooms (basePrice VARCHAR, RoomId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少房间？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Rooms;"
      }
    ],
    "system": "CREATE TABLE Rooms (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这家旅店的房间总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Rooms;"
      }
    ],
    "system": "CREATE TABLE Rooms (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找一张有“大床”的房间。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Rooms WHERE bedType  =  \"大床\";"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个房间有“大床”国王床？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Rooms WHERE bedType  =  \"大床\";"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每种床类型的房间数。"
      },
      {
        "from": "assistant",
        "value": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种床类型的房间数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT bedType ,  count(*) FROM Rooms GROUP BY bedType;"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最大容量房间的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Rooms (maxOccupancy VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "能容纳人数最多的房间叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Rooms (maxOccupancy VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到底价最贵的房间的ID和房间名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个房间的底价最高？"
      },
      {
        "from": "assistant",
        "value": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有传统类型房间的床的类型和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"传统\";"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, bedType VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有传统类型装饰的所有房间的床的类型和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"传统\";"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, bedType VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每一个装饰类型有“大床”的房间数。"
      },
      {
        "from": "assistant",
        "value": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"大床\" GROUP BY decor;"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, bedType VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个房间有“大床”？报告每个装饰类型的这样房间数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"大床\" GROUP BY decor;"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, bedType VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不同装修风格的房间平均价格和最低价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个不同装修风格的房间平均最低价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按其价格排序的所有房间名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms ORDER BY basePrice;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按价格排序所有房间的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms ORDER BY basePrice;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到不同装修风格且价格超过120的房间数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一种不同的装修风格，有多少房间的价格超过120？"
      },
      {
        "from": "assistant",
        "value": "SELECT decor , count(*) FROM Rooms WHERE basePrice  >  120 GROUP BY decor;"
      }
    ],
    "system": "CREATE TABLE Rooms (decor VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个床类型，找到平均房间价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种不同床类型的房间的平均底价是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出有“大床”或“双人”床的房间名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms WHERE bedType  =  \"大床\" OR bedType  =  \"双人\";"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有“大床”或“双人”床的房间的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms WHERE bedType  =  \"大床\" OR bedType  =  \"双人\";"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的床？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT bedType) FROM Rooms;"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在旅店找出不同床类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT bedType) FROM Rooms;"
      }
    ],
    "system": "CREATE TABLE Rooms (bedType VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最贵的3个房间的名字和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "三个最高价房间的名字和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;"
      }
    ],
    "system": "CREATE TABLE Rooms (basePrice VARCHAR, RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找价格高于平均价格的房间名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );"
      }
    ],
    "system": "CREATE TABLE Rooms (roomName VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些房间的价格比平均价格高？"
      },
      {
        "from": "assistant",
        "value": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );"
      }
    ],
    "system": "CREATE TABLE Rooms (roomName VARCHAR, basePrice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有预订的房间的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)"
      }
    ],
    "system": "CREATE TABLE rooms (room VARCHAR, roomid VARCHAR), CREATE TABLE reservations (room VARCHAR, roomid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "还有多少房间没有预订？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)"
      }
    ],
    "system": "CREATE TABLE rooms (room VARCHAR, roomid VARCHAR), CREATE TABLE reservations (room VARCHAR, roomid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个房间的名字和被预定的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个房间，找到它的名字和预订的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找已预订超过60次的房间名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预订次数超过60的房间名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到底价在120和150之间的房间名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150"
      }
    ],
    "system": "CREATE TABLE rooms (roomname VARCHAR, baseprice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些房间的价格在120到150之间？返回房间的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT roomname FROM rooms WHERE baseprice BETWEEN 120 AND 150"
      }
    ],
    "system": "CREATE TABLE rooms (roomname VARCHAR, baseprice INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出客户名包括'浩'字的客户预定的房间的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '浩'"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户名包括“浩”字的客户预订的房间叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '浩'"
      }
    ],
    "system": "CREATE TABLE Reservations (Room VARCHAR), CREATE TABLE Rooms (RoomId VARCHAR, roomName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "交叉参考码的“税收”的cmi的详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cmi_details FROM Customer_Master_Index AS T1 JOIN CMI_Cross_References AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T2.source_system_code  =  '税收'"
      }
    ],
    "system": "CREATE TABLE Customer_Master_Index (cmi_details VARCHAR, master_customer_id VARCHAR), CREATE TABLE CMI_Cross_References (master_customer_id VARCHAR, source_system_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与至少一个理事会税务条目相关的cmi交叉参考ID是什么？列出交叉引用ID和源系统代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1"
      }
    ],
    "system": "CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, source_system_code VARCHAR), CREATE TABLE Council_Tax (cmi_cross_ref_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与每个CMI交叉引用相关的业务费率有多少？列出交叉引用ID、主客户ID和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.cmi_cross_ref_id ,  T2.master_customer_id ,  count(*) FROM Business_Rates AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T2.cmi_cross_ref_id"
      }
    ],
    "system": "CREATE TABLE Business_Rates (cmi_cross_ref_id VARCHAR), CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, master_customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是与利润和超额支付有关的税源系统代码？按利润ID排序列出代码和利润ID，。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id"
      }
    ],
    "system": "CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, source_system_code VARCHAR), CREATE TABLE Benefits_Overpayments (cmi_cross_ref_id VARCHAR, council_tax_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与每个停车罚款ID相关税的税源系统代码和主客户ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id"
      }
    ],
    "system": "CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, master_customer_id VARCHAR, source_system_code VARCHAR), CREATE TABLE Parking_Fines (cmi_cross_ref_id VARCHAR, council_tax_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户主指数的详细信息不是与“高端”相关的租金拖欠税id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != '高端'"
      }
    ],
    "system": "CREATE TABLE Rent_Arrears (cmi_cross_ref_id VARCHAR, council_tax_id VARCHAR), CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, master_customer_id VARCHAR), CREATE TABLE Customer_Master_Index (master_customer_id VARCHAR, cmi_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有交叉参考源代码“选举”或“税收”的选举登记处的登记ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.electoral_register_id FROM Electoral_Register AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id WHERE T2.source_system_code  =  '选举' OR T2.source_system_code  =  '税收'"
      }
    ],
    "system": "CREATE TABLE Electoral_Register (electoral_register_id VARCHAR, cmi_cross_ref_id VARCHAR), CREATE TABLE CMI_Cross_References (cmi_cross_ref_id VARCHAR, source_system_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "CMI交叉引用有多少种不同的源代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT source_system_code) FROM CMI_cross_references"
      }
    ],
    "system": "CREATE TABLE CMI_cross_references (source_system_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按详细信息按降序排序列出有关客户主索引的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM customer_master_index ORDER BY cmi_details DESC"
      }
    ],
    "system": "CREATE TABLE customer_master_index (cmi_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有停车罚款的市政税ID和相关的cmi。"
      },
      {
        "from": "assistant",
        "value": "SELECT council_tax_id ,  cmi_cross_ref_id FROM parking_fines"
      }
    ],
    "system": "CREATE TABLE parking_fines (cmi_cross_ref_id VARCHAR, council_tax_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "征收拖欠的市政税有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM rent_arrears"
      }
    ],
    "system": "CREATE TABLE rent_arrears (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与主客户详细信息“普通”相关的不同的交叉参考源系统代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  '普通'"
      }
    ],
    "system": "CREATE TABLE customer_master_index (master_customer_id VARCHAR, cmi_details VARCHAR), CREATE TABLE cmi_cross_references (master_customer_id VARCHAR, source_system_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个CMI交叉参考ID与任何停车税无关？"
      },
      {
        "from": "assistant",
        "value": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines"
      }
    ],
    "system": "CREATE TABLE cmi_cross_references (cmi_cross_ref_id VARCHAR), CREATE TABLE parking_fines (cmi_cross_ref_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种不同的源代码包含子字符串'en'？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE 'en'"
      }
    ],
    "system": "CREATE TABLE cmi_cross_references (source_system_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个聚会？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM party"
      }
    ],
    "system": "CREATE TABLE party (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计聚会的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM party"
      }
    ],
    "system": "CREATE TABLE party (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以主持人数量升序列出各个聚会的主题。"
      },
      {
        "from": "assistant",
        "value": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC"
      }
    ],
    "system": "CREATE TABLE party (Party_Theme VARCHAR, Number_of_hosts VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "由主持人数量升序排序的每个聚会的主题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Party_Theme FROM party ORDER BY Number_of_hosts ASC"
      }
    ],
    "system": "CREATE TABLE party (Party_Theme VARCHAR, Number_of_hosts VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "聚会的主题和地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Party_Theme ,  LOCATION FROM party"
      }
    ],
    "system": "CREATE TABLE party (LOCATION VARCHAR, Party_Theme VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出每个聚会的主题和地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT Party_Theme ,  LOCATION FROM party"
      }
    ],
    "system": "CREATE TABLE party (LOCATION VARCHAR, Party_Theme VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出已“春季”或“科技”为主题的聚会第一年和最后一年。"
      },
      {
        "from": "assistant",
        "value": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"春季\" OR Party_Theme  =  \"科技\""
      }
    ],
    "system": "CREATE TABLE party (Last_year VARCHAR, First_year VARCHAR, Party_Theme VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "主题为“春季”或“科技”的聚会的第一年和最后一年是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"春季\" OR Party_Theme  =  \"科技\""
      }
    ],
    "system": "CREATE TABLE party (Last_year VARCHAR, First_year VARCHAR, Party_Theme VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个聚会的主持人的平均人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Number_of_hosts) FROM party"
      }
    ],
    "system": "CREATE TABLE party (Number_of_hosts INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算每个聚会的主持人的平均数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Number_of_hosts) FROM party"
      }
    ],
    "system": "CREATE TABLE party (Number_of_hosts INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最多主持人的聚会在什么地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE party (LOCATION VARCHAR, Number_of_hosts VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个聚会的主持人数最多？给出聚会的地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE party (LOCATION VARCHAR, Number_of_hosts VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的国籍，以及每个国家的主持人人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality"
      }
    ],
    "system": "CREATE TABLE HOST (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个国家有多少主持人？列出国籍和对应数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality ,  COUNT(*) FROM HOST GROUP BY Nationality"
      }
    ],
    "system": "CREATE TABLE HOST (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示主持人最常见的国籍。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE HOST (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个国家拥有最多数量的主持人？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE HOST (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示拥有45岁以上和35岁以下的主持人的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35"
      }
    ],
    "system": "CREATE TABLE HOST (Nationality VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家有年龄在45岁以上的主持人和35岁以下的主持人？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35"
      }
    ],
    "system": "CREATE TABLE HOST (Nationality VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示聚会的主题和主持人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"
      }
    ],
    "system": "CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR), CREATE TABLE HOST (Host_ID VARCHAR, Name VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party_Theme VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一聚会，返回它的主题的名称和对应的主持人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID"
      }
    ],
    "system": "CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR), CREATE TABLE HOST (Host_ID VARCHAR, Name VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party_Theme VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照主持人年龄的升序显示聚会的位置和聚会主持人的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age"
      }
    ],
    "system": "CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR), CREATE TABLE HOST (Host_ID VARCHAR, Age VARCHAR, Name VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一聚会，找出它的位置和主持人的名称。将结果按主持人年龄的升序排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age"
      }
    ],
    "system": "CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR), CREATE TABLE HOST (Host_ID VARCHAR, Age VARCHAR, Name VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示主持人年龄大于50的聚会的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50"
      }
    ],
    "system": "CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR), CREATE TABLE HOST (Host_ID VARCHAR, Age INTEGER), CREATE TABLE party (Party_ID VARCHAR, Location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些聚会有的年龄超过50岁的主持人？给出聚会的地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50"
      }
    ],
    "system": "CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR), CREATE TABLE HOST (Host_ID VARCHAR, Age INTEGER), CREATE TABLE party (Party_ID VARCHAR, Location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示主持人数大于20的聚会的主持人名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20"
      }
    ],
    "system": "CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR), CREATE TABLE HOST (Host_ID VARCHAR, Name VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Number_of_hosts INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些聚会拥有超过20个主持人？给我这些聚会的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20"
      }
    ],
    "system": "CREATE TABLE party_host (Host_ID VARCHAR, Party_ID VARCHAR), CREATE TABLE HOST (Host_ID VARCHAR, Name VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Number_of_hosts INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最老主持人的名字和国籍。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE HOST (Nationality VARCHAR, Name VARCHAR, Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高年龄的主持人的姓名和国籍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE HOST (Nationality VARCHAR, Name VARCHAR, Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出在我们的记录中没有作为任何聚会的主持人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)"
      }
    ],
    "system": "CREATE TABLE HOST (Host_ID VARCHAR, Name VARCHAR), CREATE TABLE party_host (Host_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在我们的记录中没有主办任何聚会的主持人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM HOST WHERE Host_ID NOT IN (SELECT Host_ID FROM party_host)"
      }
    ],
    "system": "CREATE TABLE HOST (Host_ID VARCHAR, Name VARCHAR), CREATE TABLE party_host (Host_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少个地区？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM region"
      }
    ],
    "system": "CREATE TABLE region (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算地区的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM region"
      }
    ],
    "system": "CREATE TABLE region (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示按代码排序的所有地区代码和地区名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT region_code ,  region_name FROM region ORDER BY region_code"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按代码排序所有地区的代码和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT region_code ,  region_name FROM region ORDER BY region_code"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有区域名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT region_name FROM region ORDER BY region_name"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的地区名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT region_name FROM region ORDER BY region_name"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示除“丹麦”以外的所有地区的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT region_name FROM region WHERE region_name != '丹麦'"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回除“丹麦”以外的所有地区的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT region_name FROM region WHERE region_name != '丹麦'"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少风暴中有死亡记录？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"
      }
    ],
    "system": "CREATE TABLE storm (Number_Deaths INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计至少有1人死亡的风暴数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM storm WHERE Number_Deaths  >  0"
      }
    ],
    "system": "CREATE TABLE storm (Number_Deaths INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有至少有1人死亡的风暴的名称、活动日期和死亡人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1"
      }
    ],
    "system": "CREATE TABLE storm (dates_active VARCHAR, number_deaths INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于死亡人数超过1人的风暴，其名称、活动日期和死亡人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  dates_active ,  number_deaths FROM storm WHERE number_deaths  >=  1"
      }
    ],
    "system": "CREATE TABLE storm (dates_active VARCHAR, number_deaths INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有最大速度超过1000的风暴的平均和最大损害。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000"
      }
    ],
    "system": "CREATE TABLE storm (max_speed INTEGER, damage_millions_USD INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于最大速度超过1000的风暴，平均损失和最大损失是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000"
      }
    ],
    "system": "CREATE TABLE storm (max_speed INTEGER, damage_millions_USD INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于最大速度大于平均速度的所有风暴，死亡和损害的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)"
      }
    ],
    "system": "CREATE TABLE storm (max_speed INTEGER, damage_millions_USD INTEGER, number_deaths INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于最大速度高于平均速度的风暴，返回总死亡人数和以百万计的总损失。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(number_deaths) ,  sum(damage_millions_USD) FROM storm WHERE max_speed  >  (SELECT avg(max_speed) FROM storm)"
      }
    ],
    "system": "CREATE TABLE storm (max_speed INTEGER, damage_millions_USD INTEGER, number_deaths INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以最大速度降序，列出所有风暴的名称和损坏。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC"
      }
    ],
    "system": "CREATE TABLE storm (max_speed VARCHAR, name VARCHAR, damage_millions_USD VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按暴风雨最大速度降序排序，风暴的名称和以百万计的损失是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC"
      }
    ],
    "system": "CREATE TABLE storm (max_speed VARCHAR, name VARCHAR, damage_millions_USD VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少地区受到影响？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT region_id) FROM affected_region"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同受影响区域的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT region_id) FROM affected_region"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示未受影响区域的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE affected_region (region_name VARCHAR, region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些地区没有受到影响？"
      },
      {
        "from": "assistant",
        "value": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE affected_region (region_name VARCHAR, region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示区域名称和每个区域的风暴数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE affected_region (region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个地区发生了多少次风暴？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE affected_region (region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出风暴的名称和每个风暴的受影响区域的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少地区受到每一次风暴的影响？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "影响最多区域的暴风雨的名称和最大速度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR, max_speed VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回影响最多地区的风暴的名称和最大速度。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR, max_speed VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在记录中没有影响区域的风暴名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不影响任何地区的风暴名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少影响两个地区和10个城市的风暴名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR, number_city_affected INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "影响两个或更多地区并且影响总共10个或更多城市的风暴的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR, number_city_affected INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有风暴名称，除了那些至少影响两个地区的。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不影响两个或多个区域的风暴名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM storm EXCEPT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE storm (storm_id VARCHAR, name VARCHAR), CREATE TABLE affected_region (storm_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "受风暴影响死亡人数至少为10人的地区名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR), CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE storm (storm_id VARCHAR, number_deaths INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回受风暴影响的地区的名称，这些地区的死亡人数至少为10。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T3.number_deaths  >=  10"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR), CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE storm (storm_id VARCHAR, number_deaths INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示影响区域“丹麦”的所有风暴名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  '丹麦'"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR), CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE storm (storm_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "影响“丹麦”的风暴名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  '丹麦'"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR), CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE storm (storm_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两个风暴的区域名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE affected_region (region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有两个或多个风暴的地区名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE affected_region (region_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些受暴风雨影响而造成最多人死亡的地区的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR), CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE storm (storm_id VARCHAR, Number_Deaths VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "受暴风雨影响死亡人数最多的地区叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.region_name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id ORDER BY T3.Number_Deaths DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR), CREATE TABLE region (region_name VARCHAR, region_id VARCHAR), CREATE TABLE storm (storm_id VARCHAR, Number_Deaths VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出影响“阿富汗”和“阿尔巴尼亚”地区的风暴名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  '阿富汗' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  '阿尔巴尼亚'"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR), CREATE TABLE region (Region_name VARCHAR, region_id VARCHAR), CREATE TABLE storm (storm_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "影响“阿富汗”和“阿尔巴尼亚”这两个地区的暴风雨的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  '阿富汗' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  '阿尔巴尼亚'"
      }
    ],
    "system": "CREATE TABLE affected_region (region_id VARCHAR, storm_id VARCHAR), CREATE TABLE region (Region_name VARCHAR, region_id VARCHAR), CREATE TABLE storm (storm_id VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少个县？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM county"
      }
    ],
    "system": "CREATE TABLE county (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计县的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM county"
      }
    ],
    "system": "CREATE TABLE county (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示各县的县名和人口。"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name ,  Population FROM county"
      }
    ],
    "system": "CREATE TABLE county (Population VARCHAR, County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个县的名字和人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name ,  Population FROM county"
      }
    ],
    "system": "CREATE TABLE county (Population VARCHAR, County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有县的平均人口。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Population) FROM county"
      }
    ],
    "system": "CREATE TABLE county (Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均来说，这些县的人口有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Population) FROM county"
      }
    ],
    "system": "CREATE TABLE county (Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有县的最大和最小人口。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Population) ,  min(Population) FROM county"
      }
    ],
    "system": "CREATE TABLE county (Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "县人口的最大和最小数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Population) ,  min(Population) FROM county"
      }
    ],
    "system": "CREATE TABLE county (Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有不同地区的选举。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT District FROM election"
      }
    ],
    "system": "CREATE TABLE election (District VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些不同的地区进行选举？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT District FROM election"
      }
    ],
    "system": "CREATE TABLE election (District VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示名字为“转塘”的县的邮政编码。"
      },
      {
        "from": "assistant",
        "value": "SELECT Zip_code FROM county WHERE County_name  =  \"转塘\""
      }
    ],
    "system": "CREATE TABLE county (County_name VARCHAR, Zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个叫“转塘”的县的邮政编码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Zip_code FROM county WHERE County_name  =  \"转塘\""
      }
    ],
    "system": "CREATE TABLE county (County_name VARCHAR, Zip_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示参选第1区的代表。"
      },
      {
        "from": "assistant",
        "value": "SELECT Delegate FROM election WHERE District  =  1"
      }
    ],
    "system": "CREATE TABLE election (District VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "第1区的参选代表是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT Delegate FROM election WHERE District  =  1"
      }
    ],
    "system": "CREATE TABLE election (District VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示选举的代表和委员会信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT Delegate ,  Committee FROM election"
      }
    ],
    "system": "CREATE TABLE election (Committee VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个选举记录的代表和委员会信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Delegate ,  Committee FROM election"
      }
    ],
    "system": "CREATE TABLE election (Committee VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的州长？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Governor) FROM party"
      }
    ],
    "system": "CREATE TABLE party (Governor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同的州长的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Governor) FROM party"
      }
    ],
    "system": "CREATE TABLE party (Governor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示民主党的副州长和监查官。"
      },
      {
        "from": "assistant",
        "value": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"民主\""
      }
    ],
    "system": "CREATE TABLE party (Lieutenant_Governor VARCHAR, Party VARCHAR, Comptroller VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "民主党的副州长和监查官是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT Lieutenant_Governor ,  Comptroller FROM party WHERE Party  =  \"民主\""
      }
    ],
    "system": "CREATE TABLE party (Lieutenant_Governor VARCHAR, Party VARCHAR, Comptroller VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些年州长叫“张梁”？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"张梁\""
      }
    ],
    "system": "CREATE TABLE party (Governor VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出州长名字为“张梁”的不同年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"张梁\""
      }
    ],
    "system": "CREATE TABLE party (Governor VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有关于选举的信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM election"
      }
    ],
    "system": "CREATE TABLE election (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个选举记录的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM election"
      }
    ],
    "system": "CREATE TABLE election (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示代表和他们所属的县的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District"
      }
    ],
    "system": "CREATE TABLE county (County_id VARCHAR, County_name VARCHAR), CREATE TABLE election (District VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个县的代表和县的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Delegate ,  T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District"
      }
    ],
    "system": "CREATE TABLE county (County_id VARCHAR, County_name VARCHAR), CREATE TABLE election (District VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些代表来自人口少于100000的县？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"
      }
    ],
    "system": "CREATE TABLE county (Population INTEGER, County_id VARCHAR), CREATE TABLE election (District VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到来自人口低于100000的县的代表。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000"
      }
    ],
    "system": "CREATE TABLE county (Population INTEGER, County_id VARCHAR), CREATE TABLE election (District VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的代表来自人口超过50000的县？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000"
      }
    ],
    "system": "CREATE TABLE county (Population INTEGER, County_id VARCHAR), CREATE TABLE election (District VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计来自人口在50000人以上的县的不同代表人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000"
      }
    ],
    "system": "CREATE TABLE county (Population INTEGER, County_id VARCHAR), CREATE TABLE election (District VARCHAR, Delegate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“拨款”委员会代表所属的县名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"拨款\""
      }
    ],
    "system": "CREATE TABLE county (County_id VARCHAR, County_name VARCHAR), CREATE TABLE election (District VARCHAR, Committee VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“拨款”委员会的代表属于哪个县？给我县的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"拨款\""
      }
    ],
    "system": "CREATE TABLE county (County_id VARCHAR, County_name VARCHAR), CREATE TABLE election (District VARCHAR, Committee VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示代表和他们所属政党的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID"
      }
    ],
    "system": "CREATE TABLE election (Delegate VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个代表，找到他们的政党的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Delegate ,  T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID"
      }
    ],
    "system": "CREATE TABLE election (Delegate VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是与第1区的代表有关的政党的理事？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1"
      }
    ],
    "system": "CREATE TABLE election (District VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Governor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找与第1区的代表相关的政党。谁担任这些政党的理事？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Governor FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1"
      }
    ],
    "system": "CREATE TABLE election (District VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Governor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与来自第一区或第二区的代表有联系的各党的监查官是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2"
      }
    ],
    "system": "CREATE TABLE election (District VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Comptroller VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找与第1区或第2区的代表相关的各党。谁担任这些政党的监查官？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Comptroller FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.District  =  1 OR T1.District  =  2"
      }
    ],
    "system": "CREATE TABLE election (District VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Comptroller VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回有民主党代表的所有委员会。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"民主\""
      }
    ],
    "system": "CREATE TABLE election (Committee VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个委员会有民主党代表？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"民主\""
      }
    ],
    "system": "CREATE TABLE election (Committee VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个县的名称以及相应代表人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id"
      }
    ],
    "system": "CREATE TABLE county (County_id VARCHAR, County_name VARCHAR), CREATE TABLE election (District VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个县，查找该县的名称和对应县的代表人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County_name ,  COUNT(*) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id"
      }
    ],
    "system": "CREATE TABLE county (County_id VARCHAR, County_name VARCHAR), CREATE TABLE election (District VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个政党的名称和来自该政党的代表的相应数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party"
      }
    ],
    "system": "CREATE TABLE election (Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个政党，返回政党的名字和对应政党的代表人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party"
      }
    ],
    "system": "CREATE TABLE election (Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按人口顺序升序排序，返回所有县的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name FROM county ORDER BY Population ASC"
      }
    ],
    "system": "CREATE TABLE county (Population VARCHAR, County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按人口升序给所有县的名称排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name FROM county ORDER BY Population ASC"
      }
    ],
    "system": "CREATE TABLE county (Population VARCHAR, County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回按县名字母顺序降序排序的所有县名。"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name FROM county ORDER BY County_name DESC"
      }
    ],
    "system": "CREATE TABLE county (County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序降序给所有县的名字排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name FROM county ORDER BY County_name DESC"
      }
    ],
    "system": "CREATE TABLE county (County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示人口最多的县的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE county (Population VARCHAR, County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个县人口最多？给我这个县的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE county (Population VARCHAR, County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示人口最少的3个县。"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE county (Population VARCHAR, County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最少的3个县是什么？给我县的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE county (Population VARCHAR, County_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两名代表的县的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE county (County_id VARCHAR, County_name VARCHAR), CREATE TABLE election (District VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个县有两个以上代表？给我县的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE county (County_id VARCHAR, County_name VARCHAR), CREATE TABLE election (District VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有至少两个记录的政党的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE party (Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个政党有两个或两个以上的记录？"
      },
      {
        "from": "assistant",
        "value": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE party (Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有最多代表的政党的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE election (Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "代表人数最多的是哪一个政党？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE election (Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示那些曾经担任过州长的人。"
      },
      {
        "from": "assistant",
        "value": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE party (Governor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个人成为州长的次数最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT Governor FROM party GROUP BY Governor ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE party (Governor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示当监查官次数最多的人和相应的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE party (Comptroller VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些人当监查官的次数最多？给我这个人的名字和次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Comptroller ,  COUNT(*) FROM party GROUP BY Comptroller ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE party (Comptroller VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在选举中没有代表的政党名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)"
      }
    ],
    "system": "CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR), CREATE TABLE election (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些政党在选举中没有代表？"
      },
      {
        "from": "assistant",
        "value": "SELECT Party FROM party WHERE Party_ID NOT IN (SELECT Party FROM election)"
      }
    ],
    "system": "CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR), CREATE TABLE election (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有代表参加“拨款”委员会和“经济问题”委员会的政党名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"拨款\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"经济问题\""
      }
    ],
    "system": "CREATE TABLE election (Committee VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些政党在“拨款”委员会和“经济问题”委员会都有代表？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"拨款\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"经济问题\""
      }
    ],
    "system": "CREATE TABLE election (Committee VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个委员会有民主党和自由党的代表？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"民主\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"自由\""
      }
    ],
    "system": "CREATE TABLE election (Committee VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有来自民主党和自由党的代表的委员会。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"民主\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"自由\""
      }
    ],
    "system": "CREATE TABLE election (Committee VARCHAR, Party VARCHAR), CREATE TABLE party (Party_ID VARCHAR, Party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那儿有多少记者？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM journalist"
      }
    ],
    "system": "CREATE TABLE journalist (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按工作年份升序列出记者姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM journalist ORDER BY Years_working ASC"
      }
    ],
    "system": "CREATE TABLE journalist (Years_working VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "记者的国籍和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality ,  Age FROM journalist"
      }
    ],
    "system": "CREATE TABLE journalist (Nationality VARCHAR, Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示来自“英格兰”或“威尔士”的记者姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM journalist WHERE Nationality  =  \"英格兰\" OR Nationality  =  \"威尔士\""
      }
    ],
    "system": "CREATE TABLE journalist (Nationality VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "记者平均工作年限是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Years_working) FROM journalist"
      }
    ],
    "system": "CREATE TABLE journalist (Years_working INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "工作年限最长的记者的国籍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE journalist (Years_working VARCHAR, Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同国籍和每个国家的记者人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality ,  COUNT(*) FROM journalist GROUP BY Nationality"
      }
    ],
    "system": "CREATE TABLE journalist (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有最多记者的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM journalist GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE journalist (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示既拥有工作超过10年的新闻工作者，又拥有工作不到3年的新闻工作者的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3"
      }
    ],
    "system": "CREATE TABLE journalist (Nationality VARCHAR, Years_working INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照出席人数的下降顺序显示活动的日期、地点和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date ,  Name ,  venue FROM event ORDER BY Event_Attendance DESC"
      }
    ],
    "system": "CREATE TABLE event (Event_Attendance VARCHAR, Date VARCHAR, Name VARCHAR, venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示记者的姓名和他们报道的事件的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID"
      }
    ],
    "system": "CREATE TABLE news_report (Event_ID VARCHAR, journalist_ID VARCHAR), CREATE TABLE event (Date VARCHAR, Event_ID VARCHAR), CREATE TABLE journalist (journalist_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按升序显示记者姓名和他们报道的事件的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC"
      }
    ],
    "system": "CREATE TABLE news_report (Event_ID VARCHAR, journalist_ID VARCHAR), CREATE TABLE event (Event_Attendance VARCHAR, Event_ID VARCHAR, Name VARCHAR), CREATE TABLE journalist (journalist_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示记者的姓名和他们报道的事件数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name"
      }
    ],
    "system": "CREATE TABLE news_report (Event_ID VARCHAR, journalist_ID VARCHAR), CREATE TABLE event (Event_ID VARCHAR), CREATE TABLE journalist (journalist_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示报道不止一个事件的记者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE news_report (Event_ID VARCHAR, journalist_ID VARCHAR), CREATE TABLE event (Event_ID VARCHAR), CREATE TABLE journalist (journalist_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有报道任何事件的记者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM journalist WHERE journalist_ID NOT IN (SELECT journalist_ID FROM news_report)"
      }
    ],
    "system": "CREATE TABLE journalist (journalist_ID VARCHAR, Name VARCHAR), CREATE TABLE news_report (journalist_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有事件的平均和最大出席率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event"
      }
    ],
    "system": "CREATE TABLE event (Event_Attendance INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不同角色类型记者的平均年龄和工作经历。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(t1.age) ,  avg(Years_working) ,  t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id  =  t2.journalist_id GROUP BY t2.work_type"
      }
    ],
    "system": "CREATE TABLE journalist (age INTEGER, journalist_id VARCHAR), CREATE TABLE news_report (journalist_id VARCHAR, work_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出参加人数最多的2个的活动的地点和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT venue ,  name FROM event ORDER BY Event_Attendance DESC LIMIT 2"
      }
    ],
    "system": "CREATE TABLE event (Event_Attendance VARCHAR, name VARCHAR, venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我看看所有的餐馆。"
      },
      {
        "from": "assistant",
        "value": "SELECT ResName FROM Restaurant;"
      }
    ],
    "system": "CREATE TABLE Restaurant (ResName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“全聚德”餐厅地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Address FROM Restaurant WHERE ResName = \"全聚德\";"
      }
    ],
    "system": "CREATE TABLE Restaurant (Address VARCHAR, ResName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“全聚德”餐厅评分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Rating FROM Restaurant WHERE ResName = \"全聚德\";"
      }
    ],
    "system": "CREATE TABLE Restaurant (Rating VARCHAR, ResName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有餐厅类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT ResTypeName FROM Restaurant_Type;"
      }
    ],
    "system": "CREATE TABLE Restaurant_Type (ResTypeName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“烤鸭”类型餐厅的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT ResTypeDescription FROM Restaurant_Type WHERE ResTypeName = \"烤鸭\";"
      }
    ],
    "system": "CREATE TABLE Restaurant_Type (ResTypeDescription VARCHAR, ResTypeName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪家餐馆的评价最高？列出餐厅名称及其等级。"
      },
      {
        "from": "assistant",
        "value": "SELECT ResName , Rating FROM Restaurant ORDER BY Rating DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Restaurant (Rating VARCHAR, ResName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李” “琳”的年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Age FROM Student WHERE Fname = \"李\" AND Lname = \"琳\";"
      }
    ],
    "system": "CREATE TABLE Student (Age VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生“李” “琳”的性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Sex FROM Student WHERE Fname = \"李\" AND Lname = \"琳\";"
      }
    ],
    "system": "CREATE TABLE Student (Sex VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有修600专业的学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname , Lname FROM Student WHERE Major  =  600;"
      }
    ],
    "system": "CREATE TABLE Student (Major VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生“李” “琳”住在哪个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_code FROM Student WHERE Fname = \"李\" AND Lname = \"琳\";"
      }
    ],
    "system": "CREATE TABLE Student (Lname VARCHAR, city_code VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1121导师有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student WHERE Advisor =  1121;"
      }
    ],
    "system": "CREATE TABLE Student (Advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位导师的学生最多？列出导师和学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor ,  count(*) FROM Student GROUP BY Advisor ORDER BY count(Advisor) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Student (Advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个专业的学生最少？列出专业和学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Student (Major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个专业有2到30名学生？列出专业和学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;"
      }
    ],
    "system": "CREATE TABLE Student (Major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些学生年龄在18岁以上，主修600？列出每个学生的名和姓。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;"
      }
    ],
    "system": "CREATE TABLE Student (Major VARCHAR, Lname VARCHAR, Age INTEGER, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有年龄在18岁以上，主修600的女学生。列出学生的名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = '女';"
      }
    ],
    "system": "CREATE TABLE Student (Fname VARCHAR, Sex VARCHAR, Lname VARCHAR, Major VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“烤鸭”类型餐厅有多少家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = '烤鸭'"
      }
    ],
    "system": "CREATE TABLE Restaurant (Id VARCHAR), CREATE TABLE Type_Of_Restaurant (Id VARCHAR), CREATE TABLE Restaurant_Type (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生“李” “琳”在餐厅花了多长时间？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"李\" AND Student.Lname = \"琳\";"
      }
    ],
    "system": "CREATE TABLE Student (Spent INTEGER), CREATE TABLE Visits_Restaurant (Spent INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生“李” “琳”去过几次“全聚德”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"李\" AND Student.Lname = \"琳\" AND Restaurant.ResName = \"全聚德\";"
      }
    ],
    "system": "CREATE TABLE Student (Id VARCHAR), CREATE TABLE Visits_Restaurant (Id VARCHAR), CREATE TABLE Restaurant (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李” “琳”什么时候去“全聚德”的？"
      },
      {
        "from": "assistant",
        "value": "SELECT TIME FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"李\" AND Student.Lname = \"琳\" AND Restaurant.ResName = \"全聚德\";"
      }
    ],
    "system": "CREATE TABLE Student (TIME VARCHAR), CREATE TABLE Visits_Restaurant (TIME VARCHAR), CREATE TABLE Restaurant (TIME VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生们在哪家餐厅花费最少的时间？列出餐厅和学生的总花费时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Visits_Restaurant (Id VARCHAR), CREATE TABLE Restaurant (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个学生去餐厅的次数最多？列出学生的名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT Student.Fname , Student.Lname FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID GROUP BY Student.StuID ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Student (Id VARCHAR), CREATE TABLE Visits_Restaurant (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出订单的ID，其状态是“成功”。"
      },
      {
        "from": "assistant",
        "value": "SELECT actual_order_id FROM actual_orders WHERE order_status_code  =  '成功'"
      }
    ],
    "system": "CREATE TABLE actual_orders (actual_order_id VARCHAR, order_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找订购次数最多的产品的名称和价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR, product_price VARCHAR), CREATE TABLE regular_order_products (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到客户总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的支付方式？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT payment_method) FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按牌照号码的顺序显示所有卡车的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT truck_details FROM trucks ORDER BY truck_licence_number"
      }
    ],
    "system": "CREATE TABLE trucks (truck_licence_number VARCHAR, truck_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最昂贵产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name FROM products ORDER BY product_price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_name VARCHAR, product_price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些不住在“浙江”州的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  '浙江'"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出由“信用卡”卡支付的客户的姓名和电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_email ,  customer_name FROM customers WHERE payment_method  =  '信用卡'"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR, customer_email VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找居住在“浙江”州的客户的姓名和电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name ,  t1.customer_phone FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  '浙江'"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发现没有任何雇员在他们的记录中的状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)"
      }
    ],
    "system": "CREATE TABLE addresses (address_id VARCHAR, state_province_county VARCHAR, employee_address_id VARCHAR), CREATE TABLE Employees (address_id VARCHAR, state_province_county VARCHAR, employee_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有客户的姓名、电话号码和电子邮件，按照成为客户的日期进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name ,  customer_phone ,  customer_email FROM Customers ORDER BY date_became_customer"
      }
    ],
    "system": "CREATE TABLE Customers (customer_phone VARCHAR, customer_name VARCHAR, date_became_customer VARCHAR, customer_email VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找前5名客户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5"
      }
    ],
    "system": "CREATE TABLE Customers (customer_name VARCHAR, date_became_customer VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最常用的支付方法。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Customers (payment_method VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有路线的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT route_name FROM Delivery_Routes ORDER BY route_name"
      }
    ],
    "system": "CREATE TABLE Delivery_Routes (route_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有最高交付次数的线路的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Delivery_Routes (route_id VARCHAR, route_name VARCHAR), CREATE TABLE Delivery_Route_Locations (route_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每个州的名字和居住人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.state_province_county ,  count(*) FROM customer_addresses AS t1 JOIN addresses AS t2 ON t1.address_id  =  t2.address_id GROUP BY t2.state_province_county"
      }
    ],
    "system": "CREATE TABLE customer_addresses (address_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少作者？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM authors"
      }
    ],
    "system": "CREATE TABLE authors (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计作者的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM authors"
      }
    ],
    "system": "CREATE TABLE authors (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少机构？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM inst"
      }
    ],
    "system": "CREATE TABLE inst (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计机构数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM inst"
      }
    ],
    "system": "CREATE TABLE inst (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一共发表了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM papers"
      }
    ],
    "system": "CREATE TABLE papers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计总论文数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM papers"
      }
    ],
    "system": "CREATE TABLE papers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“刘” “珍”发表论文的题目是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"刘\" AND t1.lname  =  \"珍\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“刘” “珍”所有论文的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"刘\" AND t1.lname  =  \"珍\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有由“周” “志华”发表的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"周\" AND t1.lname  =  \"志华\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“周” “志华”所有论文的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"周\" AND t1.lname  =  \"志华\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李” “航”发表了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"李\" AND t1.lname  =  \"航\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李” “航”有多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"李\" AND t1.lname  =  \"航\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李” “牧”所属的机构名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"李\" AND t1.lname  =  \"牧\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者“李” “牧”属于哪个机构？给我这个机构的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"李\" AND t1.lname  =  \"牧\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“陈” “十一”属于哪一个机构？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"陈\" AND t1.lname  =  \"十一\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者“陈” “十一”所属的机构名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"陈\" AND t1.lname  =  \"十一\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁属于“清华大学”这一机构？显示名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"清华大学\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找作者的名和姓氏，并且作者的机构隶属是“清华大学”。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"清华大学\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些作者属于“百度”机构？显示名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"百度\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找那些隶属于““百度””机构的作者的名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"百度\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "论文标题为“转基因蛋白酶”的作者的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"转基因蛋白酶\""
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是题为“转基因蛋白酶”的论文的作者？给我姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"转基因蛋白酶\""
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到写论文“注意力模型”的作者的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"注意力模型\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发表论文“注意力模型”的作者的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"注意力模型\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“中南大学”发表的论文有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"中南大学\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出来自“中南大学”机构的作者的论文标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"中南大学\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“百度”出版的所有论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"百度\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“百度”的作者写了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"百度\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“福州大学”机构发表了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"福州大学\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找来自机构为“福州大学”的作者发表的论文数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"福州大学\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找机构“浙江大学”发表的论文数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"浙江大学\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江大学”的作者写了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"浙江大学\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE inst (name VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到作者中有“曹子建”的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"曹\" AND t1.lname  =  \"子建\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者“曹子建”写了哪些论文？给我论文名。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"曹\" AND t1.lname  =  \"子建\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些论文的作者中有“史俊文”？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"史\" AND t1.lname  =  \"俊文\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到作者“史俊文”写的论文的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"史\" AND t1.lname  =  \"俊文\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪篇论文发表在“中国”的机构中，而且以“旭东”为第二作者？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"中国\" AND t2.authorder  =  2 AND t1.lname  =  \"旭东\""
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authorder VARCHAR, authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE inst (country VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找第二作者的姓为“旭东”并隶属于“中国”某机构的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"中国\" AND t2.authorder  =  2 AND t1.lname  =  \"旭东\""
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authorder VARCHAR, authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE inst (country VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到第一作者隶属于“日本”某机构，而且姓“村上”的人发表的论文的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"日本\" AND t2.authorder  =  1 AND t1.lname  =  \"村上\""
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authorder VARCHAR, authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE inst (country VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪篇论文的第一作者隶属于“日本”某机构，而且姓“村上”？把论文的标题给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"日本\" AND t2.authorder  =  1 AND t1.lname  =  \"村上\""
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (instid VARCHAR, authorder VARCHAR, authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR), CREATE TABLE inst (country VARCHAR, instid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发表论文最多的作者的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位作者写的论文最多？找到他或她的姓。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到发表论文最多的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE inst (country VARCHAR, instid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE papers (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最多数的论文所属的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE inst (country VARCHAR, instid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE papers (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找发表论文数量最多的组织机构的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE inst (name VARCHAR, instid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE papers (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个机构发表的论文最多？查找机构名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE inst (name VARCHAR, instid VARCHAR), CREATE TABLE authorship (instid VARCHAR, paperid VARCHAR), CREATE TABLE papers (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到包含“机械”一词的论文标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM papers WHERE title LIKE \"机械\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些论文的标题中有子字符串“机械”？返回论文的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM papers WHERE title LIKE \"机械\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪篇文章的标题包含“数据库”一词？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM papers WHERE title LIKE \"数据库\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些论文在标题中有子字符串“数据库”？显示论文的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM papers WHERE title LIKE \"数据库\""
      }
    ],
    "system": "CREATE TABLE papers (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有写过标题包括“功能性”的论文的作者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"功能性\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些人写了标题中有“功能性”一词的论文？返回作者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"功能性\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找标题包含“单细胞”的论文的所有作者的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"单细胞\""
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些作者写过标题包含“单细胞”的论文？返回他们的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"单细胞\""
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR, authid VARCHAR), CREATE TABLE authorship (authid VARCHAR, paperid VARCHAR), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找作者最多的论文的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)"
      }
    ],
    "system": "CREATE TABLE authorship (authorder INTEGER), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一篇论文的作者最多？给我论文题目。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)"
      }
    ],
    "system": "CREATE TABLE authorship (authorder INTEGER), CREATE TABLE papers (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“丁”的作者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname FROM authors WHERE lname  =  \"丁\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些作者姓“丁”？列出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname FROM authors WHERE lname  =  \"丁\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到名字叫“小鹏”的作者的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT lname FROM authors WHERE fname  =  \"小鹏\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些作者的名字是“小鹏”？列出他们的姓。"
      },
      {
        "from": "assistant",
        "value": "SELECT lname FROM authors WHERE fname  =  \"小鹏\""
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照字母顺序排列，找出所有作者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname FROM authors ORDER BY fname"
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序给所有作者的名字排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname FROM authors ORDER BY fname"
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序检索所有作者的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT lname FROM authors ORDER BY lname"
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一份按字母顺序排序的作者的姓氏名单。"
      },
      {
        "from": "assistant",
        "value": "SELECT lname FROM authors ORDER BY lname"
      }
    ],
    "system": "CREATE TABLE authors (lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照姓氏的字母顺序排序检索所有作者的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM authors ORDER BY lname"
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照姓氏的字母顺序排列列出所有作者的姓氏和名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM authors ORDER BY lname"
      }
    ],
    "system": "CREATE TABLE authors (fname VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "男女演员有多少不同的姓？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT last_name) FROM actor"
      }
    ],
    "system": "CREATE TABLE actor (last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算演员的不同姓氏的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT last_name) FROM actor"
      }
    ],
    "system": "CREATE TABLE actor (last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演员最流行的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE actor (first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有演员中最常见的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name FROM actor GROUP BY first_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE actor (first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演员最受欢迎的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE actor (last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有演员中最常见的全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE actor (last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个地区至少有两个地址？"
      },
      {
        "from": "assistant",
        "value": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE address (district VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出有两个或两个以上地址的地区。"
      },
      {
        "from": "assistant",
        "value": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE address (district VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "地址“中山东路15号”的电话号码和邮政编码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT phone ,  postal_code FROM address WHERE address  =  '中山东路15号'"
      }
    ],
    "system": "CREATE TABLE address (address VARCHAR, phone VARCHAR, postal_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出对应于地址“中山东路15号”的电话和邮政编码。"
      },
      {
        "from": "assistant",
        "value": "SELECT phone ,  postal_code FROM address WHERE address  =  '中山东路15号'"
      }
    ],
    "system": "CREATE TABLE address (address VARCHAR, phone VARCHAR, postal_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市的地址最多？列出城市名称、地址数量和城市ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE address (city_id VARCHAR), CREATE TABLE city (city_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多地址的城市相对应的城市名称、id和地址的数量是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE address (city_id VARCHAR), CREATE TABLE city (city_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”地区有多少地址？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM address WHERE district  =  '四川'"
      }
    ],
    "system": "CREATE TABLE address (district VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计“四川”地区的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM address WHERE district  =  '四川'"
      }
    ],
    "system": "CREATE TABLE address (district VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪部电影以0.99的租金出租并且存货少于3？列出电影片名和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, film_id VARCHAR), CREATE TABLE inventory (film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "租金为0.99而且存货少于3的电影的片名和id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, film_id VARCHAR), CREATE TABLE inventory (film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“澳大利亚”有多少城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  '澳大利亚'"
      }
    ],
    "system": "CREATE TABLE city (country_id VARCHAR), CREATE TABLE country (country_id VARCHAR, country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计“澳大利亚”的城市数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id WHERE T2.country  =  '澳大利亚'"
      }
    ],
    "system": "CREATE TABLE city (country_id VARCHAR), CREATE TABLE country (country_id VARCHAR, country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家至少有3个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE city (country_id VARCHAR), CREATE TABLE country (country VARCHAR, country_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含3个或更多城市的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE city (country_id VARCHAR), CREATE TABLE country (country VARCHAR, country_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找金额大于10而且由姓氏为“严”的工作人员处理的付款的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  '严'"
      }
    ],
    "system": "CREATE TABLE payment (payment_date VARCHAR, staff_id VARCHAR), CREATE TABLE staff (staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "金额大于10而且由姓氏为“严”的工作人员处理的任何付款的付款日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_date FROM payment WHERE amount  >  10 UNION SELECT T1.payment_date FROM payment AS T1 JOIN staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  '严'"
      }
    ],
    "system": "CREATE TABLE payment (payment_date VARCHAR, staff_id VARCHAR), CREATE TABLE staff (staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户的活跃值为“1”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customer WHERE active = '1'"
      }
    ],
    "system": "CREATE TABLE customer (active VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计活跃客户的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customer WHERE active = '1'"
      }
    ],
    "system": "CREATE TABLE customer (active VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪部电影的出租率最高？比率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (rental_rate VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "出租率最高的电影的标题和出租率是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  rental_rate FROM film ORDER BY rental_rate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (rental_rate VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪部电影的演员最多？列出电影名称、影片ID和描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film_actor (film_id VARCHAR), CREATE TABLE film (title VARCHAR, description VARCHAR, film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演员最多的电影的片名、id和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film_actor (film_id VARCHAR), CREATE TABLE film (title VARCHAR, description VARCHAR, film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位电影男演员（女演员）主演的电影最多？列出他或她的名字，姓氏和演员ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film_actor (actor_id VARCHAR), CREATE TABLE actor (last_name VARCHAR, actor_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在最多电影中主演的男演员或女演员的全名和id。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film_actor (actor_id VARCHAR), CREATE TABLE actor (last_name VARCHAR, actor_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些电影演员扮演超过30部电影？列出他或她的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30"
      }
    ],
    "system": "CREATE TABLE film_actor (actor_id VARCHAR), CREATE TABLE actor (last_name VARCHAR, actor_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在30部以上的电影中扮演过角色的演员的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30"
      }
    ],
    "system": "CREATE TABLE film_actor (actor_id VARCHAR), CREATE TABLE actor (last_name VARCHAR, actor_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个商店拥有最多的商品？"
      },
      {
        "from": "assistant",
        "value": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE inventory (store_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "库存物品最多的商店ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE inventory (store_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有付款的总额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(amount) FROM payment"
      }
    ],
    "system": "CREATE TABLE payment (amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有付款金额的总和。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(amount) FROM payment"
      }
    ],
    "system": "CREATE TABLE payment (amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一位客户至少花了一笔钱而且花了最少的钱？列出他或她的名字，姓氏和id。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (last_name VARCHAR, customer_id VARCHAR, first_name VARCHAR), CREATE TABLE payment (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "付款总额最低的客户的全名和id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (last_name VARCHAR, customer_id VARCHAR, first_name VARCHAR), CREATE TABLE payment (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“邪不压正”的类别名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  '邪不压正'"
      }
    ],
    "system": "CREATE TABLE category (category_id VARCHAR, name VARCHAR), CREATE TABLE film_category (category_id VARCHAR, film_id VARCHAR), CREATE TABLE film (title VARCHAR, film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回电影“邪不压正”所属类别的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  '邪不压正'"
      }
    ],
    "system": "CREATE TABLE category (category_id VARCHAR, name VARCHAR), CREATE TABLE film_category (category_id VARCHAR, film_id VARCHAR), CREATE TABLE film (title VARCHAR, film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个类别有多少部电影？列出类别名称、类别ID和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id"
      }
    ],
    "system": "CREATE TABLE film_category (category_id VARCHAR), CREATE TABLE category (category_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同类别的名称和id是什么？每类有多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T1.category_id ,  count(*) FROM film_category AS T1 JOIN category AS T2 ON T1.category_id  =  T2.category_id GROUP BY T1.category_id"
      }
    ],
    "system": "CREATE TABLE film_category (category_id VARCHAR), CREATE TABLE category (category_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪部电影库存中的副本最多？列出标题和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, film_id VARCHAR), CREATE TABLE inventory (film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "库存中副本最多的电影的名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, film_id VARCHAR), CREATE TABLE inventory (film_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "库存中最常被租用的项目的电影名称和库存id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, film_id VARCHAR), CREATE TABLE inventory (inventory_id VARCHAR, film_id VARCHAR), CREATE TABLE rental (inventory_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最常被租用的电影的标题和库存ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, film_id VARCHAR), CREATE TABLE inventory (inventory_id VARCHAR, film_id VARCHAR), CREATE TABLE rental (inventory_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这些电影有多少种语言？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT language_id) FROM film"
      }
    ],
    "system": "CREATE TABLE film (language_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算这些影片中不同语言的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT language_id) FROM film"
      }
    ],
    "system": "CREATE TABLE film (language_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有评级为“R”的电影是什么？列出标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM film WHERE rating  =  'R'"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, rating VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有评级为“R”的电影的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM film WHERE rating  =  'R'"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, rating VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "商店1在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1"
      }
    ],
    "system": "CREATE TABLE store (address_id VARCHAR), CREATE TABLE address (address VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回商店1的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1"
      }
    ],
    "system": "CREATE TABLE store (address_id VARCHAR), CREATE TABLE address (address VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些员工处理的付款次数最少？列出全名和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR), CREATE TABLE payment (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出处理付款最少的工作人员的全名和工作人员ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR), CREATE TABLE payment (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“暗战”使用的是哪种语言？列出语言名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  '暗战'"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, language_id VARCHAR), CREATE TABLE LANGUAGE (name VARCHAR, language_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“暗战”中使用的语言是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM film AS T1 JOIN LANGUAGE AS T2 ON T1.language_id  =  T2.language_id WHERE T1.title  =  '暗战'"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, language_id VARCHAR), CREATE TABLE LANGUAGE (name VARCHAR, language_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少商店？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM store"
      }
    ],
    "system": "CREATE TABLE store (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计商店的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM store"
      }
    ],
    "system": "CREATE TABLE store (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一共有多少种不同的评级？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT rating) FROM film"
      }
    ],
    "system": "CREATE TABLE film (rating VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算电影的不同评级的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT rating) FROM film"
      }
    ],
    "system": "CREATE TABLE film (rating VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些电影有“删除场景”作为特色的一部分？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM film WHERE special_features LIKE '删除场景'"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, special_features VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回包含“删除场景”作为特色的电影的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM film WHERE special_features LIKE '删除场景'"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, special_features VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "商店1的库存中有多少种物品？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM inventory WHERE store_id  =  1"
      }
    ],
    "system": "CREATE TABLE inventory (store_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计商店1库存物品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM inventory WHERE store_id  =  1"
      }
    ],
    "system": "CREATE TABLE inventory (store_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "第一次付款是什么时候发生的？"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE payment (payment_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最早付款的日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_date FROM payment ORDER BY payment_date ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE payment (payment_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“天天”的客户住在哪里？她的电子邮件是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  '天天'"
      }
    ],
    "system": "CREATE TABLE customer (email VARCHAR, address_id VARCHAR, first_name VARCHAR), CREATE TABLE address (address VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回名为“天天”的客户的地址和电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  '天天'"
      }
    ],
    "system": "CREATE TABLE customer (email VARCHAR, address_id VARCHAR, first_name VARCHAR), CREATE TABLE address (address VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有超过100分钟或评级为“限制”的电影，去掉那些替换时间花费超过200的。列出标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  '限制' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, LENGTH INTEGER, rating VARCHAR, replacement_cost INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "除了那些替换时间花费超过200多分钟的电影之外，超过100分钟或者评级为限制级的电影的片名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  '限制' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, LENGTH INTEGER, rating VARCHAR, replacement_cost INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最早租房的客户的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (last_name VARCHAR, customer_id VARCHAR, first_name VARCHAR), CREATE TABLE rental (rental_date VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最早租房的客户的全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (last_name VARCHAR, customer_id VARCHAR, first_name VARCHAR), CREATE TABLE rental (rental_date VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "租了一部电影给一位名为“晓月”姓为“张”的顾客的职员的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  '晓月' AND T3.last_name  =  '张'"
      }
    ],
    "system": "CREATE TABLE staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR), CREATE TABLE rental (staff_id VARCHAR, customer_id VARCHAR), CREATE TABLE customer (last_name VARCHAR, first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回给姓是“张”名是“晓月”的客户提供电影租赁的员工的全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM staff AS T1 JOIN rental AS T2 ON T1.staff_id  =  T2.staff_id JOIN customer AS T3 ON T2.customer_id  =  T3.customer_id WHERE T3.first_name  =  '晓月' AND T3.last_name  =  '张'"
      }
    ],
    "system": "CREATE TABLE staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR), CREATE TABLE rental (staff_id VARCHAR, customer_id VARCHAR), CREATE TABLE customer (last_name VARCHAR, first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个商店的顾客最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (store_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回顾客最多的商店的id。"
      },
      {
        "from": "assistant",
        "value": "SELECT store_id FROM customer GROUP BY store_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (store_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大的支付金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE payment (amount VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最大的支付的金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE payment (amount VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“严”的工作人员住在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  '严'"
      }
    ],
    "system": "CREATE TABLE staff (address_id VARCHAR, first_name VARCHAR), CREATE TABLE address (address VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请给出姓为“严”的工作人员的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  '严'"
      }
    ],
    "system": "CREATE TABLE staff (address_id VARCHAR, first_name VARCHAR), CREATE TABLE address (address VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“2005-08-2302:06:01”之后没有租过电影的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"
      }
    ],
    "system": "CREATE TABLE customer (rental_date INTEGER, customer_id VARCHAR, first_name VARCHAR), CREATE TABLE rental (rental_date INTEGER, customer_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“2005-08-2302:06:01”之后没有租电影的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )"
      }
    ],
    "system": "CREATE TABLE customer (rental_date INTEGER, customer_id VARCHAR, first_name VARCHAR), CREATE TABLE rental (rental_date INTEGER, customer_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少银行分行？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计银行分行的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少顾客？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(no_of_customers) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "银行的总客户数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(no_of_customers) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“上海市”的银行的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(no_of_customers) FROM bank WHERE city  =  '上海'"
      }
    ],
    "system": "CREATE TABLE bank (city VARCHAR, no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用“上海市”的银行的客户总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(no_of_customers) FROM bank WHERE city  =  '上海'"
      }
    ],
    "system": "CREATE TABLE bank (city VARCHAR, no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出犹他各州的银行的平均客户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(no_of_customers) FROM bank WHERE state  =  '江西'"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR, no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“江西”的银行的平均客户数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(no_of_customers) FROM bank WHERE state  =  '江西'"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR, no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有银行的平均客户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(no_of_customers) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "银行客户的平均数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(no_of_customers) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到名为“浦发”的银行分行所在的城市和州。"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  state FROM bank WHERE bname  =  '浦发'"
      }
    ],
    "system": "CREATE TABLE bank (city VARCHAR, state VARCHAR, bname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“浦发”的银行所在的城市和州是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  state FROM bank WHERE bname  =  '浦发'"
      }
    ],
    "system": "CREATE TABLE bank (city VARCHAR, state VARCHAR, bname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“上海”的银行分行名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT bname FROM bank WHERE state  =  '上海'"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR, bname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上海”的银行的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT bname FROM bank WHERE state  =  '上海'"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR, bname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按帐户余额升序排列列出所有客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer ORDER BY acc_bal"
      }
    ],
    "system": "CREATE TABLE customer (acc_bal VARCHAR, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按账户余额排序，所有客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer ORDER BY acc_bal"
      }
    ],
    "system": "CREATE TABLE customer (acc_bal VARCHAR, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按贷款总额排序列出所有不同客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (amount INTEGER, cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按贷款总额排序，不同客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (amount INTEGER, cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找贷款数额为0的客户的状态、帐户类型和信用评分。"
      },
      {
        "from": "assistant",
        "value": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, state VARCHAR, credit_score VARCHAR, no_of_loans VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "零贷款的客户的状态、账户类型和信用评分是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state ,  acc_type ,  credit_score FROM customer WHERE no_of_loans  =  0"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, state VARCHAR, credit_score VARCHAR, no_of_loans VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出银行所处的不同城市的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT city) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "银行所在多少个不同的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT city) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出银行所处的不同州的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT state) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "银行所在有多少不同的州？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT state) FROM bank"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同类型的账户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT acc_type) FROM customer"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同帐户类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT acc_type) FROM customer"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到名字中包含字母“a”的客户的姓名和账户余额."
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE 'a'"
      }
    ],
    "system": "CREATE TABLE customer (acc_bal VARCHAR, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中包含字母“a”的客户姓名和账户余额是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name ,  acc_bal FROM customer WHERE cust_name LIKE 'a'"
      }
    ],
    "system": "CREATE TABLE customer (acc_bal VARCHAR, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找来自“江西”或“云南”的每个客户的总账户余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(acc_bal) FROM customer WHERE state  =  '江西' OR state  =  '云南'"
      }
    ],
    "system": "CREATE TABLE customer (state VARCHAR, acc_bal INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“江西”或“云南”的每个客户的总账户余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(acc_bal) FROM customer WHERE state  =  '江西' OR state  =  '云南'"
      }
    ],
    "system": "CREATE TABLE customer (state VARCHAR, acc_bal INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找同时有“存储”和“支票”帐户类型的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer WHERE acc_type  =  '存储' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  '支票'"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "同时拥有“存储”账户和“支票”账户的客户名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer WHERE acc_type  =  '存储' INTERSECT SELECT cust_name FROM customer WHERE acc_type  =  '支票'"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有“存储”账户的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  '存储'"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“存储”账户的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  '存储'"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有“抵押”类型贷款的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  '抵押'"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (loan_type VARCHAR, cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些没有接受过“抵押”贷款的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer EXCEPT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE T2.loan_type  =  '抵押'"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (loan_type VARCHAR, cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找有“抵押”贷款和“汽车”贷款的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  '抵押' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  '汽车'"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有过“抵押”贷款和“汽车”贷款的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  '抵押' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  '汽车'"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找信用评分低于所有客户平均信用评分的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)"
      }
    ],
    "system": "CREATE TABLE customer (credit_score INTEGER, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "信用评分低于所有客户平均信用评分的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)"
      }
    ],
    "system": "CREATE TABLE customer (credit_score INTEGER, cust_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到客户数量最多的银行支行名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE bank (no_of_customers VARCHAR, bname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户数量最多的银行支行的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE bank (no_of_customers VARCHAR, bname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找信用评分最低的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (cust_name VARCHAR, credit_score VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "信用评分最差的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (cust_name VARCHAR, credit_score VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有最高信用评分的客户的名字、帐户类型和帐户余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, acc_bal VARCHAR, cust_name VARCHAR, credit_score VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有最高信用评分的客户相对应的名字、帐户类型和帐户余额是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cust_name ,  acc_type ,  acc_bal FROM customer ORDER BY credit_score DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, acc_bal VARCHAR, cust_name VARCHAR, credit_score VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找贷款金额最高的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (amount INTEGER, cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总贷款金额最大的客户名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (amount INTEGER, cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出客户数量最多的州。"
      },
      {
        "from": "assistant",
        "value": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR, no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个州的银行客户总数最大？"
      },
      {
        "from": "assistant",
        "value": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR, no_of_customers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "针对每个账户类型，找到信用评分低于50的客户的平均账户余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, credit_score INTEGER, acc_bal INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "针对不同的账户类型，信用评分低于50的客户的平均账户余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, credit_score INTEGER, acc_bal INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "针对每个州，找到信用评分超过100的客户的总账户余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state"
      }
    ],
    "system": "CREATE TABLE customer (credit_score INTEGER, state VARCHAR, acc_bal INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于不同州的信用评分超过100的客户，帐户总余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state"
      }
    ],
    "system": "CREATE TABLE customer (credit_score INTEGER, state VARCHAR, acc_bal INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个银行分行所提供的贷款总额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname"
      }
    ],
    "system": "CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE loan (branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的银行分行的名称是什么，它们的贷款总额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname"
      }
    ],
    "system": "CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE loan (branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找拥有不止一笔贷款的客户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有一笔以上贷款的客户的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找贷款总额超过5000的客户的姓名和账户余额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (amount INTEGER, cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "贷款总额超过5000的客户的姓名和账户余额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000"
      }
    ],
    "system": "CREATE TABLE customer (acc_type VARCHAR, cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (amount INTEGER, cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找提供最大贷款总额的银行支行的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE loan (amount INTEGER, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "贷款额度最大的银行支行的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname ORDER BY sum(T2.amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE loan (amount INTEGER, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出向信用评分小于100的客户提供最大贷款总额的银行支行的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE loan (amount INTEGER, cust_id VARCHAR, branch_id VARCHAR), CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "针对那些信用评分低于100分的客户，放贷总额最大的银行支行的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE loan (amount INTEGER, cust_id VARCHAR, branch_id VARCHAR), CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找提供过贷款的银行支行的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id"
      }
    ],
    "system": "CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE loan (branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供过贷款的不同银行的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id"
      }
    ],
    "system": "CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE loan (branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找有贷款的客户的姓名和信用评分。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR, credit_score VARCHAR), CREATE TABLE loan (cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "贷过款的不同客户的姓名和信用评分是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.cust_name ,  T1.credit_score FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR, credit_score VARCHAR), CREATE TABLE loan (cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到贷款数额超过3000的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "贷款金额超过3000的客户名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, cust_name VARCHAR), CREATE TABLE loan (cust_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找提供“商业”贷款的银行分行的名称和所在的城市名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  '商业'"
      }
    ],
    "system": "CREATE TABLE bank (city VARCHAR, bname VARCHAR, branch_id VARCHAR), CREATE TABLE loan (loan_type VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供“商业”贷款的银行支行的名称和所在城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  '商业'"
      }
    ],
    "system": "CREATE TABLE bank (city VARCHAR, bname VARCHAR, branch_id VARCHAR), CREATE TABLE loan (loan_type VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找向信用评分低于100的任何客户提供过贷款的银行分行的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100"
      }
    ],
    "system": "CREATE TABLE loan (cust_id VARCHAR, branch_id VARCHAR), CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "贷款给信用评分低于100分的客户的银行的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100"
      }
    ],
    "system": "CREATE TABLE loan (cust_id VARCHAR, branch_id VARCHAR), CREATE TABLE bank (bname VARCHAR, branch_id VARCHAR), CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“上海”的银行分行提供的贷款总额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  '上海'"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR, branch_id VARCHAR), CREATE TABLE loan (amount INTEGER, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上海”的银行贷款的总金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.amount) FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.state  =  '上海'"
      }
    ],
    "system": "CREATE TABLE bank (state VARCHAR, branch_id VARCHAR), CREATE TABLE loan (amount INTEGER, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有贷款的客户的平均信用评分。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER), CREATE TABLE loan (cust_id VARCHAR, credit_score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "贷过款的客户的平均信用评分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(credit_score) FROM customer WHERE cust_id IN (SELECT cust_id FROM loan)"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER), CREATE TABLE loan (cust_id VARCHAR, credit_score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有贷过款的客户的平均信用评分。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER), CREATE TABLE loan (cust_id VARCHAR, credit_score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从未贷过款的客户的平均信用评分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(credit_score) FROM customer WHERE cust_id NOT IN (SELECT cust_id FROM loan)"
      }
    ],
    "system": "CREATE TABLE customer (cust_id VARCHAR, credit_score INTEGER), CREATE TABLE loan (cust_id VARCHAR, credit_score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少个评估记录？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ASSESSMENT_NOTES"
      }
    ],
    "system": "CREATE TABLE ASSESSMENT_NOTES (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "评估记录的日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_notes FROM Assessment_Notes"
      }
    ],
    "system": "CREATE TABLE Assessment_Notes (date_of_notes VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少地址包含邮政编码“197”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ADDRESSES WHERE zip_postcode  =  \"197\""
      }
    ],
    "system": "CREATE TABLE ADDRESSES (zip_postcode VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的事件类型代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT incident_type_code) FROM Behavior_Incident"
      }
    ],
    "system": "CREATE TABLE Behavior_Incident (incident_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有不同的拘留类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT detention_type_code FROM Detention"
      }
    ],
    "system": "CREATE TABLE Detention (detention_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "事件类型代码为“噪音”的事件的开始和结束日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"噪音\""
      }
    ],
    "system": "CREATE TABLE Behavior_Incident (incident_type_code VARCHAR, date_incident_start VARCHAR, date_incident_end VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有的拘留摘要。"
      },
      {
        "from": "assistant",
        "value": "SELECT detention_summary FROM Detention"
      }
    ],
    "system": "CREATE TABLE Detention (detention_summary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有学生的手机号码和电子邮件地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT cell_mobile_number ,  email_address FROM STUDENTS"
      }
    ],
    "system": "CREATE TABLE STUDENTS (cell_mobile_number VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字叫“杨”和“栋”的学生的电子邮件是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT email_address FROM Students WHERE first_name  =  \"杨\" AND last_name  =  \"栋\""
      }
    ],
    "system": "CREATE TABLE Students (last_name VARCHAR, first_name VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的学生被拘留？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT student_id) FROM Students_in_Detention"
      }
    ],
    "system": "CREATE TABLE Students_in_Detention (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“军”的老师的性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT gender FROM TEACHERS WHERE last_name  =  \"军\""
      }
    ],
    "system": "CREATE TABLE TEACHERS (last_name VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "事件类型代码为“暴力”的事件类型描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT incident_type_description FROM Ref_Incident_Type WHERE incident_type_code  =  \"暴力\""
      }
    ],
    "system": "CREATE TABLE Ref_Incident_Type (incident_type_description VARCHAR, incident_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有学生住址的最高和最低月租金。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(monthly_rental) ,  min(monthly_rental) FROM Student_Addresses"
      }
    ],
    "system": "CREATE TABLE Student_Addresses (monthly_rental INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到电子邮件地址中包含“qq”一词的老师的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name FROM Teachers WHERE email_address LIKE 'qq'"
      }
    ],
    "system": "CREATE TABLE Teachers (first_name VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按日期升序列出有关评估说明的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM Assessment_Notes ORDER BY date_of_notes ASC"
      }
    ],
    "system": "CREATE TABLE Assessment_Notes (date_of_notes VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有城市的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM Addresses ORDER BY city"
      }
    ],
    "system": "CREATE TABLE Addresses (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照姓氏的字母顺序查找老师的姓和名。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM Teachers ORDER BY last_name"
      }
    ],
    "system": "CREATE TABLE Teachers (last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照月租金降序排序，查找学生住址的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM Student_Addresses ORDER BY monthly_rental DESC"
      }
    ],
    "system": "CREATE TABLE Student_Addresses (monthly_rental VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到评估记录最多的学生的id和名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Assessment_Notes (student_id VARCHAR), CREATE TABLE Students (student_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出评估记录数量最多的3个老师的ID和名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE Assessment_Notes (teacher_id VARCHAR), CREATE TABLE Teachers (first_name VARCHAR, teacher_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出行为事件最多的学生的ID和姓氏？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Behavior_Incident (student_id VARCHAR), CREATE TABLE Students (student_id VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到被拘留次数最多且拘留类型代码为“后置”的老师的id和姓氏？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.teacher_id ,  T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T1.detention_type_code  =  \"后置\" GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Detention (detention_type_code VARCHAR, teacher_id VARCHAR), CREATE TABLE Teachers (last_name VARCHAR, teacher_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住址的平均月租金最高的学生的id和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student_Addresses (student_id VARCHAR), CREATE TABLE Students (student_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找住址平均月租金最高的学生的id和城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE Student_Addresses (address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最常见的行为事件类型的代码和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Behavior_Incident (incident_type_code VARCHAR), CREATE TABLE Ref_Incident_Type (incident_type_description VARCHAR, incident_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最不常见的拘留类型的代码和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Detention (detention_type_code VARCHAR), CREATE TABLE Ref_Detention_Type (detention_type_code VARCHAR, detention_type_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到名为“小夏”的学生的评估记录的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"小夏\""
      }
    ],
    "system": "CREATE TABLE Assessment_Notes (student_id VARCHAR, date_of_notes VARCHAR), CREATE TABLE Students (student_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找姓氏为“齐”的老师的评语记录的内容。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.text_of_notes FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"齐\""
      }
    ],
    "system": "CREATE TABLE Assessment_Notes (teacher_id VARCHAR, text_of_notes VARCHAR), CREATE TABLE Teachers (last_name VARCHAR, teacher_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出姓氏为“贺”的学生的行为事件的开始和结束日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"贺\""
      }
    ],
    "system": "CREATE TABLE Behavior_Incident (student_id VARCHAR, date_incident_start VARCHAR), CREATE TABLE Students (student_id VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找姓氏为“范”的教师被拘留的开始日期和结束日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.datetime_detention_start ,  datetime_detention_end FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T2.last_name  =  \"范\""
      }
    ],
    "system": "CREATE TABLE Detention (teacher_id VARCHAR, datetime_detention_start VARCHAR), CREATE TABLE Teachers (last_name VARCHAR, teacher_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "月租金最高的地址的id和邮政编码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.address_id ,  T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id ORDER BY monthly_rental DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, zip_postcode VARCHAR), CREATE TABLE Student_Addresses (address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住址的月租金最低的学生的手机号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student_Addresses (student_id VARCHAR, monthly_rental VARCHAR), CREATE TABLE Students (cell_mobile_number VARCHAR, student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“云南”的学生住址的月租金是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"云南\""
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, state_province_county VARCHAR), CREATE TABLE Student_Addresses (address_id VARCHAR, monthly_rental VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住址在“陕西”的学生的名字和姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"陕西\""
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, state_province_county VARCHAR), CREATE TABLE Students (last_name VARCHAR, first_name VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学生住址的第一行和每月平均租金是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.line_1 ,  avg(T2.monthly_rental) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, line_1 VARCHAR), CREATE TABLE Student_Addresses (address_id VARCHAR, monthly_rental INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那位姓“小平”的老师住的地址的邮政编码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"小平\""
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, zip_postcode VARCHAR), CREATE TABLE Teachers (address_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住址的邮政编码为“918”的老师的电子邮件地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T1.zip_postcode  =  \"918\""
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, zip_postcode VARCHAR), CREATE TABLE Teachers (address_id VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生没有参与任何行为事件？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )"
      }
    ],
    "system": "CREATE TABLE STUDENTS (student_id VARCHAR), CREATE TABLE Behavior_Incident (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有被拘留过的教师的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id"
      }
    ],
    "system": "CREATE TABLE Teachers (last_name VARCHAR, teacher_id VARCHAR), CREATE TABLE Detention (teacher_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些学生和老师共有的地址的第1行是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id INTERSECT SELECT T1.line_1 FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, line_1 VARCHAR), CREATE TABLE Students (address_id VARCHAR), CREATE TABLE Teachers (address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些资产有2个部分并且故障日志少于2？列出资产ID和详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2"
      }
    ],
    "system": "CREATE TABLE Assets (asset_id VARCHAR, asset_details VARCHAR), CREATE TABLE Asset_Parts (asset_id VARCHAR), CREATE TABLE Fault_Log (asset_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个维修合同包含多少资产？列出个数和合同ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id"
      }
    ],
    "system": "CREATE TABLE Maintenance_Contracts (maintenance_contract_id VARCHAR), CREATE TABLE Assets (maintenance_contract_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每家第三方公司提供多少资产？列出总和和公司ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id"
      }
    ],
    "system": "CREATE TABLE Third_Party_Companies (company_id VARCHAR), CREATE TABLE Assets (supplier_company_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些第三方公司至少有两名维修工程师，或者至少有两份维修合同？列出公司ID和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Third_Party_Companies (company_id VARCHAR, company_name VARCHAR), CREATE TABLE Maintenance_Engineers (company_id VARCHAR), CREATE TABLE Maintenance_Contracts (maintenance_contract_company_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "记录过故障日志但没有联系任何来访工程师的工作人员的姓名和id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name ,  T1.staff_id FROM Staff AS T1 JOIN Fault_Log AS T2 ON T1.staff_id  =  T2.recorded_by_staff_id EXCEPT SELECT T3.staff_name ,  T3.staff_id FROM Staff AS T3 JOIN Engineer_Visits AS T4 ON T3.staff_id  =  T4.contact_staff_id"
      }
    ],
    "system": "CREATE TABLE Staff (staff_id VARCHAR, staff_name VARCHAR), CREATE TABLE Fault_Log (recorded_by_staff_id VARCHAR), CREATE TABLE Engineer_Visits (contact_staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位工程师去过的次数最多？显示工程师id、名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Maintenance_Engineers (last_name VARCHAR, engineer_id VARCHAR, first_name VARCHAR), CREATE TABLE Engineer_Visits (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些部件有超过2个故障？显示零件名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Parts (part_id VARCHAR, part_name VARCHAR), CREATE TABLE Part_Faults (part_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有工程师的名字、姓氏、详细情况以及相应的技能描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id"
      }
    ],
    "system": "CREATE TABLE Maintenance_Engineers (last_name VARCHAR, engineer_id VARCHAR, first_name VARCHAR, other_details VARCHAR), CREATE TABLE Engineer_Skills (engineer_id VARCHAR, skill_id VARCHAR), CREATE TABLE Skills (skill_description VARCHAR, skill_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于不同部件的所有故障，修复它们所需的所有技能的描述是什么？列出故障的名称和技能描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id"
      }
    ],
    "system": "CREATE TABLE Part_Faults (part_fault_id VARCHAR, fault_short_name VARCHAR), CREATE TABLE Skills_Required_To_Fix (part_fault_id VARCHAR, skill_id VARCHAR), CREATE TABLE Skills (skill_description VARCHAR, skill_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个零件可以用于多少资产？列出零件名称和编号。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name"
      }
    ],
    "system": "CREATE TABLE Parts (part_id VARCHAR, part_name VARCHAR), CREATE TABLE Asset_Parts (part_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "日志中的所有故障记录中的所有故障描述和故障状态是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fault_description ,  T2.fault_status FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id"
      }
    ],
    "system": "CREATE TABLE Fault_Log (fault_log_entry_id VARCHAR, fault_description VARCHAR), CREATE TABLE Fault_Log_Parts (fault_log_entry_id VARCHAR, fault_status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个单独的故障日志最多需要多少工程师参与？列出数字和日志条目ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Fault_Log (fault_log_entry_id VARCHAR), CREATE TABLE Engineer_Visits (fault_log_entry_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有工程师的不同姓氏有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT last_name FROM Maintenance_Engineers"
      }
    ],
    "system": "CREATE TABLE Maintenance_Engineers (last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在故障日志部件表中记录了多少故障状态代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT fault_status FROM Fault_Log_Parts"
      }
    ],
    "system": "CREATE TABLE Fault_Log_Parts (fault_status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些工程师从未参与过维护资产？列出工程师的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM Maintenance_Engineers WHERE engineer_id NOT IN (SELECT engineer_id FROM Engineer_Visits)"
      }
    ],
    "system": "CREATE TABLE Maintenance_Engineers (last_name VARCHAR, engineer_id VARCHAR, first_name VARCHAR), CREATE TABLE Engineer_Visits (last_name VARCHAR, engineer_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每个资产的资产ID、细节、制作和模型。"
      },
      {
        "from": "assistant",
        "value": "SELECT asset_id ,  asset_details ,  asset_make ,  asset_model FROM Assets"
      }
    ],
    "system": "CREATE TABLE Assets (asset_id VARCHAR, asset_details VARCHAR, asset_make VARCHAR, asset_model VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "第一笔资产是什么时候收购的？"
      },
      {
        "from": "assistant",
        "value": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Assets (asset_acquired_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个部件故障需要最多的技能来修复？列出零件ID和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Parts (part_id VARCHAR, part_name VARCHAR), CREATE TABLE Part_Faults (part_id VARCHAR, part_fault_id VARCHAR), CREATE TABLE Skills_Required_To_Fix (part_fault_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一类部件的故障数量最少？列出部件名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Parts (part_id VARCHAR, part_name VARCHAR), CREATE TABLE Part_Faults (part_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有参与过的工程师中，哪个工程师的参与次数最少？列出工程师id、名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Maintenance_Engineers (last_name VARCHAR, engineer_id VARCHAR, first_name VARCHAR), CREATE TABLE Engineer_Visits (engineer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些员工联系过哪些工程师？列出员工姓名和工程师的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id"
      }
    ],
    "system": "CREATE TABLE Staff (staff_id VARCHAR, staff_name VARCHAR), CREATE TABLE Engineer_Visits (contact_staff_id VARCHAR, engineer_id VARCHAR), CREATE TABLE Maintenance_Engineers (last_name VARCHAR, engineer_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个故障日志包含了最多的故障部件？列出故障日志ID、描述和记录时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Fault_Log (fault_log_entry_id VARCHAR, fault_description VARCHAR, fault_log_entry_datetime VARCHAR), CREATE TABLE Fault_Log_Parts (fault_log_entry_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种技术能用来修复最多的故障？列出技术ID和描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Skills (skill_description VARCHAR, skill_id VARCHAR), CREATE TABLE Skills_Required_To_Fix (skill_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有不同的资产模型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT asset_model FROM Assets"
      }
    ],
    "system": "CREATE TABLE Assets (asset_model VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按处理日期升序列出所有资产的制作、型号、细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT asset_make ,  asset_model ,  asset_details FROM Assets ORDER BY asset_disposed_date ASC"
      }
    ],
    "system": "CREATE TABLE Assets (asset_make VARCHAR, asset_model VARCHAR, asset_details VARCHAR, asset_disposed_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个零件的收费最低？列出零件ID和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Parts (part_id VARCHAR, chargeable_amount VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪家公司最早开始有维修合同？显示公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Third_Party_Companies (company_id VARCHAR, company_name VARCHAR), CREATE TABLE Maintenance_Contracts (contract_start_date VARCHAR, maintenance_contract_company_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近签订合同的公司的类型描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id JOIN Ref_Company_Types AS T3 ON T1.company_type_code  =  T3.company_type_code ORDER BY T2.contract_end_date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Third_Party_Companies (company_type_code VARCHAR, company_id VARCHAR, company_name VARCHAR), CREATE TABLE Maintenance_Contracts (contract_end_date VARCHAR, maintenance_contract_company_id VARCHAR), CREATE TABLE Ref_Company_Types (company_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种性别占员工的大多数？"
      },
      {
        "from": "assistant",
        "value": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个员工联系了多少工程师？列出进行联系的员工的姓名和联系的工程师的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name"
      }
    ],
    "system": "CREATE TABLE Staff (staff_id VARCHAR, staff_name VARCHAR), CREATE TABLE Engineer_Visits (contact_staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些资产没有产生任何故障记录？列出资产模型。"
      },
      {
        "from": "assistant",
        "value": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)"
      }
    ],
    "system": "CREATE TABLE Assets (asset_id VARCHAR, asset_model VARCHAR), CREATE TABLE Fault_Log (asset_id VARCHAR, asset_model VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有车站的地方当局和提供的服务。"
      },
      {
        "from": "assistant",
        "value": "SELECT local_authority ,  services FROM station"
      }
    ],
    "system": "CREATE TABLE station (local_authority VARCHAR, services VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按时间从早到晚的顺序显示所有列车号码和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT train_number ,  name FROM train ORDER BY TIME"
      }
    ],
    "system": "CREATE TABLE train (TIME VARCHAR, name VARCHAR, train_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照时间排序，给我前往“宿迁”的所有列车的时间和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT TIME ,  train_number FROM train WHERE destination  =  '宿迁' ORDER BY TIME"
      }
    ],
    "system": "CREATE TABLE train (TIME VARCHAR, destination VARCHAR, train_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少列火车名字中有“列车”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM train WHERE name LIKE \"列车\""
      }
    ],
    "system": "CREATE TABLE train (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出从“宿迁”到“徐州”的火车的数量和时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT train_number ,  TIME FROM train WHERE origin  =  '宿迁' AND destination  =  '徐州'"
      }
    ],
    "system": "CREATE TABLE train (origin VARCHAR, TIME VARCHAR, destination VARCHAR, train_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个起点发车的列车数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT origin ,  count(*) FROM train GROUP BY origin"
      }
    ],
    "system": "CREATE TABLE train (origin VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到路线经过最多火车站的列车的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE train (id VARCHAR, name VARCHAR), CREATE TABLE route (train_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个站点的火车数量，以及站点网络名称和服务。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id"
      }
    ],
    "system": "CREATE TABLE station (network_name VARCHAR, services VARCHAR, id VARCHAR), CREATE TABLE route (station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一周每一天的平均气温是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(high_temperature) ,  day_of_week FROM weekly_weather GROUP BY day_of_week"
      }
    ],
    "system": "CREATE TABLE weekly_weather (day_of_week VARCHAR, high_temperature INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我“湖州”的最高低温和平均降水量。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(t1.low_temperature) ,  avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"湖州\""
      }
    ],
    "system": "CREATE TABLE weekly_weather (station_id VARCHAR, precipitation INTEGER, low_temperature INTEGER), CREATE TABLE station (network_name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找经过属于地方当局为“洛阳”的车站的火车的名称和时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"洛阳\""
      }
    ],
    "system": "CREATE TABLE station (local_authority VARCHAR, id VARCHAR), CREATE TABLE route (station_id VARCHAR, train_id VARCHAR), CREATE TABLE train (time VARCHAR, name VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有车站能提供多少种不同的服务？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT services) FROM station"
      }
    ],
    "system": "CREATE TABLE station (services VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找平均高温最高的车站的id和所属的地方当局。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE weekly_weather (station_id VARCHAR), CREATE TABLE station (local_authority VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最大降水量大于50的车站的id和所属的地方当局。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50"
      }
    ],
    "system": "CREATE TABLE weekly_weather (station_id VARCHAR, precipitation INTEGER), CREATE TABLE station (local_authority VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最低低温并且以每小时英里数显示最高风速。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(low_temperature) ,  max(wind_speed_mph) FROM weekly_weather"
      }
    ],
    "system": "CREATE TABLE weekly_weather (wind_speed_mph INTEGER, low_temperature INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出至少有1辆火车出发的起点。"
      },
      {
        "from": "assistant",
        "value": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE train (origin VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“会计学”系的教授人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"会计学\""
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR), CREATE TABLE department (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“会计学”系有多少教授？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"会计学\""
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR), CREATE TABLE department (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少教授教代码为“美术”的课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"美术\""
      }
    ],
    "system": "CREATE TABLE CLASS (CRS_CODE VARCHAR, PROF_NUM VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少教授教的课程代码为“美术”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT PROF_NUM) FROM CLASS WHERE CRS_CODE  =  \"美术\""
      }
    ],
    "system": "CREATE TABLE CLASS (CRS_CODE VARCHAR, PROF_NUM VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“生物”系教授的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"生物学\""
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR, EMP_NUM VARCHAR), CREATE TABLE department (dept_code VARCHAR), CREATE TABLE employee (EMP_NUM VARCHAR, EMP_LNAME VARCHAR, EMP_FNAME VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“生物”教授的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"生物学\""
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR, EMP_NUM VARCHAR), CREATE TABLE department (dept_code VARCHAR), CREATE TABLE employee (EMP_NUM VARCHAR, EMP_LNAME VARCHAR, EMP_FNAME VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教课程“美术”的教授的姓名和出生日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"美术\""
      }
    ],
    "system": "CREATE TABLE employee (EMP_DOB VARCHAR, EMP_NUM VARCHAR, EMP_FNAME VARCHAR), CREATE TABLE CLASS (PROF_NUM VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "负责“ACT211”的教授的名字和出生日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"美术\""
      }
    ],
    "system": "CREATE TABLE employee (EMP_DOB VARCHAR, EMP_NUM VARCHAR, EMP_FNAME VARCHAR), CREATE TABLE CLASS (PROF_NUM VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“孙”的教授教多少门课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  '孙'"
      }
    ],
    "system": "CREATE TABLE employee (EMP_LNAME VARCHAR, EMP_NUM VARCHAR), CREATE TABLE CLASS (PROF_NUM VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“孙”的教授总共有多少门课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  '孙'"
      }
    ],
    "system": "CREATE TABLE employee (EMP_LNAME VARCHAR, EMP_NUM VARCHAR), CREATE TABLE CLASS (PROF_NUM VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "会计系所属的学校代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT school_code FROM department WHERE dept_name  =  \"会计学\""
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "会计系的学校代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT school_code FROM department WHERE dept_name  =  \"会计学\""
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "课程“哲学”有多少学分，它的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  '哲学'"
      }
    ],
    "system": "CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR, crs_credit VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“哲学”的描述是什么，它有多少学分？"
      },
      {
        "from": "assistant",
        "value": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  '哲学'"
      }
    ],
    "system": "CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR, crs_credit VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“旧”系的地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_address FROM department WHERE dept_name  =  '旧'"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, dept_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“旧”系在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_address FROM department WHERE dept_name  =  '旧'"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, dept_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "代码为师范的学校有多少个不同的位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  '师范'"
      }
    ],
    "system": "CREATE TABLE department (dept_address VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "代码为“师范”的学校有多少个不同的位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_address) FROM department WHERE school_code  =  '师范'"
      }
    ],
    "system": "CREATE TABLE department (dept_address VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每所学校有多少个不同的地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code"
      }
    ],
    "system": "CREATE TABLE department (dept_address VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算每个学校的不同地址的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_address) ,  school_code FROM department GROUP BY school_code"
      }
    ],
    "system": "CREATE TABLE department (dept_address VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“文学”课程的描述和学分。"
      },
      {
        "from": "assistant",
        "value": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  '文学'"
      }
    ],
    "system": "CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR, crs_credit VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“文学”的课程描述和学分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT crs_credit ,  crs_description FROM course WHERE crs_code  =  '文学'"
      }
    ],
    "system": "CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR, crs_credit VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个学校的部门数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每所学校有多少个部门？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每所院系数量少于5的学校不同院系的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每所院系数量少于5的学校有几个不同的系？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每门课有多少节？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每门课有多少节？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  crs_code FROM CLASS GROUP BY crs_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个系提供的总学分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE course (dept_code VARCHAR, crs_credit INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个系提供多少学分？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE course (dept_code VARCHAR, crs_credit INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有至少有两节课的教室提供的课程数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE CLASS (class_room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个至少有2节课的教室，有多少节课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE CLASS (class_room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个系的课程数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR), CREATE TABLE course (crs_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个系有多少节课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR), CREATE TABLE course (crs_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个学校的课程数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR), CREATE TABLE department (dept_code VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每所学校有多少课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR), CREATE TABLE department (dept_code VARCHAR, school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同学校的教授人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code"
      }
    ],
    "system": "CREATE TABLE department (dept_code VARCHAR, school_code VARCHAR), CREATE TABLE professor (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的学校有多少不同的教授？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code"
      }
    ],
    "system": "CREATE TABLE department (dept_code VARCHAR, school_code VARCHAR), CREATE TABLE professor (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到员工最多的工作的代码和员工数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE employee (emp_jobcode VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工最多的工作的代码和员工数量是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE employee (emp_jobcode VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一所学校教授人数最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE department (dept_code VARCHAR, school_code VARCHAR), CREATE TABLE professor (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪所学校教授最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE department (dept_code VARCHAR, school_code VARCHAR), CREATE TABLE professor (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个系有“博士”学位的教授。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  '博士' GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR, prof_high_degree VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个系有多少教授有“博士”学位？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  '博士' GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR, prof_high_degree VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个系的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个系有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  dept_code FROM student GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个系的所有学生的总学时数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR, stu_hrs INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个系的学生花多少时间学习？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR, stu_hrs INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个系的所有学生的最大，平均和最小gpa。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR, stu_gpa INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个系的最高、最低和平均的学生GPA是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(stu_gpa) ,  avg(stu_gpa) ,  min(stu_gpa) ,  dept_code FROM student GROUP BY dept_code"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR, stu_gpa INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生平均成绩最高的系的名称和平均成绩是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR, stu_gpa INTEGER), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个系的学生平均成绩最高，平均成绩是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name ,  avg(T1.stu_gpa) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY avg(T1.stu_gpa) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR, stu_gpa INTEGER), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少学校？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT school_code) FROM department"
      }
    ],
    "system": "CREATE TABLE department (school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这个系有多少学校？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT school_code) FROM department"
      }
    ],
    "system": "CREATE TABLE department (school_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少门课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT class_code) FROM CLASS"
      }
    ],
    "system": "CREATE TABLE CLASS (class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的课程有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT class_code) FROM CLASS"
      }
    ],
    "system": "CREATE TABLE CLASS (class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT crs_code) FROM CLASS"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同课程代码的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT crs_code) FROM CLASS"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这所学院有多少个系？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_name) FROM department"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个不同的系？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dept_name) FROM department"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“信息系统”系提供了多少门课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"信息系统\""
      }
    ],
    "system": "CREATE TABLE department (dept_code VARCHAR), CREATE TABLE course (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“信息系统”提供了多少门课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"信息系统\""
      }
    ],
    "system": "CREATE TABLE department (dept_code VARCHAR), CREATE TABLE course (dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“ACT211”课程有多少节课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  '美术'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_section VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“ACT-211”课程提供多少节不同的课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  '美术'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_section VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个系提供的所有课程的总学分。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code"
      }
    ],
    "system": "CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR, crs_credit INTEGER), CREATE TABLE CLASS (crs_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个系提供的学分总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code"
      }
    ],
    "system": "CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR, crs_credit INTEGER), CREATE TABLE CLASS (crs_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找提供的所有课程的学分最多的系的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR, crs_credit INTEGER), CREATE TABLE CLASS (crs_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个系提供最多的学分？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.dept_name FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T1.dept_code  =  T3.dept_code GROUP BY T1.dept_code ORDER BY sum(T1.crs_credit) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR, crs_credit INTEGER), CREATE TABLE CLASS (crs_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生报名上“美术”课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  '美术'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "上“美术”课程的学生总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  '美术'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个学生上“美术”课程的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  '美术'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有上“美术”课的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  '美术'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有上“美术”课而且拿到成绩是“C”的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  '美术' AND T2.enroll_grade  =  'C'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR, enroll_grade VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "上“美术”课而且成绩“C”的所有学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  '美术' AND T2.enroll_grade  =  'C'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR, enroll_grade VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到员工总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM employee"
      }
    ],
    "system": "CREATE TABLE employee (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一共有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM employee"
      }
    ],
    "system": "CREATE TABLE employee (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少教授有“博士”学位？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM professor WHERE prof_high_degree  =  '博士'"
      }
    ],
    "system": "CREATE TABLE professor (prof_high_degree VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有“博士”学位的教授总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM professor WHERE prof_high_degree  =  '博士'"
      }
    ],
    "system": "CREATE TABLE professor (prof_high_degree VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这个班有多少学生上过由会计系的一位教授教的课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  '会计学'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (class_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生上过由会计教授教的一些课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  '会计学'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (class_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "招生人数最多的院系叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (class_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "招生最多的院系名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (class_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照名字顺序列出所有院系的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM department ORDER BY dept_name"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列，所有院系的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_name FROM department ORDER BY dept_name"
      }
    ],
    "system": "CREATE TABLE department (dept_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“KLR209”教室中上过的所有课程的代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'"
      }
    ],
    "system": "CREATE TABLE CLASS (class_room VARCHAR, class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教室“KLR209”上过的所有课程的代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT class_code FROM CLASS WHERE class_room  =  'KLR209'"
      }
    ],
    "system": "CREATE TABLE CLASS (class_room VARCHAR, class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按出生日期排序，列出所有工作代码为“教授”的员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  '教授' ORDER BY emp_dob"
      }
    ],
    "system": "CREATE TABLE employee (emp_dob VARCHAR, emp_jobcode VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照出生日期排序，所有教授的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  '教授' ORDER BY emp_dob"
      }
    ],
    "system": "CREATE TABLE employee (emp_dob VARCHAR, emp_jobcode VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照教授名字的字母顺序，找出所有教授的名字和办公室。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname"
      }
    ],
    "system": "CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按姓氏字母顺序排列，所有教授的姓名和办公地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname"
      }
    ],
    "system": "CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最老的员工的名字和姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1"
      }
    ],
    "system": "CREATE TABLE employee (emp_dob VARCHAR, emp_lname VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最早出生的员工的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1"
      }
    ],
    "system": "CREATE TABLE employee (emp_dob VARCHAR, emp_lname VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "GPA在3以上的学生中，最年轻的学生姓名和gpa是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (stu_lname VARCHAR, stu_fname VARCHAR, stu_gpa INTEGER, stu_dob VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "GPA高于3的最年轻的学生的名字和姓是什么？他们的GPA是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (stu_lname VARCHAR, stu_fname VARCHAR, stu_gpa INTEGER, stu_dob VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在任何课程中获得成绩是“C”的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR), CREATE TABLE enroll (stu_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有在课程中所有得到成绩是“C”的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE enroll_grade  =  'C'"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR), CREATE TABLE enroll (stu_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教授最少的院系是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教授最少的系叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有“博士”学位的教授数量最多的系叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  '博士' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR, prof_high_degree VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个系有“P博士”学位的教授最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  '博士' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR, prof_high_degree VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不教课的教授的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  '教授' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE CLASS (prof_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "任何课都不教的教授的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  '教授' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE CLASS (prof_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "历史系不教课的教授的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  '旧' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE professor (dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR), CREATE TABLE CLASS (prof_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些不教课的历史系教授的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_fname FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  '旧' EXCEPT SELECT T4.emp_fname FROM employee AS T4 JOIN CLASS AS T5 ON T4.emp_num  =  T5.prof_num"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE professor (dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR), CREATE TABLE CLASS (prof_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "历史系教授的姓氏和办公室是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  '旧'"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_lname VARCHAR), CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "历史系教授的姓氏和办公室在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  '旧'"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_lname VARCHAR), CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“吕”的教授所在的系名和办公室是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  '吕'"
      }
    ],
    "system": "CREATE TABLE employee (emp_lname VARCHAR, emp_num VARCHAR), CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“吕”的教授的系名和办公室是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  '吕'"
      }
    ],
    "system": "CREATE TABLE employee (emp_lname VARCHAR, emp_num VARCHAR), CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到办公室在“102号”的教授的姓氏和聘用日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  '102号'"
      }
    ],
    "system": "CREATE TABLE employee (emp_hiredate VARCHAR, emp_lname VARCHAR, emp_num VARCHAR), CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "办公室设在“102号”的教授姓什么？他们什么时候被聘用的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  '102号'"
      }
    ],
    "system": "CREATE TABLE employee (emp_hiredate VARCHAR, emp_lname VARCHAR, emp_num VARCHAR), CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“李”的学生选修的课程代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  '李'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“李”的学生所上的每堂课的课程代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.crs_code FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num WHERE T3.stu_lname  =  '李'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“李”的学生选修的课程的描述和学分是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  '李'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR, crs_credit VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这个姓“李”的学生修了多少学分的课程，课程描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.crs_description ,  T4.crs_credit FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T3.stu_num  =  T2.stu_num JOIN course AS T4 ON T4.crs_code  =  T1.crs_code WHERE T3.stu_lname  =  '李'"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR, crs_credit VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有“博士”或“硕士”学位的教授有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM professor WHERE prof_high_degree  =  '博士' OR prof_high_degree  =  '硕士'"
      }
    ],
    "system": "CREATE TABLE professor (prof_high_degree VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少教授获得“博士”学位或“硕士”学位？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM professor WHERE prof_high_degree  =  '博士' OR prof_high_degree  =  '硕士'"
      }
    ],
    "system": "CREATE TABLE professor (prof_high_degree VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“会计学”或“生物学”系的教授有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  '会计学' OR T2.dept_name  =  '生物学'"
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“会计学”或“生物学”系的教授人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  '会计学' OR T2.dept_name  =  '生物学'"
      }
    ],
    "system": "CREATE TABLE professor (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到正在教代码是“哲学”和“文学”的这两门课程的教授的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  '哲学' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  '文学'"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE CLASS (prof_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "正在教“哲学”和“QM261”的教授的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  '哲学' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  '文学'"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE CLASS (prof_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找正在上“会计学”和“信息系统”系的课程的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  '会计学' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  '信息系统'"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加“会计学”和“信息系统”系课程的所有学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  '会计学' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  '信息系统'"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "课程编号为“美术”的学生的平均gpa是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  '美术'"
      }
    ],
    "system": "CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_gpa INTEGER), CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "上“ACT211”课程的学生的平均GPA是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  '美术'"
      }
    ],
    "system": "CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE student (stu_num VARCHAR, stu_gpa INTEGER), CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "gpa排名前5位的学生的名字、gpa和电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE student (stu_phone VARCHAR, stu_fname VARCHAR, stu_gpa VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "成绩前5名的学生的名字、平均成绩和电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT stu_gpa ,  stu_phone ,  stu_fname FROM student ORDER BY stu_gpa DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE student (stu_phone VARCHAR, stu_fname VARCHAR, stu_gpa VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "GPA最低的学生的院系名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "成绩最低的学生的系名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code ORDER BY stu_gpa LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出gpa低于所有学生平均gpa的学生的名字和gpa。"
      },
      {
        "from": "assistant",
        "value": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)"
      }
    ],
    "system": "CREATE TABLE student (stu_gpa INTEGER, stu_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个GPA低于平均水平的学生的名字和GPA是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT stu_fname ,  stu_gpa FROM student WHERE stu_gpa  <  (SELECT avg(stu_gpa) FROM student)"
      }
    ],
    "system": "CREATE TABLE student (stu_gpa INTEGER, stu_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出学生人数最多的系的名称和地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_address VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生最多的系的名称和地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_address VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找学生人数前3名的系里的学生的姓名、地址和学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_address VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生最多的3个系的学生姓名、地址和人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE student (dept_code VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_address VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到历史系有“博士”学位的教授的名字和办公室。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  '旧' AND T2.prof_high_degree  =  '博士'"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR, prof_high_degree VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "历史系有“博士”学位的教授的名字和职务是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  '旧' AND T2.prof_high_degree  =  '博士'"
      }
    ],
    "system": "CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR, prof_high_degree VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有教过某些课程的老师的名字和课程代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教过课的所有老师的姓名和相应的课程代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T1.crs_code FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有教过某些课程的老师的名字和课程描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有教过课程的老师的姓名是什么，相应的课程描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有教过某门课的教师的姓名和办公室，并找到课程描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR), CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教过某些课程的所有讲师的名字和办公地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR), CREATE TABLE professor (prof_office VARCHAR, emp_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有教过某些课程的讲师的名字和办公室以及课程描述和院系名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR), CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有讲师的姓名、办公地点和院系是什么，以及他们讲授的课程的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description ,  T5.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num JOIN department AS T5 ON T4.dept_code  =  T5.dept_code"
      }
    ],
    "system": "CREATE TABLE CLASS (crs_code VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR), CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出上过课的所有学生的姓名以及课程描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "上过课的所有学生的名字和相应的课程描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR), CREATE TABLE course (crs_code VARCHAR, crs_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有上过课而且成绩是“A”或者“C”的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, enroll_grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有拿到课程成绩是“A”或“C”的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, enroll_grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“会计学”系所有上课的教授的名字和教室。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  '会计学'"
      }
    ],
    "system": "CREATE TABLE CLASS (class_room VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE professor (dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“会计学”系上课的教授的姓氏是什么？他们上的课程的教室是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  '会计学'"
      }
    ],
    "system": "CREATE TABLE CLASS (class_room VARCHAR, prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE professor (dept_code VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“信息系统”系所有上课的教授的姓名和学位。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  '信息系统'"
      }
    ],
    "system": "CREATE TABLE CLASS (prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE professor (dept_code VARCHAR, prof_high_degree VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“信息系统”系任教的教授的不同的名字和所获得的最高学位是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  '信息系统'"
      }
    ],
    "system": "CREATE TABLE CLASS (prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE professor (dept_code VARCHAR, prof_high_degree VARCHAR, emp_num VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在代码为10018的课上获得成绩为“A”的学生的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR, enroll_grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在代码为10018的课上拿到“A”的学生姓什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'A' AND T2.class_code  =  10018"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR, enroll_grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有拿到“博士”学位的“旧”系教授的名字和办公室。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  '旧' AND T1.prof_high_degree != '博士'"
      }
    ],
    "system": "CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR, prof_high_degree VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“博士”学位的“历史\"系教授的名字和办公室是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T1.dept_code  =  T3.dept_code WHERE T3.dept_name  =  '旧' AND T1.prof_high_degree != '博士'"
      }
    ],
    "system": "CREATE TABLE professor (prof_office VARCHAR, dept_code VARCHAR, emp_num VARCHAR, prof_high_degree VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教一门课的教授的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE CLASS (prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有教至少一门课的教授的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num GROUP BY T1.prof_num HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE CLASS (prof_num VARCHAR), CREATE TABLE employee (emp_num VARCHAR, emp_fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到只上一门课的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "只有一门课的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num GROUP BY T2.stu_num HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到描述包含“统计”一词的课程所属的院系。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '统计'"
      }
    ],
    "system": "CREATE TABLE course (dept_code VARCHAR, crs_description VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供包含“统计”一词的描述课程的系名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '统计'"
      }
    ],
    "system": "CREATE TABLE course (dept_code VARCHAR, crs_description VARCHAR), CREATE TABLE department (dept_name VARCHAR, dept_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏以字母“少”开头而且正在上“美术”课的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  '美术' AND T1.stu_lname LIKE '少'"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏以字母“少”开头，正在上“美术”的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  '美术' AND T1.stu_lname LIKE '少'"
      }
    ],
    "system": "CREATE TABLE student (stu_num VARCHAR, stu_lname VARCHAR, stu_fname VARCHAR), CREATE TABLE enroll (stu_num VARCHAR, class_code VARCHAR), CREATE TABLE CLASS (crs_code VARCHAR, class_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个俱乐部？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club"
      }
    ],
    "system": "CREATE TABLE club (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "俱乐部的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club"
      }
    ],
    "system": "CREATE TABLE club (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母升序顺序列出俱乐部的不同区域。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"
      }
    ],
    "system": "CREATE TABLE club (Region VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "俱乐部按字母顺序排列的不同区域是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Region FROM club ORDER BY Region ASC"
      }
    ],
    "system": "CREATE TABLE club (Region VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "俱乐部的平均金牌数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Gold) FROM club_rank"
      }
    ],
    "system": "CREATE TABLE club_rank (Gold INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个俱乐部的平均金牌数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Gold) FROM club_rank"
      }
    ],
    "system": "CREATE TABLE club_rank (Gold INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比赛的类型和国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Competition_type ,  Country FROM competition"
      }
    ],
    "system": "CREATE TABLE competition (Country VARCHAR, Competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一种比赛的类型和所在的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Competition_type ,  Country FROM competition"
      }
    ],
    "system": "CREATE TABLE competition (Country VARCHAR, Competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比赛类型不是“锦标赛”的不同年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"锦标赛\""
      }
    ],
    "system": "CREATE TABLE competition (Competition_type VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比赛类型不是“锦标赛”的所有比赛的不同的年份有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"锦标赛\""
      }
    ],
    "system": "CREATE TABLE competition (Competition_type VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "俱乐部银牌的最大和最小数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Silver) ,  min(Silver) FROM club_rank"
      }
    ],
    "system": "CREATE TABLE club_rank (Silver INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有俱乐部的银牌的最大和最小数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Silver) ,  min(Silver) FROM club_rank"
      }
    ],
    "system": "CREATE TABLE club_rank (Silver INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少俱乐部总奖牌数不到10？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club_rank WHERE Total  <  10"
      }
    ],
    "system": "CREATE TABLE club_rank (Total INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有少于10枚奖牌的俱乐部总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club_rank WHERE Total  <  10"
      }
    ],
    "system": "CREATE TABLE club_rank (Total INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开始年份升序，列出所有俱乐部名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM club ORDER BY Start_year ASC"
      }
    ],
    "system": "CREATE TABLE club (Start_year VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从最古老的俱乐部开始，所有俱乐部的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM club ORDER BY Start_year ASC"
      }
    ],
    "system": "CREATE TABLE club (Start_year VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序降序，列出所有俱乐部名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM club ORDER BY name DESC"
      }
    ],
    "system": "CREATE TABLE club (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有俱乐部按字母顺序降序排列的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM club ORDER BY name DESC"
      }
    ],
    "system": "CREATE TABLE club (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示俱乐部的名字和球员。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID"
      }
    ],
    "system": "CREATE TABLE club (Club_ID VARCHAR, name VARCHAR), CREATE TABLE player (Player_id VARCHAR, Club_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有俱乐部的名字和球员是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.Player_id FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID"
      }
    ],
    "system": "CREATE TABLE club (Club_ID VARCHAR, name VARCHAR), CREATE TABLE player (Player_id VARCHAR, Club_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示位置包含“右前锋”的球员的俱乐部名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"右前锋\""
      }
    ],
    "system": "CREATE TABLE club (Club_ID VARCHAR, name VARCHAR), CREATE TABLE player (Club_ID VARCHAR, Position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "位置包括“右前锋”的球员的俱乐部叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"右前锋\""
      }
    ],
    "system": "CREATE TABLE club (Club_ID VARCHAR, name VARCHAR), CREATE TABLE player (Club_ID VARCHAR, Position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“国安”俱乐部的球员平均得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"国安\""
      }
    ],
    "system": "CREATE TABLE club (name VARCHAR, Club_ID VARCHAR), CREATE TABLE player (Club_ID VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“国安”俱乐部的球员平均有多少得分？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"国安\""
      }
    ],
    "system": "CREATE TABLE club (name VARCHAR, Club_ID VARCHAR), CREATE TABLE player (Club_ID VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出球员的位置和每个位置球员的平均得分数。"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个位置，球员在那个位置的平均得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION ,  avg(Points) FROM player GROUP BY POSITION"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出平均得分数大于20分的球员的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR, name VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些平均得分高于20分的球员的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR, name VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出比赛的类型和每种类型比赛的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type"
      }
    ],
    "system": "CREATE TABLE competition (Competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比赛的类型有哪些？每种类型的比赛的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type"
      }
    ],
    "system": "CREATE TABLE competition (Competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出最常见的比赛类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE competition (Competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最常见的比赛类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE competition (Competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出最多有五场比赛的比赛类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"
      }
    ],
    "system": "CREATE TABLE competition (Competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多有5场比赛的比赛类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5"
      }
    ],
    "system": "CREATE TABLE competition (Competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有球员的俱乐部的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
      }
    ],
    "system": "CREATE TABLE CLub (Club_ID VARCHAR, name VARCHAR), CREATE TABLE player (Club_ID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有没有球员的俱乐部的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)"
      }
    ],
    "system": "CREATE TABLE CLub (Club_ID VARCHAR, name VARCHAR), CREATE TABLE player (Club_ID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些位置既有得分都超过20分的球员又有得分低于10分的球员？"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些位置既有得分超过20又有得分低于10的球员 ？"
      },
      {
        "from": "assistant",
        "value": "SELECT POSITION FROM player WHERE Points  >  20 INTERSECT SELECT POSITION FROM player WHERE Points  <  10"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR, Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有球员的总点数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Points) FROM player"
      }
    ],
    "system": "CREATE TABLE player (Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有球员的总点数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Points) FROM player"
      }
    ],
    "system": "CREATE TABLE player (Points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个不同的位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT POSITION) FROM player"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "球员有多少种不同的位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT POSITION) FROM player"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "得分高于平均得分的球员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"
      }
    ],
    "system": "CREATE TABLE player (points INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有得分高于平均分数的球员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)"
      }
    ],
    "system": "CREATE TABLE player (points INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个位置得分低于30的球员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR, points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个位置的得分少于30的球员的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  POSITION FROM player WHERE points  <  30 GROUP BY POSITION"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR, points INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个国家参加过最多的比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM competition WHERE competition_type  =  '锦标赛' GROUP BY country ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE competition (country VARCHAR, competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加过最多的“锦标赛”的国家叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM competition WHERE competition_type  =  '锦标赛' GROUP BY country ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE competition (country VARCHAR, competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家参加了“友谊型”和“锦标赛”类型的比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM competition WHERE competition_type  =  '友谊型' INTERSECT SELECT country FROM competition WHERE competition_type  =  '锦标赛'"
      }
    ],
    "system": "CREATE TABLE competition (country VARCHAR, competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家既参加了“友谊型”又参加了“锦标赛”？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM competition WHERE competition_type  =  '友谊型' INTERSECT SELECT country FROM competition WHERE competition_type  =  '锦标赛'"
      }
    ],
    "system": "CREATE TABLE competition (country VARCHAR, competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些从未参加过任何“友谊型”的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  '友谊型'"
      }
    ],
    "system": "CREATE TABLE competition (country VARCHAR, competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家从未参加过“友谊型”？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  '友谊型'"
      }
    ],
    "system": "CREATE TABLE competition (country VARCHAR, competition_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少家具部件？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(num_of_component) FROM furniture"
      }
    ],
    "system": "CREATE TABLE furniture (num_of_component INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以最高的市场价格返回家具的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE furniture (market_rate VARCHAR, furniture_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到市场份额前2的家具的总市场价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2"
      }
    ],
    "system": "CREATE TABLE furniture (market_rate INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找有超过10个组件的所有家具的组件数量和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Num_of_Component ,  name FROM furniture WHERE Num_of_Component  >  10"
      }
    ],
    "system": "CREATE TABLE furniture (Num_of_Component INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最不受欢迎的家具的名称和部件数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  Num_of_Component FROM furniture ORDER BY market_rate LIMIT 1"
      }
    ],
    "system": "CREATE TABLE furniture (market_rate VARCHAR, name VARCHAR, Num_of_Component VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找价格低于最高价格的家具名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)"
      }
    ],
    "system": "CREATE TABLE furniture (Furniture_ID VARCHAR, name VARCHAR), CREATE TABLE furniture_manufacte (Price_in_Dollar INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个制造商的商店最多？列出其名称和开业年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT open_year ,  name FROM manufacturer ORDER BY num_of_shops DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE manufacturer (open_year VARCHAR, num_of_shops VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出拥有超过20个商店的制造商的平均工厂数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Num_of_Factories) FROM manufacturer WHERE num_of_shops  >  20"
      }
    ],
    "system": "CREATE TABLE manufacturer (num_of_shops INTEGER, Num_of_Factories INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出其开张年度所订购的所有制造商名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  manufacturer_id FROM manufacturer ORDER BY open_year"
      }
    ],
    "system": "CREATE TABLE manufacturer (manufacturer_id VARCHAR, name VARCHAR, open_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我工厂少于10家或商店多于10家的制造商的名称和开业年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  open_year FROM manufacturer WHERE num_of_shops  >  10 OR Num_of_Factories  <  10"
      }
    ],
    "system": "CREATE TABLE manufacturer (num_of_shops INTEGER, open_year VARCHAR, name VARCHAR, Num_of_Factories INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "工厂的平均数量和1990年前开业的制造商的最大商店数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990"
      }
    ],
    "system": "CREATE TABLE manufacturer (num_of_shops INTEGER, Num_of_Factories INTEGER, open_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找生产最贵家具的公司的id和商店的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE manufacturer (manufacturer_id VARCHAR, num_of_shops VARCHAR), CREATE TABLE furniture_manufacte (manufacturer_id VARCHAR, Price_in_Dollar VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个制造商生产的产品类型以及公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id GROUP BY t1.manufacturer_id"
      }
    ],
    "system": "CREATE TABLE manufacturer (manufacturer_id VARCHAR, name VARCHAR), CREATE TABLE furniture_manufacte (manufacturer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我一些公司制造的家具的名称和价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t2.price_in_dollar FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID"
      }
    ],
    "system": "CREATE TABLE furniture (Furniture_ID VARCHAR, name VARCHAR), CREATE TABLE furniture_manufacte (price_in_dollar VARCHAR, Furniture_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找我们的记录里没有公司正在生产的家具的市场份额和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)"
      }
    ],
    "system": "CREATE TABLE furniture (name VARCHAR, Market_Rate VARCHAR, Furniture_ID VARCHAR), CREATE TABLE furniture_manufacte (name VARCHAR, Market_Rate VARCHAR, Furniture_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请查找生产的家具的部件小于6和多于10的公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  <  6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  >  10"
      }
    ],
    "system": "CREATE TABLE furniture (num_of_component INTEGER, Furniture_ID VARCHAR), CREATE TABLE furniture_manufacte (Furniture_ID VARCHAR, manufacturer_id VARCHAR), CREATE TABLE manufacturer (manufacturer_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个雇员的名字和部门名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
      }
    ],
    "system": "CREATE TABLE employees (first_name VARCHAR, department_id VARCHAR), CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有员工的名字和部门名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
      }
    ],
    "system": "CREATE TABLE employees (first_name VARCHAR, department_id VARCHAR), CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出那些收入低于6000的员工的全名（名字和姓氏）以及薪水。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, salary INTEGER, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于少于6000岁的员工，他们的全名和薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  salary FROM employees WHERE salary  <  6000"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, salary INTEGER, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示姓氏为“何”的所有员工的姓氏和部门号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  '何'"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“何”的员工的姓氏和部门号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  '何'"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有没有任何部门号码的员工的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE department_id  =  \"空\""
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有部门编号的员工是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE department_id  =  \"空\""
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“市场”部的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM  departments WHERE department_name  =  '市场'"
      }
    ],
    "system": "CREATE TABLE departments (department_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“市场”部的所有信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM  departments WHERE department_name  =  '市场'"
      }
    ],
    "system": "CREATE TABLE departments (department_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些名字不包含“男”字的雇员的雇佣日期是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '男'"
      }
    ],
    "system": "CREATE TABLE employees (first_name VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字里没有“男”字的雇员是在什么日期被雇用的？"
      },
      {
        "from": "assistant",
        "value": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '男'"
      }
    ],
    "system": "CREATE TABLE employees (first_name VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示名字不包含“男”字的雇员的全名（名字和姓氏）、雇用日期、工资和部门号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '男'"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR, first_name VARCHAR, salary VARCHAR, hire_date VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中没有“男”字的员工的全名、聘用日期、薪水和部门ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '男'"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR, first_name VARCHAR, salary VARCHAR, hire_date VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示名字不包含“男”字的雇员的全名（姓氏和名字）、雇用日期、工资和部门编号，并将结果按部门编号升序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '男' ORDER BY department_id"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR, first_name VARCHAR, salary VARCHAR, hire_date VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中没有“男”字的员工的全名、雇佣数据、工资和部门ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '男' ORDER BY department_id"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR, first_name VARCHAR, salary VARCHAR, hire_date VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "工资在8000和120000范围内的雇员的电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, phone_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回工资在8000到12000之间的雇员的电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT phone_number FROM employees WHERE salary BETWEEN 8000 AND 12000"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, phone_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示工资在8000到12000范围内且佣金不为“空”或部门编号不等于40的员工的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"空\" OR  department_id != 40"
      }
    ],
    "system": "CREATE TABLE employees (commission_pct VARCHAR, salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有有关工资在8000至12000之间而且佣金不为“空”，或者部门ID不为40的员工的信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE salary BETWEEN 8000 AND 12000 AND commission_pct != \"空\" OR  department_id != 40"
      }
    ],
    "system": "CREATE TABLE employees (commission_pct VARCHAR, salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于那些没有任何佣金的员工，他们的全名（名字和姓氏）和薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"空\""
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, commission_pct VARCHAR, first_name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回佣金为“空”的雇员的全名和工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  salary FROM  employees WHERE commission_pct  =  \"空\""
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, commission_pct VARCHAR, first_name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示名字以字母“明”结尾的雇员的名字和姓氏，以及工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '明'"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回名字以字母“明”结尾的员工的全名和薪水。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '明'"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到在“2007-11-05”和“2009-07-05”之间被雇佣的员工的职位id和雇佣日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“2009-07-05”以后和“2009-07-05”之前雇佣的雇员的职位id和雇佣日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT job_id ,  hire_date FROM employees WHERE hire_date BETWEEN '2007-11-05' AND '2009-07-05'"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在70或90部门工作的员工的名字和姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在部门70或90的员工的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些在经理手下工作的员工的薪水和经理号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"空\""
      }
    ],
    "system": "CREATE TABLE employees (manager_id VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有经理的员工的工资和经理id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"空\""
      }
    ],
    "system": "CREATE TABLE employees (manager_id VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示员工表中在“2002-06-21”之前雇佣的员工的所有细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
      }
    ],
    "system": "CREATE TABLE employees (hire_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“2002-06-21”之前雇用的员工的信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE hire_date  <  '2002-06-21'"
      }
    ],
    "system": "CREATE TABLE employees (hire_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有名字中包含“安”字或“文”的所有员工的所有信息，并将结果按工资降序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE first_name LIKE '安' OR first_name LIKE 'S' ORDER BY salary DESC"
      }
    ],
    "system": "CREATE TABLE employees (first_name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按工资递减顺序排列，名字中包含“安”或“文”的员工有哪些信息？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE first_name LIKE '安' OR first_name LIKE 'S' ORDER BY salary DESC"
      }
    ],
    "system": "CREATE TABLE employees (first_name VARCHAR, salary VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“1987-09-07”后加入的员工。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
      }
    ],
    "system": "CREATE TABLE employees (hire_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“1987-09-07”以后雇佣了哪些员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE hire_date  >  '1987-09-07'"
      }
    ],
    "system": "CREATE TABLE employees (hire_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最低工资大于9000的职位名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT job_title FROM jobs WHERE min_salary  >  9000"
      }
    ],
    "system": "CREATE TABLE jobs (min_salary INTEGER, job_title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些职位对应的薪水超过9000？"
      },
      {
        "from": "assistant",
        "value": "SELECT job_title FROM jobs WHERE min_salary  >  9000"
      }
    ],
    "system": "CREATE TABLE jobs (min_salary INTEGER, job_title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最高工资在1200至1800范围内的职位名称和最低和最高工资之间的差额。"
      },
      {
        "from": "assistant",
        "value": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
      }
    ],
    "system": "CREATE TABLE jobs (min_salary VARCHAR, max_salary INTEGER, job_title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高工资在12000至1800之间的工作名称，以及工资范围是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT job_title ,  max_salary - min_salary FROM jobs WHERE max_salary BETWEEN 12000 AND 18000"
      }
    ],
    "system": "CREATE TABLE jobs (min_salary VARCHAR, max_salary INTEGER, job_title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示那些没有佣金百分比而且薪水在7000-12000范围内并且工作于50号部门的员工的电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT email FROM employees WHERE commission_pct  =  \"空\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
      }
    ],
    "system": "CREATE TABLE employees (email VARCHAR, commission_pct VARCHAR, salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些没有佣金，工资在7000到120000之间，而且在部门50工作的员工的电子邮件是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT email FROM employees WHERE commission_pct  =  \"空\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50"
      }
    ],
    "system": "CREATE TABLE employees (email VARCHAR, commission_pct VARCHAR, salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个雇员的雇员ID和他结束前一份工作的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
      }
    ],
    "system": "CREATE TABLE job_history (end_date INTEGER, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个雇员的雇员id是什么？他们的上一份工作的最后工作日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  MAX(end_date) FROM job_history GROUP BY employee_id"
      }
    ],
    "system": "CREATE TABLE job_history (end_date INTEGER, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示那些有10多名员工工作并获得佣金的部门。"
      },
      {
        "from": "assistant",
        "value": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"
      }
    ],
    "system": "CREATE TABLE employees (commission_pct VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些部门有超过10名拿到佣金的员工，这些部门的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10"
      }
    ],
    "system": "CREATE TABLE employees (commission_pct VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找任何管理4名或更多员工的经理所在部门的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
      }
    ],
    "system": "CREATE TABLE employees (manager_id VARCHAR, department_id VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "管理超过3名员工的经理所在部门的部门id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
      }
    ],
    "system": "CREATE TABLE employees (manager_id VARCHAR, department_id VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个部门获得佣金百分比的雇员的平均工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"空\" GROUP BY department_id"
      }
    ],
    "system": "CREATE TABLE employees (commission_pct VARCHAR, salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "佣金百分比不为零的雇员的平均工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"空\" GROUP BY department_id"
      }
    ],
    "system": "CREATE TABLE employees (commission_pct VARCHAR, salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个国家的城市ID和城市数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"
      }
    ],
    "system": "CREATE TABLE locations (country_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出每个国家的城市ID和相应的城市数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT country_id ,  COUNT(*) FROM locations GROUP BY country_id"
      }
    ],
    "system": "CREATE TABLE locations (country_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有两次或更多次超过300天才完成的作业的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
      }
    ],
    "system": "CREATE TABLE job_history (end_date VARCHAR, start_date VARCHAR, job_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于不止一次超过300天才完成的工作，这些工作的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2"
      }
    ],
    "system": "CREATE TABLE job_history (end_date VARCHAR, start_date VARCHAR, job_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示那些过去做过两个或更多工作的员工id。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
      }
    ],
    "system": "CREATE TABLE job_history (employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "做过两个或更多工作的员工的员工ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
      }
    ],
    "system": "CREATE TABLE job_history (employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到员工的id和目前他正在工作的国家的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR, employee_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_id VARCHAR), CREATE TABLE locations (country_id VARCHAR, location_id VARCHAR), CREATE TABLE countries (country_name VARCHAR, country_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有员工的id和他们工作的国家的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR, employee_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_id VARCHAR), CREATE TABLE locations (country_id VARCHAR, location_id VARCHAR), CREATE TABLE countries (country_name VARCHAR, country_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示部门名称和每个部门的员工人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR), CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出每个部门的名称和部门中员工的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR), CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "你能返回目前工资在120000及以上的员工所从事的工作的详细信息吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"
      }
    ],
    "system": "CREATE TABLE job_history (employee_id VARCHAR), CREATE TABLE employees (salary INTEGER, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "由工资高于或等于12000的员工完成的工作的历史信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000"
      }
    ],
    "system": "CREATE TABLE job_history (employee_id VARCHAR), CREATE TABLE employees (salary INTEGER, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示员工的职称和平均工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR), CREATE TABLE jobs (job_id VARCHAR, job_title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个职位的平均工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR), CREATE TABLE jobs (job_id VARCHAR, job_title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "工资高于id为163的员工的那些员工的全名（姓、名）是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, salary INTEGER, first_name VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供工资超过id为163号的员工的员工的全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, salary INTEGER, first_name VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个部门的最低工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个部门的最低工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT MIN(salary) ,  department_id FROM employees GROUP BY department_id"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到在所有部门中挣的工资最低的员工的名字、姓氏和部门id。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, salary INTEGER, first_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有部门工资最低的员工的全名和部门id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, salary INTEGER, first_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有挣的工资超过平均工资的员工的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "挣的工资超过平均工资的所有员工的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM employees WHERE salary  >  (SELECT AVG(salary) FROM employees)"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示向“王总”（姓）报告的所有员工的员工id和工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  '王总' )"
      }
    ],
    "system": "CREATE TABLE employees (manager_id VARCHAR, first_name VARCHAR, salary VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "向“王总”报告的员工的id是什么？他们的薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  '王总' )"
      }
    ],
    "system": "CREATE TABLE employees (manager_id VARCHAR, first_name VARCHAR, salary VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找实际分配了一个或多个员工的所有部门的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR), CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有至少一名员工的部门名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR), CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "获取管理部门的员工的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR, employee_id VARCHAR), CREATE TABLE departments (manager_id VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于管理人员的所有信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT * FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T1.employee_id  =  T2.manager_id"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR, employee_id VARCHAR), CREATE TABLE departments (manager_id VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“市场”部门的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM  departments WHERE department_name  =  '市场'"
      }
    ],
    "system": "CREATE TABLE departments (department_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“市场”部的所有信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM  departments WHERE department_name  =  '市场'"
      }
    ],
    "system": "CREATE TABLE departments (department_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示之前做过两份或更多工作的员工的id。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
      }
    ],
    "system": "CREATE TABLE job_history (employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些有过两个或更多工作的员工的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2"
      }
    ],
    "system": "CREATE TABLE job_history (employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "任何管理4名或4名以上员工的经理所在的部门的唯一id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
      }
    ],
    "system": "CREATE TABLE employees (manager_id VARCHAR, department_id VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出负责4个或更多员工的经理所在的部门的不同部门ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT department_id FROM employees GROUP BY department_id ,  manager_id HAVING COUNT(employee_id)  >= 4"
      }
    ],
    "system": "CREATE TABLE employees (manager_id VARCHAR, department_id VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到平均工资在8000以上的职位的职位ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, job_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均工资在8000以上的工作对应的工作ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT job_id FROM employees GROUP BY job_id HAVING AVG(salary) > 8000"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, job_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示部门80中所有职位的员工ID和职位名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR, employee_id VARCHAR, department_id VARCHAR), CREATE TABLE jobs (job_id VARCHAR, job_title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "部门80的员工ID和职称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR, employee_id VARCHAR, department_id VARCHAR), CREATE TABLE jobs (job_id VARCHAR, job_title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“财务”部门所有员工的名字和职位ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  '财务'"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR, first_name VARCHAR, department_id VARCHAR), CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出“财务”部的所有员工的名字和职位ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  '财务'"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR, first_name VARCHAR, department_id VARCHAR), CREATE TABLE departments (department_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "如果员工的工资在最低工资至2500的范围内，那么显示他们的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于工资高于最低限度而且低于2500的员工，他们的所有信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE salary BETWEEN (SELECT MIN(salary) FROM employees) AND 2500"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不在某些部门工作的员工的id，这些部门的经理的id在100和200范围内。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"
      }
    ],
    "system": "CREATE TABLE employees (manager_id INTEGER, department_id VARCHAR), CREATE TABLE departments (manager_id INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于不在部门经理ID在100-200之间的那些部门工作的员工，他们的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)"
      }
    ],
    "system": "CREATE TABLE employees (manager_id INTEGER, department_id VARCHAR), CREATE TABLE departments (manager_id INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有和“明明”在同一个部门工作的员工的姓名（名字和姓氏）以及聘用日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"明明\")"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, department_id VARCHAR, first_name VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "同一个姓克拉拉的员工的全名和聘用日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"明明\")"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, department_id VARCHAR, first_name VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与名字是“明明”的同事在同一个部门但不包括“明明”的其它雇员的全名（名字和姓氏）和雇用日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"明明\") AND first_name != \"明明\""
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, department_id VARCHAR, first_name VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与名字是“明明”的同事在同一个部门但不包括“明明”的其它雇员的全名和雇用日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  ( SELECT department_id FROM employees WHERE first_name  =  \"明明\") AND first_name != \"明明\""
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, department_id VARCHAR, first_name VARCHAR, hire_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与名字中包含汉字“T”的雇员在同一部门工作的员工的id和全名（名字和姓氏）。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '洋' )"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, employee_id VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与名字中包含汉字“洋”的雇员在同一部门工作的员工的id和全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  first_name ,  last_name FROM employees WHERE department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '洋' )"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, employee_id VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与名字中包含汉字“江”的雇员在同一部门工作且工资高于平均工资的员工的id、全名（名字和姓氏）和工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '江')"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, first_name VARCHAR, employee_id VARCHAR, department_id VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与名字中包含汉字“江”的雇员在同一部门工作且工资高于平均工资的员工的id、全名（名字和姓氏）和工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '江')"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, first_name VARCHAR, employee_id VARCHAR, department_id VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有工资低于工作职称是“机械工人”的员工工资的所有员工的雇员id和工作ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  '机械工人' )"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, job_id VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有工资低于工作职称是“机械工人”的员工工资的所有员工的雇员id和工作ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  '机械工人' )"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, job_id VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有工资金额高于“工程师”职称的员工工资的所有雇员的员工id、姓名（名字和姓氏）和职称。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  '工程师' )"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR, salary INTEGER, first_name VARCHAR, employee_id VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有工资金额高于“工程师”职称的员工工资的雇员的员工ID、全名和工作ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  '工程师' )"
      }
    ],
    "system": "CREATE TABLE employees (job_id VARCHAR, salary INTEGER, first_name VARCHAR, employee_id VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示包含至少两个员工的部门ID和部门总工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含至少两个员工的部门ID和部门总工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE employees (salary INTEGER, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示过去没有工作过的员工的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"
      }
    ],
    "system": "CREATE TABLE employees (employee_id VARCHAR), CREATE TABLE job_history (employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "过去从未工作过的员工的所有信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)"
      }
    ],
    "system": "CREATE TABLE employees (employee_id VARCHAR), CREATE TABLE job_history (employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示部门ID、全名（名字和姓氏）、每个部门中工资最高的员工的工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, salary INTEGER, first_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "部门ID、全名和每个部门中工资最高的员工的工资是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,   last_name ,   salary ,  department_id ,  MAX(salary) FROM employees GROUP BY department_id"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, salary INTEGER, first_name VARCHAR, department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个员工的名字和姓氏、部门、城市和省。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, department_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_name VARCHAR, department_id VARCHAR), CREATE TABLE locations (state_province VARCHAR, location_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个雇员的全名、部门、城市和所在省份是那些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, department_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_name VARCHAR, department_id VARCHAR), CREATE TABLE locations (state_province VARCHAR, location_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示那些包含汉字“文”的员工的名字，姓氏和所在的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '文'"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, department_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_id VARCHAR), CREATE TABLE locations (location_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中包含汉字“文”的员工的全名和所在的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '文'"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, department_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_id VARCHAR), CREATE TABLE locations (location_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示各部门的部门名称、城市和所在省份。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
      }
    ],
    "system": "CREATE TABLE departments (location_id VARCHAR, department_name VARCHAR), CREATE TABLE locations (state_province VARCHAR, location_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个部门的部门名称、城市和所在省份都有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.department_name ,  T2.city ,  T2.state_province FROM departments AS T1 JOIN locations AS T2 ON T2.location_id  =  T1.location_id"
      }
    ],
    "system": "CREATE TABLE departments (location_id VARCHAR, department_name VARCHAR), CREATE TABLE locations (state_province VARCHAR, location_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示员工的全名（姓名和姓氏），ID和当前工作所在国家的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, employee_id VARCHAR, department_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_id VARCHAR), CREATE TABLE locations (country_id VARCHAR, location_id VARCHAR), CREATE TABLE countries (country_name VARCHAR, country_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个雇员的全名、id和他们工作所在国家的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id"
      }
    ],
    "system": "CREATE TABLE employees (last_name VARCHAR, first_name VARCHAR, employee_id VARCHAR, department_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_id VARCHAR), CREATE TABLE locations (country_id VARCHAR, location_id VARCHAR), CREATE TABLE countries (country_name VARCHAR, country_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个部门的部门名称和员工人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR), CREATE TABLE departments (department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个部门的部门名称和每个部门对应的员工人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR), CREATE TABLE departments (department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在“北京”工作的员工的全名（名字和姓氏）和薪水。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  '北京'"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_id VARCHAR), CREATE TABLE locations (location_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“北京”工作的员工的全名和薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  '北京'"
      }
    ],
    "system": "CREATE TABLE employees (department_id VARCHAR), CREATE TABLE departments (location_id VARCHAR, department_id VARCHAR), CREATE TABLE locations (location_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近一年发行的歌叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, releasedate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近发行的那首歌叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, releasedate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长的歌的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE files (duration VARCHAR, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最长的歌曲的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE files (duration VARCHAR, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有“英文”歌曲的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song WHERE languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“英文”歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song WHERE languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "格式为“MP3”的歌曲的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM files WHERE formats  =  \"mp3\""
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“MP3”格式的所有文件的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM files WHERE formats  =  \"mp3\""
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有评分在9以上的歌曲的歌手的姓名和原籍国。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (rating INTEGER, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有评分在9以上的歌曲的歌手的姓名和原籍国是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.rating  >  9"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (rating INTEGER, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有分辨率低于800的歌曲的文件大小和格式。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800"
      }
    ],
    "system": "CREATE TABLE files (file_size VARCHAR, f_id VARCHAR, formats VARCHAR), CREATE TABLE song (resolution INTEGER, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "分辨率低于800的所有歌曲的文件大小和格式是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800"
      }
    ],
    "system": "CREATE TABLE files (file_size VARCHAR, f_id VARCHAR, formats VARCHAR), CREATE TABLE song (resolution INTEGER, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制作最短歌曲的艺术家叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1"
      }
    ],
    "system": "CREATE TABLE song (f_id VARCHAR, artist_name VARCHAR), CREATE TABLE files (duration VARCHAR, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演唱最短歌曲的艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name FROM song AS T1 JOIN files AS T2 ON T1.f_id  =  T2.f_id ORDER BY T2.duration LIMIT 1"
      }
    ],
    "system": "CREATE TABLE song (f_id VARCHAR, artist_name VARCHAR), CREATE TABLE files (duration VARCHAR, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制作评分最高的三首歌曲的艺术家的名字和原籍国是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (rating VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演唱三大最受欢迎歌曲的歌手的名字是什么？他们来自哪个国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.rating DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (rating VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少歌曲有“4”分钟的持续时间？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""
      }
    ],
    "system": "CREATE TABLE files (duration VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "能持续约“4”分钟的歌曲的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\""
      }
    ],
    "system": "CREATE TABLE files (duration VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少艺术家来自“孟加拉国”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM artist WHERE country  =  \"孟加拉国\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少“孟加拉国”的艺术家在表中？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM artist WHERE country  =  \"孟加拉国\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“女性”艺人创作的歌曲平均评级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"女\""
      }
    ],
    "system": "CREATE TABLE artist (gender VARCHAR, artist_name VARCHAR), CREATE TABLE song (artist_name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“女性”歌手演唱的平均歌曲数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.rating) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"女\""
      }
    ],
    "system": "CREATE TABLE artist (gender VARCHAR, artist_name VARCHAR), CREATE TABLE song (artist_name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是最流行的文件格式？"
      },
      {
        "from": "assistant",
        "value": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE files (formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到大多数文件使用的文件格式。"
      },
      {
        "from": "assistant",
        "value": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE files (formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出来自“英国”并制作了“英文”歌曲的艺术家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT artist_name FROM artist WHERE country  =  \"英国\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, languages VARCHAR, artist_name VARCHAR), CREATE TABLE song (country VARCHAR, languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“英国”且用“英文”唱歌的艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT artist_name FROM artist WHERE country  =  \"英国\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, languages VARCHAR, artist_name VARCHAR), CREATE TABLE song (country VARCHAR, languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出可用“mp4”格式且分辨率低于1000的歌曲的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000"
      }
    ],
    "system": "CREATE TABLE files (resolution INTEGER, f_id VARCHAR, formats VARCHAR), CREATE TABLE song (resolution INTEGER, f_id VARCHAR, formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可用“mp4”格式且分辨率低于1000的歌曲的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000"
      }
    ],
    "system": "CREATE TABLE files (resolution INTEGER, f_id VARCHAR, formats VARCHAR), CREATE TABLE song (resolution INTEGER, f_id VARCHAR, formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用“孟加拉语”创作的“女性”艺术家的原籍国是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"女\" AND T2.languages  =  \"孟加拉语\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR, gender VARCHAR), CREATE TABLE song (languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“孟加拉语”创作的“女性”艺术家来自哪个国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"女\" AND T2.languages  =  \"孟加拉语\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR, gender VARCHAR), CREATE TABLE song (languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "格式为“mp3”且分辨率低于800的歌曲的平均持续时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, formats VARCHAR, duration INTEGER), CREATE TABLE song (resolution INTEGER, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“mp3”格式且分辨率低于800的所有歌曲的平均歌曲持续时间是多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800"
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, formats VARCHAR, duration INTEGER), CREATE TABLE song (resolution INTEGER, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个性别的艺术家数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  gender FROM artist GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE artist (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少艺术家是男性，有多少艺术家是女性？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  gender FROM artist GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE artist (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种语言的歌曲的平均评分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(rating) ,  languages FROM song GROUP BY languages"
      }
    ],
    "system": "CREATE TABLE song (languages VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种语言的平均歌曲评分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(rating) ,  languages FROM song GROUP BY languages"
      }
    ],
    "system": "CREATE TABLE song (languages VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回制作分辨率最低的歌曲的艺术家的性别和姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1"
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR, gender VARCHAR), CREATE TABLE song (resolution VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制作分辨率最低的歌曲的艺术家的性别和姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1"
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR, gender VARCHAR), CREATE TABLE song (resolution VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个文件格式，返回以该格式发布歌曲的艺术家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  formats FROM files GROUP BY formats"
      }
    ],
    "system": "CREATE TABLE files (formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种不同的音乐格式发行了多少首歌？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  formats FROM files GROUP BY formats"
      }
    ],
    "system": "CREATE TABLE files (formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有比“英文”歌曲分辨率更高的歌曲的不同名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"英文\")"
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, song_name VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于分辨率高于“英文”歌曲的所有不同歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"英文\")"
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, song_name VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "评价比“蓝调”风格的歌曲低的歌曲名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"蓝调\")"
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, genre_is VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比至少一首“蓝调”歌曲的评级低的歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"蓝调\")"
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, genre_is VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发行了一首标题中包含“爱”字的歌曲的艺术家的名字和原籍国是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"爱\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (song_name VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发行了一首名为“爱”的歌曲的艺术家叫什么名字？这些艺术家来自哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"爱\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (song_name VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出在“三月”发布歌曲的所有艺人的姓名和性别。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"三月\""
      }
    ],
    "system": "CREATE TABLE artist (gender VARCHAR, artist_name VARCHAR), CREATE TABLE song (releasedate VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“三月”发行歌曲的所有艺术家的姓名和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"三月\""
      }
    ],
    "system": "CREATE TABLE artist (gender VARCHAR, artist_name VARCHAR), CREATE TABLE song (releasedate VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有流派的名称及他们对应的评级。"
      },
      {
        "from": "assistant",
        "value": "SELECT g_name ,  rating FROM genre ORDER BY g_name"
      }
    ],
    "system": "CREATE TABLE genre (rating VARCHAR, g_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的所有流派的名称及其评级是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT g_name ,  rating FROM genre ORDER BY g_name"
      }
    ],
    "system": "CREATE TABLE genre (rating VARCHAR, g_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按分辨率排序列出所有歌曲的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song ORDER BY resolution"
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, resolution VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据他们的分辨率数字列出的歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song ORDER BY resolution"
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, resolution VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些歌曲在“mp4”格式或者分辨率高于720的歌曲中是可用的？列出可用歌曲的id。"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720"
      }
    ],
    "system": "CREATE TABLE files (resolution INTEGER, f_id VARCHAR, formats VARCHAR), CREATE TABLE song (resolution INTEGER, f_id VARCHAR, formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“mp4”格式上或分辨率高于720的所有可用歌曲的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720"
      }
    ],
    "system": "CREATE TABLE files (resolution INTEGER, f_id VARCHAR, formats VARCHAR), CREATE TABLE song (resolution INTEGER, f_id VARCHAR, formats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有有“4”分钟持续时间或语言是“英文”的歌曲的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE files (duration VARCHAR, f_id VARCHAR), CREATE TABLE song (song_name VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "大约“4”分钟长的歌曲或语言是“英文”歌曲的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"4:%\" UNION SELECT song_name FROM song WHERE languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE files (duration VARCHAR, f_id VARCHAR), CREATE TABLE song (song_name VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "歌曲中最常用的语言是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE song (languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在歌曲中最经常被使用的语言是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT languages FROM song GROUP BY languages ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE song (languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在分辨率超过500的歌曲中，最常用的语言是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种语言具有最多数量超过500分辨率的歌曲的歌手叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“英国”的“男”艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT artist_name FROM artist WHERE country  =  \"英国\" AND gender  =  \"男\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“英国”的“男”艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT artist_name FROM artist WHERE country  =  \"英国\" AND gender  =  \"男\""
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出体裁是“现代”的或语言是“英文”的歌曲的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song WHERE genre_is  =  \"现代\" OR languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, genre_is VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "体裁是“现代”的或语言是“英文”的歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song WHERE genre_is  =  \"现代\" OR languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, genre_is VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回格式为“MP3”且分辨率低于1000的歌曲名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000"
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, formats VARCHAR), CREATE TABLE song (resolution INTEGER, song_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“mp3”格式且分辨率低于1000的歌曲的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000"
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, formats VARCHAR), CREATE TABLE song (resolution INTEGER, song_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回来自“英国”并发布一首“英文”歌曲的歌手的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT artist_name FROM artist WHERE country  =  \"英国\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR), CREATE TABLE song (languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有来自“英国”且用“英文”发行歌曲的歌手的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT artist_name FROM artist WHERE country  =  \"英国\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"英文\""
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR), CREATE TABLE song (languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“孟加拉语”歌曲的平均评分和分辨率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"孟加拉语\""
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, languages VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“孟加拉语”歌曲的平均评级和分辨率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"孟加拉语\""
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, languages VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "持续时间为“3”分钟的歌曲的最大分辨率和最小分辨率是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\""
      }
    ],
    "system": "CREATE TABLE files (duration VARCHAR, f_id VARCHAR), CREATE TABLE song (resolution INTEGER, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "大约“3”分钟长的所有歌曲的最大和最小分辨率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\""
      }
    ],
    "system": "CREATE TABLE files (duration VARCHAR, f_id VARCHAR), CREATE TABLE song (resolution INTEGER, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按语言分组和排序的歌曲的最大持续时间和分辨率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages"
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, duration INTEGER), CREATE TABLE song (resolution INTEGER, f_id VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按语言字母顺序排列的每种语言的所有歌曲的最大持续时间和分辨率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages"
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, duration INTEGER), CREATE TABLE song (resolution INTEGER, f_id VARCHAR, languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按体裁分组并排序的歌曲的最短持续时间和最低评级是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is"
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, duration INTEGER), CREATE TABLE song (genre_is VARCHAR, f_id VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按体裁的字母顺序排列的每种体裁最短且评分最低的歌曲是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is"
      }
    ],
    "system": "CREATE TABLE files (f_id VARCHAR, duration INTEGER), CREATE TABLE song (genre_is VARCHAR, f_id VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有至少有一首“英文”歌曲的艺术家的名字和作品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"英文\" GROUP BY T2.artist_name HAVING count(*)  >=  1"
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR), CREATE TABLE song (languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有至少唱过一首“英文”歌曲的艺术家作品的名称和数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"英文\" GROUP BY T2.artist_name HAVING count(*)  >=  1"
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR), CREATE TABLE song (languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有已经发布了900首以上分辨率歌曲的艺术家的名字和原籍国。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (resolution INTEGER, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每位发行了一首分辨率超过900的歌曲的艺术家的名字和原籍国是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.resolution  >  900 GROUP BY T2.artist_name HAVING count(*)  >=  1"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (resolution INTEGER, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出制作歌曲最多的三位艺术家的姓名和作品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR), CREATE TABLE song (artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制作歌曲最多的三位艺术家的名字是什么？他们制作了多少作品？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR), CREATE TABLE song (artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出歌手数量最少的国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制作歌曲最少的艺术家来自于哪个国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, artist_name VARCHAR), CREATE TABLE song (artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些歌曲的评级低于所有“英文”歌曲的评级？"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  '英文')"
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, languages VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "评分低于最低“英文”歌曲的每首歌曲的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  '英文')"
      }
    ],
    "system": "CREATE TABLE song (song_name VARCHAR, languages VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "分辨率高于任何评级低于8的歌曲的分辨率的歌曲的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, f_id VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "高于评级低于8的歌曲的分辨率的所有歌曲的id是多少呢？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)"
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, f_id VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在现代流派中，分辨率高于平均分辨率的歌曲的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"现代\")"
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, genre_is VARCHAR, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“现代”音乐流派中，所有具有高于平均分辨率的歌曲的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"现代\")"
      }
    ],
    "system": "CREATE TABLE song (resolution INTEGER, genre_is VARCHAR, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“孟加拉语”歌曲数量前3多的艺术家。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"孟加拉语\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR), CREATE TABLE song (languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用“孟加拉语”演唱的歌曲数量最多的前三位艺术家有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"孟加拉语\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE artist (artist_name VARCHAR), CREATE TABLE song (languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按评级排序的“英文”歌曲的ID、流派和艺术家名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"英文\" ORDER BY rating"
      }
    ],
    "system": "CREATE TABLE song (rating VARCHAR, f_id VARCHAR, languages VARCHAR, artist_name VARCHAR, genre_is VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按升序排列的每首“英文”歌曲的艺术家的id、风格和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"英文\" ORDER BY rating"
      }
    ],
    "system": "CREATE TABLE song (rating VARCHAR, f_id VARCHAR, languages VARCHAR, artist_name VARCHAR, genre_is VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按标题排序列出“流行”歌曲的持续时间、文件大小和格式。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"流行\" ORDER BY T2.song_name"
      }
    ],
    "system": "CREATE TABLE files (file_size VARCHAR, duration VARCHAR, formats VARCHAR, f_id VARCHAR), CREATE TABLE song (song_name VARCHAR, genre_is VARCHAR, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按标题字母顺序排列的每首“流行”歌曲的持续时间、文件大小和歌曲格式是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"流行\" ORDER BY T2.song_name"
      }
    ],
    "system": "CREATE TABLE files (file_size VARCHAR, duration VARCHAR, formats VARCHAR, f_id VARCHAR), CREATE TABLE song (song_name VARCHAR, genre_is VARCHAR, f_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些制作过“英文”歌曲但从未获得过8级以上的评分的艺术家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"英文\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8"
      }
    ],
    "system": "CREATE TABLE song (rating INTEGER, languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些用“英文”创作了一首歌但从未获得过8级以上评分的不同艺术家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"英文\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8"
      }
    ],
    "system": "CREATE TABLE song (rating INTEGER, languages VARCHAR, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找那些来自“孟加拉国”但从未获得过超过7分评级的艺术家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"孟加拉国\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, rating INTEGER, artist_name VARCHAR), CREATE TABLE song (country VARCHAR, rating INTEGER, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“孟加拉国”但从未获得过高于7级的评级的不同艺术家的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"孟加拉国\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7"
      }
    ],
    "system": "CREATE TABLE artist (country VARCHAR, rating INTEGER, artist_name VARCHAR), CREATE TABLE song (country VARCHAR, rating INTEGER, artist_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有数量最多的棒球运动员的大学的全名和id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE college (name_full VARCHAR, college_id VARCHAR), CREATE TABLE player_college (college_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出拥有最多数量棒球运动员的大学的全名和id。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE college (name_full VARCHAR, college_id VARCHAR), CREATE TABLE player_college (college_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广州恒大队”队员的平均工资是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = '广州恒大队'"
      }
    ],
    "system": "CREATE TABLE salary (salary INTEGER, team_id VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算“广州恒大队”的球员的平均工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = '广州恒大队'"
      }
    ],
    "system": "CREATE TABLE salary (salary INTEGER, team_id VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1998参加全明星赛的球员的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR), CREATE TABLE all_star (player_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出1998年参加全明星赛的球员的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR), CREATE TABLE all_star (player_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最多全明星经验的球员的名字、姓氏、id以及其参加的次数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR), CREATE TABLE all_star (player_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位球员有最多的全明星比赛经验？给出球员的名字，姓氏和id，以及其参与全明星比赛的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR), CREATE TABLE all_star (player_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每年有多少球员进入名人堂？"
      },
      {
        "from": "assistant",
        "value": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;"
      }
    ],
    "system": "CREATE TABLE hall_of_fame (yearid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计每年进入名人堂的球员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT yearid ,  count(*) FROM hall_of_fame GROUP BY yearid;"
      }
    ],
    "system": "CREATE TABLE hall_of_fame (yearid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每年参加国内比赛的平均人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;"
      }
    ],
    "system": "CREATE TABLE home_game (attendance INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每年参加国内比赛的平均人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;"
      }
    ],
    "system": "CREATE TABLE home_game (attendance INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2014年，平均出勤人数最多的团队的id和级别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, team_id VARCHAR, attendance INTEGER), CREATE TABLE team (rank VARCHAR, team_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出2014年平均出勤率最高的团队的id和级别。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, team_id VARCHAR, attendance INTEGER), CREATE TABLE team (rank VARCHAR, team_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "获得经理奖最多的经理的名字、姓氏和id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR), CREATE TABLE manager_award (player_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出赢得了经理奖的经理的名字、姓氏和id。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR), CREATE TABLE manager_award (player_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上海”省有多少公园？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM park WHERE state  =  '上海';"
      }
    ],
    "system": "CREATE TABLE park (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出“上海”省公园的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM park WHERE state  =  '上海';"
      }
    ],
    "system": "CREATE TABLE park (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪3位球员赢得了最多的球员奖？列出他们的全名和id。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR), CREATE TABLE player_award (player_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出获得球员奖次数最多的前三名球员的名字、姓氏和id。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR), CREATE TABLE player_award (player_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出拥有最少数量运动员的三个国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;"
      }
    ],
    "system": "CREATE TABLE player (birth_country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪三个国家拥有最少数量的运动员？"
      },
      {
        "from": "assistant",
        "value": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;"
      }
    ],
    "system": "CREATE TABLE player (birth_country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有死亡记录为空的球员的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT name_first ,  name_last FROM player WHERE death_year = '';"
      }
    ],
    "system": "CREATE TABLE player (name_last VARCHAR, death_year VARCHAR, name_first VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "死亡记录为空的球员的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name_first ,  name_last FROM player WHERE death_year = '';"
      }
    ],
    "system": "CREATE TABLE player (name_last VARCHAR, death_year VARCHAR, name_first VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“中国”出生的运动员有多少是右手击球手？也就是说，击球值是“R”。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM player WHERE birth_country = '中国' AND bats  =  'R';"
      }
    ],
    "system": "CREATE TABLE player (birth_country VARCHAR, bats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算出生在\"中国\"且击球值信息是“R”的球员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM player WHERE birth_country = '中国' AND bats  =  'R';"
      }
    ],
    "system": "CREATE TABLE player (birth_country VARCHAR, bats VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“复旦大学”的运动员的平均身高是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  '复旦大学';"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR, height INTEGER), CREATE TABLE player_college (player_id VARCHAR, college_id VARCHAR), CREATE TABLE college (name_full VARCHAR, college_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“复旦大学”运动员的平均身高。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  '复旦大学';"
      }
    ],
    "system": "CREATE TABLE player (player_id VARCHAR, height INTEGER), CREATE TABLE player_college (player_id VARCHAR, college_id VARCHAR), CREATE TABLE college (name_full VARCHAR, college_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个队的最高工资是多少？列出团队名称、id和最高工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;"
      }
    ],
    "system": "CREATE TABLE team (name VARCHAR, team_id VARCHAR), CREATE TABLE salary (salary INTEGER, team_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个队，返回球队名称、ID和团队中的最高工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.team_id ,  max(T2.salary) FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id;"
      }
    ],
    "system": "CREATE TABLE team (name VARCHAR, team_id VARCHAR), CREATE TABLE salary (salary INTEGER, team_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供最低平均工资的团队的名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE team (name VARCHAR, team_id VARCHAR), CREATE TABLE salary (salary INTEGER, team_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一队提供最低的平均工资？给我这个队的名字和id。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE team (name VARCHAR, team_id VARCHAR), CREATE TABLE salary (salary INTEGER, team_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在1960年和1961年都获奖的球员的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961"
      }
    ],
    "system": "CREATE TABLE player (name_last VARCHAR, name_first VARCHAR), CREATE TABLE player_award (year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位选手在1960和1961都获奖？返回他们的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1960 INTERSECT SELECT T1.name_first , T1.name_last FROM player AS T1 JOIN player_award AS T2 WHERE T2.year  =  1961"
      }
    ],
    "system": "CREATE TABLE player (name_last VARCHAR, name_first VARCHAR), CREATE TABLE player_award (year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出体重大于220或身高小于75的运动员的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75"
      }
    ],
    "system": "CREATE TABLE player (height INTEGER, name_last VARCHAR, weight INTEGER, name_first VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "体重超过220或身高低于75的球员的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name_first ,  name_last FROM player WHERE weight  >  220 OR height  <  75"
      }
    ],
    "system": "CREATE TABLE player (height INTEGER, name_last VARCHAR, weight INTEGER, name_first VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“广州恒大队”在季后赛获胜时的最高得分。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  '广州恒大队';"
      }
    ],
    "system": "CREATE TABLE postseason (team_id_winner VARCHAR, wins INTEGER), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广州恒大队”在季后赛获胜时的最高得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  '广州恒大队';"
      }
    ],
    "system": "CREATE TABLE postseason (team_id_winner VARCHAR, wins INTEGER), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广州恒大队”在2009年的季后赛输了多少次？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' AND T1.year = 2009;"
      }
    ],
    "system": "CREATE TABLE postseason (team_id_loser VARCHAR, year VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算球队“广州恒大队”在2009年季后赛中输掉的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' AND T1.year = 2009;"
      }
    ],
    "system": "CREATE TABLE postseason (team_id_loser VARCHAR, year VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2008赛季季后赛获胜次数最多的球队的名字和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE postseason (year VARCHAR, team_id_winner VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在2008季后赛中赢得最多次数的球队的名字和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE postseason (year VARCHAR, team_id_winner VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "历史上“广州恒大队”在季后赛每年的获胜次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' GROUP BY T1.year"
      }
    ],
    "system": "CREATE TABLE postseason (year VARCHAR, team_id_winner VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每年“广州恒大队”在季后赛每年获胜的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' GROUP BY T1.year"
      }
    ],
    "system": "CREATE TABLE postseason (year VARCHAR, team_id_winner VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广州恒大队”参加的季后赛总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' );"
      }
    ],
    "system": "CREATE TABLE postseason (team_id_loser VARCHAR, team_id_winner VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广州恒大队”总共参加了多少次季后赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ( SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' UNION SELECT * FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_loser  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' );"
      }
    ],
    "system": "CREATE TABLE postseason (team_id_loser VARCHAR, team_id_winner VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1885年的季后赛中，有多少场比赛是打成平局的（也就是说，“平局”的值是“1”）？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;"
      }
    ],
    "system": "CREATE TABLE postseason (ties VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在1885年季后赛中平局游戏的次数（“平局”的值是“1”）。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;"
      }
    ],
    "system": "CREATE TABLE postseason (ties VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年“广州恒大队”的总薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = '广州恒大队' AND T1.year  =  2010"
      }
    ],
    "system": "CREATE TABLE salary (year VARCHAR, salary INTEGER, team_id VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年度“广州恒大队”的对内总薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = '广州恒大队' AND T1.year  =  2010"
      }
    ],
    "system": "CREATE TABLE salary (year VARCHAR, salary INTEGER, team_id VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年“广州恒大队”有多少队员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = '广州恒大队' AND T1.year  =  2000"
      }
    ],
    "system": "CREATE TABLE salary (year VARCHAR, team_id VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广州恒大队”在2000年球员的数量有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = '广州恒大队' AND T1.year  =  2000"
      }
    ],
    "system": "CREATE TABLE salary (year VARCHAR, team_id VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出2001年度球员的3个最高的薪水。"
      },
      {
        "from": "assistant",
        "value": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"
      }
    ],
    "system": "CREATE TABLE salary (salary VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2001年前3名高收益球员的薪水是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;"
      }
    ],
    "system": "CREATE TABLE salary (salary VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年和2001年的球员的工资值是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001"
      }
    ],
    "system": "CREATE TABLE salary (salary VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有在2010和2001球员收到的工资值。"
      },
      {
        "from": "assistant",
        "value": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001"
      }
    ],
    "system": "CREATE TABLE salary (salary VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一年最少的球员进入名人堂？"
      },
      {
        "from": "assistant",
        "value": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE hall_of_fame (yearid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最少球员进入名人堂的年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE hall_of_fame (yearid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长沙”有多少个公园？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM park WHERE city = '长沙';"
      }
    ],
    "system": "CREATE TABLE park (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长沙”市的公园数有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM park WHERE city = '长沙';"
      }
    ],
    "system": "CREATE TABLE park (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1907年在公园“北海公园”有多少场比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = '北海公园';"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, park_id VARCHAR), CREATE TABLE park (park_id VARCHAR, park_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计1907年在公园“北海公园”发生的比赛数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = '北海公园';"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, park_id VARCHAR), CREATE TABLE park (park_id VARCHAR, park_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年在“长沙”市举行了多少比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  '长沙';"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, park_id VARCHAR), CREATE TABLE park (park_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出2000年“长沙”市举办的比赛数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  '长沙';"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, park_id VARCHAR), CREATE TABLE park (park_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从2000年到2010年“广州恒大队”主场的比赛数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' AND T1.year BETWEEN 2000 AND 2010;"
      }
    ],
    "system": "CREATE TABLE home_game (attendance INTEGER, team_id VARCHAR, year INTEGER), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从2000年到2010年，波士顿队的红袜队总共参加了多少场比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  '广州恒大队' AND T1.year BETWEEN 2000 AND 2010;"
      }
    ],
    "system": "CREATE TABLE home_game (attendance INTEGER, team_id VARCHAR, year INTEGER), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1985年到1990年间，这位名字是“文”姓氏是“左”的球员总共赚了多少钱？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  '文' AND T2.name_last = '左' AND T1.year BETWEEN 1985 AND 1990;"
      }
    ],
    "system": "CREATE TABLE salary (player_id VARCHAR, salary INTEGER, year INTEGER), CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算在1985年到1990年间，名字是“文”姓氏是“左”的球员的总工资。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  '文' AND T2.name_last = '左' AND T1.year BETWEEN 1985 AND 1990;"
      }
    ],
    "system": "CREATE TABLE salary (player_id VARCHAR, salary INTEGER, year INTEGER), CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出2005年和2007年从球队“北京人和”得到薪水球员的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = '北京人和' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = '北京人和'"
      }
    ],
    "system": "CREATE TABLE salary (player_id VARCHAR, year VARCHAR, team_id VARCHAR), CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2005年和2007年从球队“北京人和”得到薪水球员的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = '北京人和' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = '北京人和'"
      }
    ],
    "system": "CREATE TABLE salary (player_id VARCHAR, year VARCHAR, team_id VARCHAR), CREATE TABLE player (player_id VARCHAR, name_last VARCHAR, name_first VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从1990年到2000年，“广州恒大队”总共打了几场主场比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = '广州恒大队' AND T1.year BETWEEN 1990 AND 2000;"
      }
    ],
    "system": "CREATE TABLE home_game (games INTEGER, team_id VARCHAR, year INTEGER), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算从1990年到2000年“广州恒大队”参加的比赛总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = '广州恒大队' AND T1.year BETWEEN 1990 AND 2000;"
      }
    ],
    "system": "CREATE TABLE home_game (games INTEGER, team_id VARCHAR, year INTEGER), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪支球队在1980年参加的主场比赛最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, attendance VARCHAR, team_id VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在1980年参加的主场比赛最少的球队。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, attendance VARCHAR, team_id VARCHAR), CREATE TABLE team (name VARCHAR, team_id_br VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出有超过2个公园的省的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;"
      }
    ],
    "system": "CREATE TABLE park (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省有超过2个公园？"
      },
      {
        "from": "assistant",
        "value": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;"
      }
    ],
    "system": "CREATE TABLE park (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少团队的经营权是激活状态的，即活跃值是“Y”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM team_franchise WHERE active = 'Y';"
      }
    ],
    "system": "CREATE TABLE team_franchise (active VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出团队专营权是激活状态的数量（将“Y”作为“激活”信息）。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM team_franchise WHERE active = 'Y';"
      }
    ],
    "system": "CREATE TABLE team_franchise (active VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市有2到4个公园？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;"
      }
    ],
    "system": "CREATE TABLE park (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有有2到4个公园的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;"
      }
    ],
    "system": "CREATE TABLE park (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个公园在2008年餐馆的最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, park_id VARCHAR, attendance VARCHAR), CREATE TABLE park (park_id VARCHAR, park_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2008年参观人数最多的公园是哪一个？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE home_game (year VARCHAR, park_id VARCHAR, attendance VARCHAR), CREATE TABLE park (park_id VARCHAR, park_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少照相机的镜头焦距大于15毫米？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM camera_lens WHERE focal_length_mm  >  15"
      }
    ],
    "system": "CREATE TABLE camera_lens (focal_length_mm INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出按最大光圈的降序排列的每个相机镜头的品牌和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT brand ,  name FROM camera_lens ORDER BY max_aperture DESC"
      }
    ],
    "system": "CREATE TABLE camera_lens (brand VARCHAR, name VARCHAR, max_aperture VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有照片的ID、颜色方案和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT id ,  color ,  name FROM photos"
      }
    ],
    "system": "CREATE TABLE photos (name VARCHAR, id VARCHAR, color VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "山的最大高度和平均高度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(height) ,  avg(height) FROM mountain"
      }
    ],
    "system": "CREATE TABLE mountain (height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“峨眉山”山脉的平均突出度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(prominence) FROM mountain WHERE country  =  '峨眉山'"
      }
    ],
    "system": "CREATE TABLE mountain (prominence INTEGER, country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不属于“长白山脉”的山脉的名称、高度和突出度是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  height ,  prominence FROM mountain WHERE range != '长白山脉'"
      }
    ],
    "system": "CREATE TABLE mountain (range VARCHAR, prominence VARCHAR, name VARCHAR, height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有照片的山的id和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.height  >  4000"
      }
    ],
    "system": "CREATE TABLE mountain (height INTEGER, name VARCHAR, id VARCHAR), CREATE TABLE photos (mountain_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有2张照片的山的id和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id GROUP BY T1.id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE mountain (name VARCHAR, id VARCHAR), CREATE TABLE photos (mountain_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拍摄了最多山脉的照相机的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE photos (camera_lens_id VARCHAR), CREATE TABLE camera_lens (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "镜头品牌为“尼康”或“奥林巴斯”拍摄的照片名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  '尼康' OR T1.brand  =  '奥林巴斯'"
      }
    ],
    "system": "CREATE TABLE camera_lens (brand VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE photos (camera_lens_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的镜片品牌？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT brand) FROM camera_lens"
      }
    ],
    "system": "CREATE TABLE camera_lens (brand VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拍摄照片时没有使用的镜头数有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )"
      }
    ],
    "system": "CREATE TABLE camera_lens (id VARCHAR, camera_lens_id VARCHAR), CREATE TABLE photos (id VARCHAR, camera_lens_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的相机镜头被用来拍摄“华山”的山脉？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  '华山'"
      }
    ],
    "system": "CREATE TABLE mountain (country VARCHAR, id VARCHAR), CREATE TABLE photos (mountain_id VARCHAR, camera_lens_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出那些拍摄“青藏高原”区域照片和拍摄“泰山”区域山峰的照片的镜头品牌"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  '青藏高原' INTERSECT SELECT T3.brand FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T1.range  =  '泰山'"
      }
    ],
    "system": "CREATE TABLE mountain (range VARCHAR, id VARCHAR), CREATE TABLE photos (mountain_id VARCHAR, camera_lens_id VARCHAR), CREATE TABLE camera_lens (brand VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示那些没有被“尼康”品牌的镜头拍摄的山脉的名字和突出度。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  prominence FROM mountain EXCEPT SELECT T1.name ,  T1.prominence FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id JOIN camera_lens AS T3 ON T2.camera_lens_id  =  T3.id WHERE T3.brand  =  '尼康'"
      }
    ],
    "system": "CREATE TABLE mountain (prominence VARCHAR, name VARCHAR, id VARCHAR), CREATE TABLE photos (mountain_id VARCHAR, camera_lens_id VARCHAR), CREATE TABLE camera_lens (brand VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出包含“数码”子字符串的相机镜头的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM camera_lens WHERE name LIKE \"数码\""
      }
    ],
    "system": "CREATE TABLE camera_lens (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据照片的数量排序的每个镜头的名称和用该镜头拍摄照片的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)"
      }
    ],
    "system": "CREATE TABLE camera_lens (id VARCHAR, name VARCHAR), CREATE TABLE photos (camera_lens_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不属于“央视”的频道名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM channel WHERE OWNER != '央视'"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些频道不属于“央视”？返回频道的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM channel WHERE OWNER != '央视'"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按其评级从大到小排序列出所有频道名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM channel ORDER BY rating_in_percent DESC"
      }
    ],
    "system": "CREATE TABLE channel (name VARCHAR, rating_in_percent VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出一个按频道评级降序排序的所有频道名称的列表。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM channel ORDER BY rating_in_percent DESC"
      }
    ],
    "system": "CREATE TABLE channel (name VARCHAR, rating_in_percent VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最高评级比率的频道的所有者是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, rating_in_percent VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我看一个拥有最高评级的频道的所有者。"
      },
      {
        "from": "assistant",
        "value": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, rating_in_percent VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少节目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM program"
      }
    ],
    "system": "CREATE TABLE program (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算节目的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM program"
      }
    ],
    "system": "CREATE TABLE program (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按启动时间排序列出所有的节目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM program ORDER BY launch"
      }
    ],
    "system": "CREATE TABLE program (launch VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按启动日期顺序排列的节目名称列表是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM program ORDER BY launch"
      }
    ],
    "system": "CREATE TABLE program (launch VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每个节目名称、来源和所有者。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  origin ,  OWNER FROM program"
      }
    ],
    "system": "CREATE TABLE program (OWNER VARCHAR, origin VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个节目的名称、来源和拥有者是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  origin ,  OWNER FROM program"
      }
    ],
    "system": "CREATE TABLE program (OWNER VARCHAR, origin VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最近启动的节目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE program (launch VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近推出了哪个项目？返回节目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM program ORDER BY launch DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE program (launch VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“央视”拥有的所有频道的总百分比。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  '央视'"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, Share_in_percent INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“央视”拥有的所有频道的总份额（占总数的百分比）是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  '央视'"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, Share_in_percent INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“早上”时间播出的频道的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  '早上'"
      }
    ],
    "system": "CREATE TABLE channel (name VARCHAR, channel_id VARCHAR), CREATE TABLE broadcast (time_of_day VARCHAR, channel_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些频道在“早上”时间播出？把频道的名字给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  '早上'"
      }
    ],
    "system": "CREATE TABLE channel (name VARCHAR, channel_id VARCHAR), CREATE TABLE broadcast (time_of_day VARCHAR, channel_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既在“早上”又在“晚上”播出的频道的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  '早上' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  '晚上'"
      }
    ],
    "system": "CREATE TABLE channel (name VARCHAR, channel_id VARCHAR), CREATE TABLE broadcast (time_of_day VARCHAR, channel_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些频道既在“早上”时间又在“晚上”时间播出？把频道的名字给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  '早上' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  '晚上'"
      }
    ],
    "system": "CREATE TABLE channel (name VARCHAR, channel_id VARCHAR), CREATE TABLE broadcast (time_of_day VARCHAR, channel_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一天中每个时间段有多少个节目在播出？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day"
      }
    ],
    "system": "CREATE TABLE broadcast (time_of_day VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算一天中每个时间段播放节目的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  time_of_day FROM broadcast GROUP BY time_of_day"
      }
    ],
    "system": "CREATE TABLE broadcast (time_of_day VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“晚上”时段播放的不同节目的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  '晚上'"
      }
    ],
    "system": "CREATE TABLE broadcast (time_of_day VARCHAR, program_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“晚上”时间播出多少个不同的节目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT program_id) FROM broadcast WHERE time_of_day  =  '晚上'"
      }
    ],
    "system": "CREATE TABLE broadcast (time_of_day VARCHAR, program_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“早上”时段从未播出过的节目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"早上\""
      }
    ],
    "system": "CREATE TABLE program (program_id VARCHAR, name VARCHAR), CREATE TABLE broadcast (Time_of_day VARCHAR, program_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些节目从来不在“早上”时段播出？给我节目的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"早上\""
      }
    ],
    "system": "CREATE TABLE program (program_id VARCHAR, name VARCHAR), CREATE TABLE broadcast (Time_of_day VARCHAR, program_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“早上”时段和“晚上”时段都有节目播出的频道的所有者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"早上\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"晚上\""
      }
    ],
    "system": "CREATE TABLE program (owner VARCHAR, program_id VARCHAR), CREATE TABLE broadcast (Time_of_day VARCHAR, program_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“早上”时段和“晚上”时段都有节目播出的频道的所有者是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"早上\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"晚上\""
      }
    ],
    "system": "CREATE TABLE program (owner VARCHAR, program_id VARCHAR), CREATE TABLE broadcast (Time_of_day VARCHAR, program_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有节目的来源。"
      },
      {
        "from": "assistant",
        "value": "SELECT origin FROM program ORDER BY origin"
      }
    ],
    "system": "CREATE TABLE program (origin VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的节目来源列表是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT origin FROM program ORDER BY origin"
      }
    ],
    "system": "CREATE TABLE program (origin VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同频道所有者的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT OWNER) FROM channel"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同频道所有者的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT OWNER) FROM channel"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找来源不在“北京”的节目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM program WHERE origin != '北京'"
      }
    ],
    "system": "CREATE TABLE program (origin VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些节目的起源不是“北京”？给出节目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM program WHERE origin != '北京'"
      }
    ],
    "system": "CREATE TABLE program (origin VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被“央视”或“湖南卫视”拥有的频道名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM channel WHERE OWNER  =  '央视' OR OWNER  =  '湖南卫视'"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“央视”或“湖南卫视”所拥有的所有频道的名称"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM channel WHERE OWNER  =  '央视' OR OWNER  =  '湖南卫视'"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个频道所有者的总评级比率。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, Rating_in_percent INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个频道所有者的频道总评级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER"
      }
    ],
    "system": "CREATE TABLE channel (OWNER VARCHAR, Rating_in_percent INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出播放最频繁的节目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE program (program_id VARCHAR, name VARCHAR), CREATE TABLE broadcast (program_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个节目的播出最频繁？给出节目的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE program (program_id VARCHAR, name VARCHAR), CREATE TABLE broadcast (program_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一共有多少门课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM COURSES"
      }
    ],
    "system": "CREATE TABLE COURSES (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所提供课程的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM COURSES"
      }
    ],
    "system": "CREATE TABLE COURSES (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“数据库”课程的课程描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT course_description FROM COURSES WHERE course_name  =  \"数据库\""
      }
    ],
    "system": "CREATE TABLE COURSES (course_description VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“数据库”课程的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT course_description FROM COURSES WHERE course_name  =  \"数据库\""
      }
    ],
    "system": "CREATE TABLE COURSES (course_description VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "课程的作者或导师姓名是“琪琪”的地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"琪琪\""
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (personal_name VARCHAR, address_line_1 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回个人名字为“琪琪”的课程作者或导师的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT address_line_1 FROM Course_Authors_and_Tutors WHERE personal_name\t =  \"琪琪\""
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (personal_name VARCHAR, address_line_1 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有课程的作者或导师的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT address_line_1 FROM Course_Authors_and_Tutors"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (address_line_1 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个课程的作者或导师的地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT address_line_1 FROM Course_Authors_and_Tutors"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (address_line_1 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有作者和导师的登录名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (family_name VARCHAR, login_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者和导师的登录名和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT login_name ,  family_name FROM Course_Authors_and_Tutors"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (family_name VARCHAR, login_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有学生的入学日期和完成日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (date_of_enrolment VARCHAR, date_of_completion VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有记录的入学日期和完成日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_enrolment ,  date_of_completion FROM Student_Course_Enrolment"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (date_of_enrolment VARCHAR, date_of_completion VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的学生参加课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出参加课程的不同学生的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT student_id) FROM Student_Course_Enrolment"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生选择上了多少门课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(course_id) FROM Student_Course_Enrolment"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "超出有学生参加的不同课程的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(course_id) FROM Student_Course_Enrolment"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到测试结果为“通过”的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"通过\""
      }
    ],
    "system": "CREATE TABLE Student_Tests_Taken (date_test_taken VARCHAR, test_result VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些测试有“通过”的结果？返回测试时的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_test_taken FROM Student_Tests_Taken WHERE test_result  =  \"通过\""
      }
    ],
    "system": "CREATE TABLE Student_Tests_Taken (date_test_taken VARCHAR, test_result VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少测试的结果是“失败”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"失败\""
      }
    ],
    "system": "CREATE TABLE Student_Tests_Taken (test_result VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算测试结果是“失败”的考试的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Student_Tests_Taken WHERE test_result  =  \"失败\""
      }
    ],
    "system": "CREATE TABLE Student_Tests_Taken (test_result VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏是“睿”的学生的登录名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT login_name FROM Students WHERE family_name  =  \"睿\""
      }
    ],
    "system": "CREATE TABLE Students (family_name VARCHAR, login_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回姓氏为“睿”的学生的登录名。"
      },
      {
        "from": "assistant",
        "value": "SELECT login_name FROM Students WHERE family_name  =  \"睿\""
      }
    ],
    "system": "CREATE TABLE Students (family_name VARCHAR, login_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“龚”或“铭”的学生最近登录的日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"龚\" OR family_name  =  \"铭\""
      }
    ],
    "system": "CREATE TABLE Students (date_of_latest_logon VARCHAR, family_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找姓氏为“龚”或“铭”的学生的最新登录日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"龚\" OR family_name  =  \"铭\""
      }
    ],
    "system": "CREATE TABLE Students (date_of_latest_logon VARCHAR, family_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生的名字中包含有“孙”这个词？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"孙\""
      }
    ],
    "system": "CREATE TABLE Students (personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出学生名字中有“孙”一词的学生数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM Students WHERE personal_name LIKE \"孙\""
      }
    ],
    "system": "CREATE TABLE Students (personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有的科目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT subject_name FROM SUBJECTS"
      }
    ],
    "system": "CREATE TABLE SUBJECTS (subject_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有科目的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT subject_name FROM SUBJECTS"
      }
    ],
    "system": "CREATE TABLE SUBJECTS (subject_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照个人姓名的字母顺序列出所有有关课程作者和导师的信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照个人姓名的字母顺序排列关于课程作者和导师的信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按姓氏的字母顺序列出所有学生的个人姓名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name"
      }
    ],
    "system": "CREATE TABLE Students (personal_name VARCHAR, family_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按姓氏的字母顺序排序的学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT personal_name ,  family_name FROM Students ORDER BY family_name"
      }
    ],
    "system": "CREATE TABLE Students (personal_name VARCHAR, family_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以计数的递减顺序列出每个测试结果及其计数。"
      },
      {
        "from": "assistant",
        "value": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE Student_Tests_Taken (test_result VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个不同的测试结果，找出得到结果的学生的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE Student_Tests_Taken (test_result VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找教授课程名为“高级数据库”的作者的登录名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"高级数据库\""
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, login_name VARCHAR), CREATE TABLE Courses (author_id VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个课程的作者教“高级数据库”课程？给我他或她的登录名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"高级数据库\""
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, login_name VARCHAR), CREATE TABLE Courses (author_id VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找课程名是“操作系统”或“数据结构”的课程作者的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"操作系统\" OR T2.course_name  =  \"数据结构\""
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, address_line_1 VARCHAR), CREATE TABLE Courses (author_id VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "讲授“操作系统”或“数据结构”课程的作者的地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"操作系统\" OR T2.course_name  =  \"数据结构\""
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, address_line_1 VARCHAR), CREATE TABLE Courses (author_id VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找教授最多数量课程的课程作者的个人姓名、姓氏和作者ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, personal_name VARCHAR, family_name VARCHAR), CREATE TABLE Courses (author_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "授课最多课程的作者的个人姓名、姓氏和作者id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, personal_name VARCHAR, family_name VARCHAR), CREATE TABLE Courses (author_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到至少教授两门课程的课程作者的地址和作者ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, address_line_1 VARCHAR), CREATE TABLE Courses (author_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个课程的作者教两个或更多课程？给出他们的地址和作者id。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, address_line_1 VARCHAR), CREATE TABLE Courses (author_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到导师的名字是“志华”的课程的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"志华\""
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, personal_name VARCHAR), CREATE TABLE Courses (author_id VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“志华”的导师教的课程的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.course_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T1.personal_name  =  \"志华\""
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (author_id VARCHAR, personal_name VARCHAR), CREATE TABLE Courses (author_id VARCHAR, course_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找属于“计算机科学”课程的名称和说明。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"计算机科学\""
      }
    ],
    "system": "CREATE TABLE Courses (course_description VARCHAR, course_name VARCHAR, subject_id VARCHAR), CREATE TABLE Subjects (subject_name VARCHAR, subject_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“计算机科学”科目下所有课程的名称和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name ,  T1.course_description FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id WHERE T2.subject_name  =  \"计算机科学\""
      }
    ],
    "system": "CREATE TABLE Courses (course_description VARCHAR, course_name VARCHAR, subject_id VARCHAR), CREATE TABLE Subjects (subject_name VARCHAR, subject_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出课程ID、课程名称和每个科目对应的可用课程数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id"
      }
    ],
    "system": "CREATE TABLE Courses (subject_id VARCHAR), CREATE TABLE Subjects (subject_name VARCHAR, subject_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "课程ID、课程名称和每个科目的可用课程数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id"
      }
    ],
    "system": "CREATE TABLE Courses (subject_id VARCHAR), CREATE TABLE Subjects (subject_name VARCHAR, subject_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出按课程数的升序进行排序的课程ID、课程名称和每个科目的可用课程数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"
      }
    ],
    "system": "CREATE TABLE Courses (subject_id VARCHAR), CREATE TABLE Subjects (subject_name VARCHAR, subject_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按课程计数的升序列出课程ID、课程名称和每个科目可用的课程数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC"
      }
    ],
    "system": "CREATE TABLE Courses (subject_id VARCHAR), CREATE TABLE Subjects (subject_name VARCHAR, subject_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“西班牙语”课程的入学日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"西班牙语\""
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR, date_of_enrolment VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“课程ID、课程名称”课程的入学日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"西班牙语\""
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR, date_of_enrolment VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "招生人数最多的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多人数的学生报名参加哪门课程？给出课程名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "只有1名学生入学的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1"
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出只有一个学生入学的课程名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  =  1"
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "招生人数大于2的课程的课程描述和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_description VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回两个以上学生注册的课程的描述和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_description ,  T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_description VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每门课程的名称和相应的招生人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每门课程的课程名和注册学生的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name"
      }
    ],
    "system": "CREATE TABLE Courses (course_id VARCHAR, course_name VARCHAR), CREATE TABLE Student_Course_Enrolment (course_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有有结果为“通过”的测试的入学日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"通过\""
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (date_of_enrolment VARCHAR, registration_id VARCHAR), CREATE TABLE Student_Tests_Taken (test_result VARCHAR, registration_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出具有“通过”结果的所有测试的注册日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"通过\""
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (date_of_enrolment VARCHAR, registration_id VARCHAR), CREATE TABLE Student_Tests_Taken (test_result VARCHAR, registration_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有测试结果包含“失败”的完成日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"失败\""
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (registration_id VARCHAR, date_of_completion VARCHAR), CREATE TABLE Student_Tests_Taken (test_result VARCHAR, registration_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有“失败”结果的所有测试的完成日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"失败\""
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (registration_id VARCHAR, date_of_completion VARCHAR), CREATE TABLE Student_Tests_Taken (test_result VARCHAR, registration_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出个人姓名为“小天”的学生入学和毕业日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"小天\""
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR, date_of_enrolment VARCHAR, date_of_completion VARCHAR), CREATE TABLE Students (student_id VARCHAR, personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个名字是“小天”的学生是在几号注册完成课程的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"小天\""
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR, date_of_enrolment VARCHAR, date_of_completion VARCHAR), CREATE TABLE Students (student_id VARCHAR, personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出姓氏是“韩”和姓氏是“佳明”的学生的入学和毕业日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"韩\" AND T2.personal_name  =  \"佳明\""
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR, date_of_enrolment VARCHAR, date_of_completion VARCHAR), CREATE TABLE Students (student_id VARCHAR, personal_name VARCHAR, family_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“韩”和姓“佳明”的学生的入学和毕业日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"韩\" AND T2.personal_name  =  \"佳明\""
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR, date_of_enrolment VARCHAR, date_of_completion VARCHAR), CREATE TABLE Students (student_id VARCHAR, personal_name VARCHAR, family_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找注册课程最多的学生的学生ID和登录名"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR), CREATE TABLE Students (student_id VARCHAR, login_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加最多数量课程的学生的id和登录名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR), CREATE TABLE Students (student_id VARCHAR, login_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出至少注册两门课的学生ID和个人姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR), CREATE TABLE Students (student_id VARCHAR, personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个学生至少注册了两门课程？给出学生id和个人姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR), CREATE TABLE Students (student_id VARCHAR, personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最多注册两门课的学生的学生ID和中间名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR), CREATE TABLE Students (middle_name VARCHAR, student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多驻车两门课的学生的id和中间名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2"
      }
    ],
    "system": "CREATE TABLE Student_Course_Enrolment (student_id VARCHAR), CREATE TABLE Students (middle_name VARCHAR, student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不参加任何课程的学生姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id"
      }
    ],
    "system": "CREATE TABLE Students (student_id VARCHAR, personal_name VARCHAR), CREATE TABLE Student_Course_Enrolment (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有参加任何课程的学生姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT personal_name FROM Students EXCEPT SELECT T1.personal_name FROM Students AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.student_id  =  T2.student_id"
      }
    ],
    "system": "CREATE TABLE Students (student_id VARCHAR, personal_name VARCHAR), CREATE TABLE Student_Course_Enrolment (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生没有注册任何课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)"
      }
    ],
    "system": "CREATE TABLE Students (student_id VARCHAR), CREATE TABLE Student_Course_Enrolment (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计没有参加任何课程的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)"
      }
    ],
    "system": "CREATE TABLE Students (student_id VARCHAR), CREATE TABLE Student_Course_Enrolment (student_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找课程作者和学生的共同登录名。"
      },
      {
        "from": "assistant",
        "value": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (login_name VARCHAR), CREATE TABLE Students (login_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既有课程作者又有学生使用的登录名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (login_name VARCHAR), CREATE TABLE Students (login_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到课程作者和学生的共同个人名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (personal_name VARCHAR), CREATE TABLE Students (personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "课程作者和部分学生都使用的个人名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT personal_name FROM Course_Authors_and_Tutors INTERSECT SELECT personal_name FROM Students"
      }
    ],
    "system": "CREATE TABLE Course_Authors_and_Tutors (personal_name VARCHAR), CREATE TABLE Students (personal_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些索赔造成超过2次转让或拥有最高的索赔额？列出索赔的日期和索赔ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )"
      }
    ],
    "system": "CREATE TABLE Claims (Amount_Claimed INTEGER), CREATE TABLE Settlements (Claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出导致两个以上结算或具有最大索赔金额的索赔。返回每个人索赔的日期和索赔的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )"
      }
    ],
    "system": "CREATE TABLE Claims (Amount_Claimed INTEGER), CREATE TABLE Settlements (Claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个客户至少有2个政策，但没有提出任何索赔？列出客户详细信息和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR, Customer_id VARCHAR, customer_id VARCHAR), CREATE TABLE Customer_Policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE Claims (policy_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出有两个或更多的政策，但没有提出任何索赔的客户详细资料和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 EXCEPT SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.customer_id JOIN Claims AS T3 ON T2.policy_id  =  T3.policy_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR, Customer_id VARCHAR, customer_id VARCHAR), CREATE TABLE Customer_Policies (policy_id VARCHAR, customer_id VARCHAR), CREATE TABLE Claims (policy_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按日期的升序列出所有付款的方法、日期和数额。"
      },
      {
        "from": "assistant",
        "value": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC"
      }
    ],
    "system": "CREATE TABLE Payments (Payment_Method_Code VARCHAR, Amount_Payment VARCHAR, Date_Payment_Made VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按日期升序排序的每个付款的方法、日期和金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Payment_Method_Code ,  Date_Payment_Made ,  Amount_Payment FROM Payments ORDER BY Date_Payment_Made ASC"
      }
    ],
    "system": "CREATE TABLE Payments (Payment_Method_Code VARCHAR, Amount_Payment VARCHAR, Date_Payment_Made VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有索赔中，索赔额最大的索赔的清算额是多少？列出结算金额和索赔金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (Amount_Settled VARCHAR, Amount_Claimed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到索赔金额最大的清算金额。显示结算金额和索赔金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (Amount_Settled VARCHAR, Amount_Claimed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有索赔中，索赔金额最少的索赔额是多少？列出结算金额和索赔金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (Amount_Settled VARCHAR, Amount_Claimed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出索赔金额最小的清算金额。显示结算金额和索赔金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Settled ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (Amount_Settled VARCHAR, Amount_Claimed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有索赔中，哪些索赔的索赔额高于平均索赔额？列出索赔日期和处理日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )"
      }
    ],
    "system": "CREATE TABLE Claims (Date_Claim_Made VARCHAR, Date_Claim_Settled VARCHAR, Amount_Claimed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我所有索赔额高于平均索赔金额的索赔日期和结算日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )"
      }
    ],
    "system": "CREATE TABLE Claims (Date_Claim_Made VARCHAR, Date_Claim_Settled VARCHAR, Amount_Claimed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有的索赔中，哪些结算的索赔额不超过平均值？列出索赔开始日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )"
      }
    ],
    "system": "CREATE TABLE Claims (Date_Claim_Made VARCHAR, Amount_Settled INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回索赔金额不超过平均金额的索赔开始日期"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_Claim_Made FROM Claims WHERE Amount_Settled  <=  ( SELECT avg(Amount_Settled) FROM Claims )"
      }
    ],
    "system": "CREATE TABLE Claims (Date_Claim_Made VARCHAR, Amount_Settled INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个索赔对应多少个结算？列出索赔ID和结算数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id"
      }
    ],
    "system": "CREATE TABLE Claims (claim_id VARCHAR, Claim_id VARCHAR), CREATE TABLE Settlements (claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个索赔对应的结算数量和索赔ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id"
      }
    ],
    "system": "CREATE TABLE Claims (claim_id VARCHAR, Claim_id VARCHAR), CREATE TABLE Settlements (claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种索赔导致最多数量的结算？列出索赔ID、索赔日期和结算数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (claim_id VARCHAR, date_claim_made VARCHAR), CREATE TABLE Settlements (claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出导致最多数量结算的索赔ID、索赔日期和结算数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (claim_id VARCHAR, date_claim_made VARCHAR), CREATE TABLE Settlements (claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在最近的索赔结算日期内，对索赔进行了多少次结算？列出结算次数和索赔ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (claim_id VARCHAR, Date_Claim_Settled VARCHAR), CREATE TABLE Settlements (claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找索赔的ID、为索赔进行的结算次数以及最近的结算日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (claim_id VARCHAR, Date_Claim_Settled VARCHAR), CREATE TABLE Settlements (claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有索赔中，索赔的最早日期是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (Date_Claim_Made VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出第一次索赔的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Claims (Date_Claim_Made VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有清算的总结算金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Amount_Settled) FROM Settlements"
      }
    ],
    "system": "CREATE TABLE Settlements (Amount_Settled INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算所有结算的总结算量。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Amount_Settled) FROM Settlements"
      }
    ],
    "system": "CREATE TABLE Settlements (Amount_Settled INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁有超过1个政策的客户？列出客户详细信息和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR, Customer_id VARCHAR, customer_id VARCHAR), CREATE TABLE Customer_Policies (Customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出具有超过一个政策的客户的详细信息和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR, Customer_id VARCHAR, customer_id VARCHAR), CREATE TABLE Customer_Policies (Customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有结算的索赔日期和结算日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements"
      }
    ],
    "system": "CREATE TABLE Settlements (Date_Claim_Made VARCHAR, Date_Claim_Settled VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "告诉我每个结算案件的索赔日期和结算日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Settlements"
      }
    ],
    "system": "CREATE TABLE Settlements (Date_Claim_Made VARCHAR, Date_Claim_Settled VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是最流行的支付方式？"
      },
      {
        "from": "assistant",
        "value": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Payments (Payment_Method_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种付款方式最常被使用？"
      },
      {
        "from": "assistant",
        "value": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Payments (Payment_Method_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种支付方式处理的付款金额最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Payments (Payment_Method_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最少使用的付款方式是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Payments (Payment_Method_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "付款总额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Amount_Payment) FROM Payments"
      }
    ],
    "system": "CREATE TABLE Payments (Amount_Payment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算处理的付款总额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Amount_Payment) FROM Payments"
      }
    ],
    "system": "CREATE TABLE Payments (Amount_Payment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "顾客的具体细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT customer_details FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回不同的客户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT customer_details FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种政策类型是大多数客户选择的？"
      },
      {
        "from": "assistant",
        "value": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Customer_Policies (Policy_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出大多数客户选择的策略类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Customer_Policies (Policy_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少次清算？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Settlements"
      }
    ],
    "system": "CREATE TABLE Settlements (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算清算次数的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Settlements"
      }
    ],
    "system": "CREATE TABLE Settlements (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些支付是用“信用卡”的？列出付款ID、日期和金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  '信用卡'"
      }
    ],
    "system": "CREATE TABLE Payments (Amount_Payment VARCHAR, Date_Payment_Made VARCHAR, Payment_Method_Code VARCHAR, Payment_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出使用“信用卡”处理的付款id，日期和数额。"
      },
      {
        "from": "assistant",
        "value": "SELECT Payment_ID ,  Date_Payment_Made ,  Amount_Payment FROM Payments WHERE Payment_Method_Code  =  '信用卡'"
      }
    ],
    "system": "CREATE TABLE Payments (Amount_Payment VARCHAR, Date_Payment_Made VARCHAR, Payment_Method_Code VARCHAR, Payment_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有任何政策的客户的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR, customer_id VARCHAR), CREATE TABLE Customer_Policies (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户没有任何政策？找到这些客户的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_details FROM Customers EXCEPT SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.customer_id  =  T2.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR, customer_id VARCHAR), CREATE TABLE Customer_Policies (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出只有一次清算的索赔中的索赔的日期，结算的日期以及所有索赔的清算金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE Claims (claim_id VARCHAR, Date_Claim_Settled VARCHAR, date_claim_made VARCHAR, Claim_id VARCHAR), CREATE TABLE Settlements (Claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "只有一次清算的索赔中的索赔的日期，结算的日期以及所有索赔的清算金额是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE Claims (claim_id VARCHAR, Date_Claim_Settled VARCHAR, date_claim_made VARCHAR, Claim_id VARCHAR), CREATE TABLE Settlements (Claim_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出索赔的总金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Amount_Claimed) FROM Claims"
      }
    ],
    "system": "CREATE TABLE Claims (Amount_Claimed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有索赔中，索赔总额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Amount_Claimed) FROM Claims"
      }
    ],
    "system": "CREATE TABLE Claims (Amount_Claimed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个部门员工的人数最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE department (departmentID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出员工最多的部门。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE department (departmentID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工数最少的部门的领导的员工id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE department (departmentID VARCHAR, head VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出员工数最少的部门的领导的员工id。"
      },
      {
        "from": "assistant",
        "value": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE department (departmentID VARCHAR, head VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工人数最少的部门的负责人的姓名和职位是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE department (head VARCHAR), CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR, position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出雇员最少的部门的负责人的姓名和职位。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE department (head VARCHAR), CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR, position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预约病人的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn"
      }
    ],
    "system": "CREATE TABLE appointment (patient VARCHAR), CREATE TABLE patient (ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出已预约的病人的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn"
      }
    ],
    "system": "CREATE TABLE appointment (patient VARCHAR), CREATE TABLE patient (ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过一次预约的病人的姓名和电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE appointment (patient VARCHAR), CREATE TABLE patient (ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个病人预约不止一次？给出这些病人的姓名和电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE appointment (patient VARCHAR), CREATE TABLE patient (ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到在最近开始日期的预约的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE appointment (appointmentid VARCHAR, START VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近开始的预约的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE appointment (appointmentid VARCHAR, START VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出一些预约医生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
      }
    ],
    "system": "CREATE TABLE appointment (Physician VARCHAR), CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有有预约的医生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
      }
    ],
    "system": "CREATE TABLE appointment (Physician VARCHAR), CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出从来没有任何预约的医生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
      }
    ],
    "system": "CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE appointment (Physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些医生从来没有预约过？找出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM physician EXCEPT SELECT T2.name FROM appointment AS T1 JOIN physician AS T2 ON T1.Physician  =  T2.EmployeeID"
      }
    ],
    "system": "CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE appointment (Physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有医师的姓名及其主要附属部门的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1"
      }
    ],
    "system": "CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE affiliated_with (PrimaryAffiliation VARCHAR, physician VARCHAR, department VARCHAR), CREATE TABLE department (DepartmentID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个医生的名字和主要附属部门的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1"
      }
    ],
    "system": "CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE affiliated_with (PrimaryAffiliation VARCHAR, physician VARCHAR, department VARCHAR), CREATE TABLE department (DepartmentID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近一次预约的病人叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE patient (name VARCHAR, ssn VARCHAR), CREATE TABLE appointment (patient VARCHAR, start VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最近一次预约的病人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE patient (name VARCHAR, ssn VARCHAR), CREATE TABLE appointment (patient VARCHAR, start VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少病人住在112房间？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(patient) FROM stay WHERE room  =  112"
      }
    ],
    "system": "CREATE TABLE stay (room VARCHAR, patient VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计住112房间的病人的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(patient) FROM stay WHERE room  =  112"
      }
    ],
    "system": "CREATE TABLE stay (room VARCHAR, patient VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“王涛”医生开了多少病人处方？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"王涛\""
      }
    ],
    "system": "CREATE TABLE patient (SSN VARCHAR), CREATE TABLE prescribes (physician VARCHAR, patient VARCHAR), CREATE TABLE physician (employeeid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“王涛”医生开的病人的处方数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(T1.SSN) FROM patient AS T1 JOIN prescribes AS T2 ON T1.SSN  =  T2.patient JOIN physician AS T3 ON T2.physician  =  T3.employeeid WHERE T3.name = \"王涛\""
      }
    ],
    "system": "CREATE TABLE patient (SSN VARCHAR), CREATE TABLE prescribes (physician VARCHAR, patient VARCHAR), CREATE TABLE physician (employeeid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在111号病房住院的病人用药的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111"
      }
    ],
    "system": "CREATE TABLE stay (Patient VARCHAR), CREATE TABLE patient (SSN VARCHAR), CREATE TABLE Prescribes (Patient VARCHAR, Medication VARCHAR), CREATE TABLE Medication (Code VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在111房间住的病人使用的药物名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111"
      }
    ],
    "system": "CREATE TABLE stay (Patient VARCHAR), CREATE TABLE patient (SSN VARCHAR), CREATE TABLE Prescribes (Patient VARCHAR, Medication VARCHAR), CREATE TABLE Medication (Code VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最近一次住在111房间的病人。"
      },
      {
        "from": "assistant",
        "value": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stay (room VARCHAR, patient VARCHAR, staystart VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近住在111房间的病人的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stay (room VARCHAR, patient VARCHAR, staystart VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "又最多预约的护士的名字的是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE nurse (employeeid VARCHAR, name VARCHAR), CREATE TABLE appointment (prepnurse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出预约数量最多的护士的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE nurse (employeeid VARCHAR, name VARCHAR), CREATE TABLE appointment (prepnurse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个医生要照顾多少病人？列出他们照顾的病人的姓名和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE patient (PCP VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个医生的名字和他或她治疗的病人的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE patient (PCP VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到负责一个以上病人的医生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE patient (PCP VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个医生负责一个以上的病人？给出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE patient (PCP VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个街区楼层的房间数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor"
      }
    ],
    "system": "CREATE TABLE BLOCK (blockcode VARCHAR, blockfloor VARCHAR), CREATE TABLE room (blockcode VARCHAR, blockfloor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个楼层有多少个房间？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor"
      }
    ],
    "system": "CREATE TABLE BLOCK (blockcode VARCHAR, blockfloor VARCHAR), CREATE TABLE room (blockcode VARCHAR, blockfloor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不同区域代码的房间数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode"
      }
    ],
    "system": "CREATE TABLE BLOCK (blockcode VARCHAR, blockfloor VARCHAR), CREATE TABLE room (blockcode VARCHAR, blockfloor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个区域代码有多少个房间？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode"
      }
    ],
    "system": "CREATE TABLE BLOCK (blockcode VARCHAR, blockfloor VARCHAR), CREATE TABLE room (blockcode VARCHAR, blockfloor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "唯一有可用的房间的区域代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0"
      }
    ],
    "system": "CREATE TABLE room (blockcode VARCHAR, unavailable VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出一些有可用房间的不同的区块代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT blockcode FROM room WHERE unavailable  =  0"
      }
    ],
    "system": "CREATE TABLE room (blockcode VARCHAR, unavailable VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同类型的房间？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT roomtype) FROM room"
      }
    ],
    "system": "CREATE TABLE room (roomtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到可用的不同房间类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT roomtype) FROM room"
      }
    ],
    "system": "CREATE TABLE room (roomtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "开出处方药品“感冒灵”的医生叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"感冒灵\""
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE prescribes (physician VARCHAR, medication VARCHAR), CREATE TABLE medication (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出开出处方药品“感冒灵”的医生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"感冒灵\""
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE prescribes (physician VARCHAR, medication VARCHAR), CREATE TABLE medication (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出开出药物的品牌是“X”的医生的名字和位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\""
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR, position VARCHAR), CREATE TABLE prescribes (physician VARCHAR, medication VARCHAR), CREATE TABLE medication (code VARCHAR, Brand VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些医生开了“X”品牌的药物？给出那些医生的名字和位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\""
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR, position VARCHAR), CREATE TABLE prescribes (physician VARCHAR, medication VARCHAR), CREATE TABLE medication (code VARCHAR, Brand VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每种牌子可开处方的药品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand"
      }
    ],
    "system": "CREATE TABLE medication (brand VARCHAR, name VARCHAR, code VARCHAR), CREATE TABLE prescribes (medication VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个牌子可开处方的药有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM medication AS T1 JOIN prescribes AS T2 ON T1.code = T2.medication GROUP BY T1.brand"
      }
    ],
    "system": "CREATE TABLE medication (brand VARCHAR, name VARCHAR, code VARCHAR), CREATE TABLE prescribes (medication VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出头衔包含“高级”一词的医生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM physician WHERE POSITION LIKE '高级'"
      }
    ],
    "system": "CREATE TABLE physician (POSITION VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "头衔包含“高级”一词的医生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM physician WHERE POSITION LIKE '高级'"
      }
    ],
    "system": "CREATE TABLE physician (POSITION VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最近接受治疗的病人。"
      },
      {
        "from": "assistant",
        "value": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"
      }
    ],
    "system": "CREATE TABLE undergoes (patient VARCHAR, dateundergoes VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个病人最近正在接受最新的治疗？"
      },
      {
        "from": "assistant",
        "value": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1"
      }
    ],
    "system": "CREATE TABLE undergoes (patient VARCHAR, dateundergoes VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有正在接受治疗并住在111号房间的患者的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"
      }
    ],
    "system": "CREATE TABLE undergoes (Stay VARCHAR, patient VARCHAR), CREATE TABLE patient (SSN VARCHAR, name VARCHAR), CREATE TABLE stay (StayID VARCHAR, room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在111号房间并正在接受治疗的病人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111"
      }
    ],
    "system": "CREATE TABLE undergoes (Stay VARCHAR, patient VARCHAR), CREATE TABLE patient (SSN VARCHAR, name VARCHAR), CREATE TABLE stay (StayID VARCHAR, room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按字母顺序排列的所有护士的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM nurse ORDER BY name"
      }
    ],
    "system": "CREATE TABLE nurse (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排序的护士名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM nurse ORDER BY name"
      }
    ],
    "system": "CREATE TABLE nurse (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到护士正在接受治疗的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID"
      }
    ],
    "system": "CREATE TABLE undergoes (AssistingNurse VARCHAR), CREATE TABLE nurse (EmployeeID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些护士负责正在治疗的病人？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN nurse AS T2 ON T1.AssistingNurse  =  T2.EmployeeID"
      }
    ],
    "system": "CREATE TABLE undergoes (AssistingNurse VARCHAR), CREATE TABLE nurse (EmployeeID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有不同药物的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM medication ORDER BY name"
      }
    ],
    "system": "CREATE TABLE medication (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "字母顺序列出的所有不同的药物是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT name FROM medication ORDER BY name"
      }
    ],
    "system": "CREATE TABLE medication (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "处方量最高的医生叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE prescribes (dose VARCHAR, physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找处处方剂量最高的医的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE prescribes (dose VARCHAR, physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出医生的员工id及其主要附属部门的id。"
      },
      {
        "from": "assistant",
        "value": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1"
      }
    ],
    "system": "CREATE TABLE affiliated_with (physician VARCHAR, department VARCHAR, primaryaffiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个医生的员工ID和主要附属部门ID是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT physician ,  department FROM affiliated_with WHERE primaryaffiliation  =  1"
      }
    ],
    "system": "CREATE TABLE affiliated_with (physician VARCHAR, department VARCHAR, primaryaffiliation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出一些医生的主要隶属的部门的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1"
      }
    ],
    "system": "CREATE TABLE affiliated_with (department VARCHAR), CREATE TABLE department (name VARCHAR, departmentid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些医生的主要隶属的部门的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1"
      }
    ],
    "system": "CREATE TABLE affiliated_with (department VARCHAR), CREATE TABLE department (name VARCHAR, departmentid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些护士在1号楼和区域编码是1的位置值班？给出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1"
      }
    ],
    "system": "CREATE TABLE on_call (blockfloor VARCHAR, nurse VARCHAR, blockcode VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在1号楼和区域编码是1的位置值班的护士的id。"
      },
      {
        "from": "assistant",
        "value": "SELECT nurse FROM on_call WHERE blockfloor  =  1 AND blockcode  =  1"
      }
    ],
    "system": "CREATE TABLE on_call (blockfloor VARCHAR, nurse VARCHAR, blockcode VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "手术的最高花费，最低花费和平均花费是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures"
      }
    ],
    "system": "CREATE TABLE procedures (cost INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出手术的最高、最低和平均的花费。"
      },
      {
        "from": "assistant",
        "value": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures"
      }
    ],
    "system": "CREATE TABLE procedures (cost INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按费用从最高到最低排序的所有手术的名称和花费。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  cost FROM procedures ORDER BY cost DESC"
      }
    ],
    "system": "CREATE TABLE procedures (cost VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照费用的降序对所有手术的名称和花费进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  cost FROM procedures ORDER BY cost DESC"
      }
    ],
    "system": "CREATE TABLE procedures (cost VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出三个最昂贵的手术。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM procedures ORDER BY cost LIMIT 3"
      }
    ],
    "system": "CREATE TABLE procedures (cost VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "三个最昂贵的手术是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM procedures ORDER BY cost LIMIT 3"
      }
    ],
    "system": "CREATE TABLE procedures (cost VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些花费5000以上的费用执行手术的医生。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR), CREATE TABLE procedures (cost INTEGER, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些医生花费5000以上的费用才能执行手术？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T3.cost  >  5000"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR), CREATE TABLE procedures (cost INTEGER, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出执行手术最昂贵的医生。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR), CREATE TABLE procedures (cost VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个医生执行过的手术最昂贵。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR), CREATE TABLE procedures (cost VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "医师“文翰”执行手术的平均费用是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR), CREATE TABLE procedures (cost INTEGER, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算医师“文翰”执行手术的平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR), CREATE TABLE procedures (cost INTEGER, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出医师“文翰”执行手术的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR), CREATE TABLE procedures (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "医师“文翰”执行手术的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR), CREATE TABLE procedures (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有花费超过1000英镑的手术或是医师“文翰”执行的手术。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE procedures (name VARCHAR, code VARCHAR), CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有花费超过1000英镑的手术或是医师“文翰”执行的手术有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE procedures (name VARCHAR, code VARCHAR), CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有花费超过1000英镑的手术但不是医师“文翰”执行的手术的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE procedures (name VARCHAR, code VARCHAR), CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有花费超过1000英镑的手术但不是医师“文翰”执行的手术的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE procedures (name VARCHAR, code VARCHAR), CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有花费少于5000英镑的且是医师“文翰”执行的手术。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE procedures (name VARCHAR, code VARCHAR), CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有花费少于5000英镑的且是医师“文翰”执行的手术有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM procedures WHERE cost  <  5000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"文翰\""
      }
    ],
    "system": "CREATE TABLE procedures (name VARCHAR, code VARCHAR), CREATE TABLE physician (employeeid VARCHAR, name VARCHAR), CREATE TABLE trained_in (treatment VARCHAR, physician VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找既属于“外科”科又属于“精神科”科的医生的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  '外科' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  '精神科'"
      }
    ],
    "system": "CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE affiliated_with (physician VARCHAR, department VARCHAR), CREATE TABLE department (DepartmentID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些医生隶属于“外科”科又属于“精神科”科？给出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  '外科' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  '精神科'"
      }
    ],
    "system": "CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE affiliated_with (physician VARCHAR, department VARCHAR), CREATE TABLE department (DepartmentID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找属于“外科”科或属于“精神科”科的医师的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  '外科' OR T3.name  =  '精神科'"
      }
    ],
    "system": "CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE affiliated_with (physician VARCHAR, department VARCHAR), CREATE TABLE department (DepartmentID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些医生隶“外科”科或属于“精神科”科？给出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  '外科' OR T3.name  =  '精神科'"
      }
    ],
    "system": "CREATE TABLE physician (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE affiliated_with (physician VARCHAR, department VARCHAR), CREATE TABLE department (DepartmentID VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不使用“扑热息痛”的患者的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  '扑热息痛'"
      }
    ],
    "system": "CREATE TABLE patient (SSN VARCHAR, name VARCHAR), CREATE TABLE Prescribes (Patient VARCHAR, Medication VARCHAR), CREATE TABLE Medication (Code VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些没有服用“扑热息痛”的患者的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM patient EXCEPT SELECT T1.name FROM patient AS T1 JOIN Prescribes AS T2 ON T2.Patient  =  T1.SSN JOIN Medication AS T3 ON T2.Medication  =  T3.Code WHERE T3.name  =  '扑热息痛'"
      }
    ],
    "system": "CREATE TABLE patient (SSN VARCHAR, name VARCHAR), CREATE TABLE Prescribes (Patient VARCHAR, Medication VARCHAR), CREATE TABLE Medication (Code VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到不使用“扑热息痛”药物的患者的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  '扑热息痛' )"
      }
    ],
    "system": "CREATE TABLE patient (SSN VARCHAR), CREATE TABLE Prescribes (patient VARCHAR, Medication VARCHAR), CREATE TABLE Medication (Code VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少患者不使用“扑热息痛”作为药物？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  '扑热息痛' )"
      }
    ],
    "system": "CREATE TABLE patient (SSN VARCHAR), CREATE TABLE Prescribes (patient VARCHAR, Medication VARCHAR), CREATE TABLE Medication (Code VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一共有多少预约？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM appointment"
      }
    ],
    "system": "CREATE TABLE appointment (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算总共有多少预约。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM appointment"
      }
    ],
    "system": "CREATE TABLE appointment (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些随时值班的护士的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse"
      }
    ],
    "system": "CREATE TABLE nurse (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE on_call (nurse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "随时值班的不同护士的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM nurse AS T1 JOIN on_call AS T2 ON T1.EmployeeID  =  T2.nurse"
      }
    ],
    "system": "CREATE TABLE nurse (EmployeeID VARCHAR, name VARCHAR), CREATE TABLE on_call (nurse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少艘船？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ship"
      }
    ],
    "system": "CREATE TABLE ship (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "船的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ship"
      }
    ],
    "system": "CREATE TABLE ship (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以吨位升序列出船舶名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship ORDER BY Tonnage ASC"
      }
    ],
    "system": "CREATE TABLE ship (Tonnage VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以吨位升序的船舶名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship ORDER BY Tonnage ASC"
      }
    ],
    "system": "CREATE TABLE ship (Tonnage VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "船舶的类型和国籍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  Nationality FROM ship"
      }
    ],
    "system": "CREATE TABLE ship (Nationality VARCHAR, TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每艘船的种类和国籍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  Nationality FROM ship"
      }
    ],
    "system": "CREATE TABLE ship (Nationality VARCHAR, TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出国籍不是“美国”的船舶的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship WHERE Nationality != \"美国\""
      }
    ],
    "system": "CREATE TABLE ship (Nationality VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些不是来自“美国”的船的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship WHERE Nationality != \"美国\""
      }
    ],
    "system": "CREATE TABLE ship (Nationality VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示其国籍为“美国”或“英国”的船舶的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship WHERE Nationality  =  \"美国\" OR Nationality  =  \"英国\""
      }
    ],
    "system": "CREATE TABLE ship (Nationality VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“美国”或“英国”来的船的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship WHERE Nationality  =  \"美国\" OR Nationality  =  \"英国\""
      }
    ],
    "system": "CREATE TABLE ship (Nationality VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大吨位的船叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (Tonnage VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大吨位的船的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (Tonnage VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同船舶的类型和每种类型的船舶数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE"
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种类型有多少艘船？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  COUNT(*) FROM ship GROUP BY TYPE"
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请展示最常见的船只类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最常见的船舶类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出拥有两艘船以上的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE ship (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有多于两艘船的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE ship (Nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同类型的船舶和每种类型船舶的平均吨位。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE"
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR, Tonnage INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每种类型，平均吨位是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  avg(Tonnage) FROM ship GROUP BY TYPE"
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR, Tonnage INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示任务的代码和命运，以及涉及的船只的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"
      }
    ],
    "system": "CREATE TABLE mission (Fate VARCHAR, Code VARCHAR, Ship_ID VARCHAR), CREATE TABLE ship (Ship_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "涉及的船舶的任务代码、命运和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID"
      }
    ],
    "system": "CREATE TABLE mission (Fate VARCHAR, Code VARCHAR, Ship_ID VARCHAR), CREATE TABLE ship (Ship_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示在1928年后执行任务的船只名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928"
      }
    ],
    "system": "CREATE TABLE mission (Launched_Year INTEGER, Ship_ID VARCHAR), CREATE TABLE ship (Ship_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1928号涉及任务的船只名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928"
      }
    ],
    "system": "CREATE TABLE mission (Launched_Year INTEGER, Ship_ID VARCHAR), CREATE TABLE ship (Ship_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“美国”国籍的船只执行任务的不同命运"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"美国\""
      }
    ],
    "system": "CREATE TABLE mission (Fate VARCHAR, Ship_ID VARCHAR), CREATE TABLE ship (Nationality VARCHAR, Ship_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“美国”的船只参与这次任务的不同命运是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"美国\""
      }
    ],
    "system": "CREATE TABLE mission (Fate VARCHAR, Ship_ID VARCHAR), CREATE TABLE ship (Nationality VARCHAR, Ship_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有参与任何任务的船只的名称"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)"
      }
    ],
    "system": "CREATE TABLE ship (Ship_ID VARCHAR, Name VARCHAR), CREATE TABLE mission (Ship_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不参与任何任务的船只的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)"
      }
    ],
    "system": "CREATE TABLE ship (Ship_ID VARCHAR, Name VARCHAR), CREATE TABLE mission (Ship_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示既有吨位大于6000的船舶又有吨位小于4000的船舶的船舶类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000"
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR, Tonnage INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既有吨位大于6000的船舶又有吨位小于4000的船舶的船舶类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000"
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR, Tonnage INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list"
      }
    ],
    "system": "CREATE TABLE list (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那儿有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list"
      }
    ],
    "system": "CREATE TABLE list (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找111号房学生的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT lastname FROM list WHERE classroom  =  111"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在111号房的学生姓什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lastname FROM list WHERE classroom  =  111"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在108教室学习的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT firstname FROM list WHERE classroom  =  108"
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "108号房的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT firstname FROM list WHERE classroom  =  108"
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "107号房的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107"
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出107号房里所有学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT firstname FROM list WHERE classroom  =  107"
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个教室中教学的年级，返回教室名称和年级名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT classroom ,  grade FROM list"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名单上每一个班的年级号和教室号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT classroom ,  grade FROM list"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个年级在103教室学习？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在103教师学习的年纪。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT grade FROM list WHERE classroom  =  103"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在105教室学习的年纪。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT grade FROM list WHERE classroom  =  105"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个年级在105号房间学习？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT grade FROM list WHERE classroom  =  105"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "4年级使用哪些教室？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出4年级正在学习的教室。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT classroom FROM list WHERE grade  =  4"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "5年级使用哪些教室？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出5年级正在使用的教室。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT classroom FROM list WHERE grade  =  5"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教五年级的老师的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教5年级的老师的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教一年级的老师的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教1年级的老师的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  1"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在110教室教课的所有老师的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT firstname FROM teachers WHERE classroom  =  110"
      }
    ],
    "system": "CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些教师在110教室教学？给出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT firstname FROM teachers WHERE classroom  =  110"
      }
    ],
    "system": "CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在109教室教学的教师的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT lastname FROM teachers WHERE classroom  =  109"
      }
    ],
    "system": "CREATE TABLE teachers (classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些教师在109教室教学？给出他们的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT lastname FROM teachers WHERE classroom  =  109"
      }
    ],
    "system": "CREATE TABLE teachers (classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有教师的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT firstname ,  lastname FROM teachers"
      }
    ],
    "system": "CREATE TABLE teachers (firstname VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有老师的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT firstname ,  lastname FROM teachers"
      }
    ],
    "system": "CREATE TABLE teachers (firstname VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT firstname ,  lastname FROM list"
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT firstname ,  lastname FROM list"
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出由“张”“亮”教授的所有学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"张\" AND T2.lastname  =  \"亮\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "由“张”“亮”教授的所有学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"张\" AND T2.lastname  =  \"亮\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出由“孙“”克”教授的所有学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"孙\" AND T2.lastname  =  \"克\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "由“孙”“克”教授的所有学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"孙\" AND T2.lastname  =  \"克\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教授“刘”“磊”的所有老师的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"刘\" AND T1.lastname  =  \"磊\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教授学生名为“刘”“磊”的所有老师的名字和姓氏是那些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"刘\" AND T1.lastname  =  \"磊\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教授“吴”“琼”的所有老师的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"吴\" AND T1.lastname  =  \"琼\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教授学生名为“吴”“琼”的所有老师的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"吴\" AND T1.lastname  =  \"琼\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“林”“小华”教了多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"林\" AND T2.lastname  =  \"小华\""
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计一下“林”“小华”老师教学生的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"林\" AND T2.lastname  =  \"小华\""
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卫”“聪”教了多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"卫\" AND T2.lastname  =  \"聪\""
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“卫”“聪”老师教的学生数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"卫\" AND T2.lastname  =  \"聪\""
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“沈”“丽雅”老师教的学生数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"沈\" AND T2.lastname  =  \"丽雅\""
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“沈”“丽雅”教了多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"沈\" AND T2.lastname  =  \"丽雅\""
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字为“王”“小帅”的学生有多少老师？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"王\" AND T1.lastname  =  \"小帅\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出名字为“王”“小帅”的学生的老师的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"王\" AND T1.lastname  =  \"小帅\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字为“郑”“小强”的学生有多少老师？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"郑\" AND T1.lastname  =  \"小强\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教学生“郑”“小强”的老师的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"郑\" AND T1.lastname  =  \"小强\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR), CREATE TABLE teachers (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“张”“亮”没有教过的所有一年级学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"张\" AND T2.lastname  =  \"亮\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, grade VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是由“张”“亮”老师教的一年级学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"张\" AND T2.lastname  =  \"亮\""
      }
    ],
    "system": "CREATE TABLE list (firstname VARCHAR, classroom VARCHAR, grade VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有被“孙”“晓军”教过的三年级学生的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"孙\" AND T2.lastname != \"晓军\""
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有被“孙”“晓军”教过的三年级学生的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  3 AND T2.firstname != \"孙\" AND T2.lastname != \"晓军\""
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR, lastname VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个年级，返回其年级号、使用的教室数量以及年级的学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个年级的年级编号、该年级用的教室数量以及该年级注册的学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT grade ,  count(DISTINCT classroom) ,  count(*) FROM list GROUP BY grade"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个教室，返回其教室号和使用它的年级数。"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个教室的教室编号和使用它的年级数。"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom ,  count(DISTINCT grade) FROM list GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个教室的学生最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出大多数学生使用的教室。"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "报告每间教室的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom ,  count(*) FROM list GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每间教室的教室号码并找出有多少学生在使用它。"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom ,  count(*) FROM list GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "报告每一个“0”年级的教室的学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个“0”年级的教室，返回教室号码和学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个“四年级”教室的学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个“四年级”的教室，显示教室号码和使用它的学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR, grade VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教最多学生的老师的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位老师教最多的学生？请告诉我老师的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR), CREATE TABLE teachers (firstname VARCHAR, classroom VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出一间教室里学生的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  classroom FROM list GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一间教室有多少名学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  classroom FROM list GROUP BY classroom"
      }
    ],
    "system": "CREATE TABLE list (classroom VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总部设在“中国”的公司有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM company WHERE Headquarters  =  '中国'"
      }
    ],
    "system": "CREATE TABLE company (Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "通过销售数量的升序列出公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM company ORDER BY Sales_in_Billion ASC"
      }
    ],
    "system": "CREATE TABLE company (Sales_in_Billion VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有公司的总部和产业是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Headquarters ,  Industry FROM company"
      }
    ],
    "system": "CREATE TABLE company (Industry VARCHAR, Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“银行”或“零售”的公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM company WHERE Industry  =  \"银行业\" OR Industry  =  \"零售\""
      }
    ],
    "system": "CREATE TABLE company (Industry VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "公司的最大市值和最低市值是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company"
      }
    ],
    "system": "CREATE TABLE company (Market_Value_in_Billion INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "公司销售额最大的公司总部是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE company (Sales_in_Billion VARCHAR, Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的总部及每个总部公司的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Headquarters ,  COUNT(*) FROM company GROUP BY Headquarters"
      }
    ],
    "system": "CREATE TABLE company (Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示公司最常见的总部。"
      },
      {
        "from": "assistant",
        "value": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE company (Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两家公司的总部。"
      },
      {
        "from": "assistant",
        "value": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE company (Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示既有“银行”的公司也有“天然气”行业的公司的总部。"
      },
      {
        "from": "assistant",
        "value": "SELECT Headquarters FROM company WHERE Industry  =  \"银行业\" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  \"天然气\""
      }
    ],
    "system": "CREATE TABLE company (Industry VARCHAR, Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示公司名称和员工姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID"
      }
    ],
    "system": "CREATE TABLE employment (People_ID VARCHAR, Company_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE company (Company_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照员工工作的年限的降序显示公司和员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working"
      }
    ],
    "system": "CREATE TABLE employment (People_ID VARCHAR, Year_working VARCHAR, Company_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE company (Company_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示那些销售超过200的公司的员工的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200"
      }
    ],
    "system": "CREATE TABLE employment (People_ID VARCHAR, Company_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE company (Company_ID VARCHAR, Sales_in_Billion INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示公司名称和该公司员工人数"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Name ,  COUNT(*) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID GROUP BY T3.Name"
      }
    ],
    "system": "CREATE TABLE employment (People_ID VARCHAR, Company_ID VARCHAR), CREATE TABLE people (People_ID VARCHAR), CREATE TABLE company (Company_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出未被任何公司雇用的人的姓名"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)"
      }
    ],
    "system": "CREATE TABLE people (People_ID VARCHAR, Name VARCHAR), CREATE TABLE employment (People_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按销售额和利润的降序列出销售量超过200的公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC"
      }
    ],
    "system": "CREATE TABLE company (Profits_in_Billion VARCHAR, name VARCHAR, Sales_in_Billion INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM film"
      }
    ],
    "system": "CREATE TABLE film (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算电影的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM film"
      }
    ],
    "system": "CREATE TABLE film (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有电影的不同导演。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Director FROM film"
      }
    ],
    "system": "CREATE TABLE film (Director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的电影导演有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Director FROM film"
      }
    ],
    "system": "CREATE TABLE film (Director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影票房的平均销售总额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Gross_in_dollar) FROM film"
      }
    ],
    "system": "CREATE TABLE film (Gross_in_dollar INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有电影的平均总销售额。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Gross_in_dollar) FROM film"
      }
    ],
    "system": "CREATE TABLE film (Gross_in_dollar INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影市场的高估计和低估计是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (Low_Estimate VARCHAR, High_Estimate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回为所有电影市场估计的低值和高值。"
      },
      {
        "from": "assistant",
        "value": "SELECT Low_Estimate ,  High_Estimate FROM film_market_estimation"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (Low_Estimate VARCHAR, High_Estimate VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1995年度电影市场估计的类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (TYPE VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回1995年电影市场的估计类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (TYPE VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有市场中，城市的最大和最小数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Number_cities) ,  min(Number_cities) FROM market"
      }
    ],
    "system": "CREATE TABLE market (Number_cities INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有市场中城市的最大和最小数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Number_cities) ,  min(Number_cities) FROM market"
      }
    ],
    "system": "CREATE TABLE market (Number_cities INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少市场中的城市数量少于300？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM market WHERE Number_cities  <  300"
      }
    ],
    "system": "CREATE TABLE market (Number_cities INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计城市数量少于300的市场数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM market WHERE Number_cities  <  300"
      }
    ],
    "system": "CREATE TABLE market (Number_cities INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列所有国家的市场。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM market ORDER BY Country ASC"
      }
    ],
    "system": "CREATE TABLE market (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的每个市场的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM market ORDER BY Country ASC"
      }
    ],
    "system": "CREATE TABLE market (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以城市数量递减的顺序列出所有市场国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM market ORDER BY Number_cities DESC"
      }
    ],
    "system": "CREATE TABLE market (Country VARCHAR, Number_cities VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按城市数量递减排列的每个市场的国家有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM market ORDER BY Number_cities DESC"
      }
    ],
    "system": "CREATE TABLE market (Country VARCHAR, Number_cities VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请展示电影的名称和市场估计的类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID"
      }
    ],
    "system": "CREATE TABLE film (Film_ID VARCHAR, Title VARCHAR), CREATE TABLE film_market_estimation (Type VARCHAR, Film_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影的标题和市场估计的相应类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID"
      }
    ],
    "system": "CREATE TABLE film (Film_ID VARCHAR, Title VARCHAR), CREATE TABLE film_market_estimation (Type VARCHAR, Film_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示1995年度不同市场预估的电影导演。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995"
      }
    ],
    "system": "CREATE TABLE film (Director VARCHAR, Film_ID VARCHAR), CREATE TABLE film_market_estimation (Year VARCHAR, Film_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1995年度不同市场预估的电影导演是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995"
      }
    ],
    "system": "CREATE TABLE film (Director VARCHAR, Film_ID VARCHAR), CREATE TABLE film_market_estimation (Year VARCHAR, Film_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影市场低估值高于10000的平均城市数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (Low_Estimate INTEGER, Market_ID VARCHAR), CREATE TABLE market (Market_ID VARCHAR, Number_cities INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出电影市场低估值高于10000的平均城市数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.Number_cities) FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T1.Low_Estimate  >  10000"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (Low_Estimate INTEGER, Market_ID VARCHAR), CREATE TABLE market (Market_ID VARCHAR, Number_cities INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请列出电影市场估计的国家和年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (Market_ID VARCHAR, Year VARCHAR), CREATE TABLE market (Country VARCHAR, Market_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是市场相关的国家及其相应的市场估计年？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (Market_ID VARCHAR, Year VARCHAR), CREATE TABLE market (Country VARCHAR, Market_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请按年份降序列出国家名为“日本”的电影市场估计的年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"日本\" ORDER BY T1.Year DESC"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (Market_ID VARCHAR, Year VARCHAR), CREATE TABLE market (Country VARCHAR, Market_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年份降序的“日本”的电影市场估计年份是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"日本\" ORDER BY T1.Year DESC"
      }
    ],
    "system": "CREATE TABLE film_market_estimation (Market_ID VARCHAR, Year VARCHAR), CREATE TABLE market (Country VARCHAR, Market_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每一部电影的制片厂和该电影制片厂制作的电影数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio"
      }
    ],
    "system": "CREATE TABLE film (Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个工作室如何制作电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio ,  COUNT(*) FROM film GROUP BY Studio"
      }
    ],
    "system": "CREATE TABLE film (Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出制作电影数量最多的电影制片厂的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制作最多电影的工作室的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出至少有两部电影的工作室名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE film (Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制作两部或更多部电影的工作室名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film GROUP BY Studio HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE film (Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有任何市场估计的电影的标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)"
      }
    ],
    "system": "CREATE TABLE film (Film_ID VARCHAR, Title VARCHAR), CREATE TABLE film_market_estimation (Film_ID VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有电影市场估计的电影的片名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)"
      }
    ],
    "system": "CREATE TABLE film (Film_ID VARCHAR, Title VARCHAR), CREATE TABLE film_market_estimation (Film_ID VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与导演“姜文”和“李安”一起制作电影的制片厂。"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film WHERE Director  =  \"姜文\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"李安\""
      }
    ],
    "system": "CREATE TABLE film (Director VARCHAR, Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“姜文”和“李安”合作拍摄电影的工作室叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film WHERE Director  =  \"姜文\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"李安\""
      }
    ],
    "system": "CREATE TABLE film (Director VARCHAR, Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找一些包含“华谊”这个词的电影制片厂制作的电影的片名和制片厂。"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"华谊\""
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "由名字包含“华谊”的电影制片厂制作的电影的片名和制片厂是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"华谊\""
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示没有导演“李安”导演的电影制片厂。"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"李安\""
      }
    ],
    "system": "CREATE TABLE film (Director VARCHAR, Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些工作室从未与导演“李安”合作过？"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"李安\""
      }
    ],
    "system": "CREATE TABLE film (Director VARCHAR, Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出平均票房收益在450万以上的工作室。"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000"
      }
    ],
    "system": "CREATE TABLE film (Gross_in_dollar INTEGER, Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪家电影公司的平均票房总收益超过450万？"
      },
      {
        "from": "assistant",
        "value": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000"
      }
    ],
    "system": "CREATE TABLE film (Gross_in_dollar INTEGER, Studio VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最高市场估计的电影的标题是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (Film_ID VARCHAR), CREATE TABLE film_market_estimation (Film_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回有最高市场估计的电影的标题."
      },
      {
        "from": "assistant",
        "value": "SELECT t1.title FROM film AS T1 JOIN film_market_estimation AS T2  ON T1.Film_ID  =  T2.Film_ID ORDER BY high_estimate DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE film (Film_ID VARCHAR), CREATE TABLE film_market_estimation (Film_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从未在“中国”上映过的电影的名字和导演的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  '中国')"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, country VARCHAR, director VARCHAR, film_id VARCHAR), CREATE TABLE film_market_estimation (market_id VARCHAR), CREATE TABLE market (Market_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从未在“中国”上映过的电影的名字和导演的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  '中国')"
      }
    ],
    "system": "CREATE TABLE film (title VARCHAR, country VARCHAR, director VARCHAR, film_id VARCHAR), CREATE TABLE film_market_estimation (market_id VARCHAR), CREATE TABLE market (Market_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少日历项目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_calendar"
      }
    ],
    "system": "CREATE TABLE Ref_calendar (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算所有日历条目的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_calendar"
      }
    ],
    "system": "CREATE TABLE Ref_calendar (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有日历日期和日期号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT calendar_date ,  day_Number FROM Ref_calendar"
      }
    ],
    "system": "CREATE TABLE Ref_calendar (day_Number VARCHAR, calendar_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有日历日期和日期号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT calendar_date ,  day_Number FROM Ref_calendar"
      }
    ],
    "system": "CREATE TABLE Ref_calendar (day_Number VARCHAR, calendar_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示文档类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_document_types"
      }
    ],
    "system": "CREATE TABLE Ref_document_types (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种文档类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_document_types"
      }
    ],
    "system": "CREATE TABLE Ref_document_types (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有的文档类型代码和文档类型名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code ,  document_type_name FROM Ref_document_types"
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的文档类型代码和文档类型名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code ,  document_type_name FROM Ref_document_types"
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档类型代码是“RV”的文档名称和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\""
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_description VARCHAR, document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我文档类型代码是“RV”的文档名称和描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_name ,  document_type_description FROM Ref_document_types WHERE document_type_code  =  \"RV\""
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_description VARCHAR, document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档类型是“论文”的文档类型代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"论文\""
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找文档类型是“论文”的文档类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"论文\""
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示文档类型代码是“简历”或“通知”的文档数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"简历\" OR document_type_code  =  \"通知\""
      }
    ],
    "system": "CREATE TABLE All_documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档类型代码是“简历”或“通知”的文档数量有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM All_documents WHERE document_type_code  =  \"简历\" OR document_type_code  =  \"通知\""
      }
    ],
    "system": "CREATE TABLE All_documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“马丽的简历”被保存的日期是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"马丽的简历\""
      }
    ],
    "system": "CREATE TABLE All_documents (date_stored VARCHAR, Document_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么时候保存的文件“马丽的简历”？返回保存的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_stored FROM All_documents WHERE Document_name  =  \"马丽的简历\""
      }
    ],
    "system": "CREATE TABLE All_documents (date_stored VARCHAR, Document_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的天数和文件的日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date"
      }
    ],
    "system": "CREATE TABLE All_documents (date_stored VARCHAR, Date_Stored VARCHAR), CREATE TABLE Ref_calendar (day_Number VARCHAR, calendar_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有文件的的天数和存储日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.day_Number ,  T1.Date_Stored FROM All_documents AS T1 JOIN Ref_calendar AS T2 ON T1.date_stored  =  T2.calendar_date"
      }
    ],
    "system": "CREATE TABLE All_documents (date_stored VARCHAR, Date_Stored VARCHAR), CREATE TABLE Ref_calendar (day_Number VARCHAR, calendar_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文件名为“怎样阅读一本书”的文档类型名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"怎样阅读一本书\""
      }
    ],
    "system": "CREATE TABLE All_documents (document_name VARCHAR, document_type_code VARCHAR), CREATE TABLE Ref_document_types (document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找名为“怎样阅读一本书”的文档类型名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.document_type_name FROM All_documents AS T1 JOIN Ref_document_types AS T2 ON T1.document_type_code  =  T2.document_type_code WHERE T1.document_name  =  \"怎样阅读一本书\""
      }
    ],
    "system": "CREATE TABLE All_documents (document_name VARCHAR, document_type_code VARCHAR), CREATE TABLE Ref_document_types (document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示位置的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_locations"
      }
    ],
    "system": "CREATE TABLE Ref_locations (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数据库中列出了多少个位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_locations"
      }
    ],
    "system": "CREATE TABLE Ref_locations (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有的位置代码和位置名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code ,  location_name FROM Ref_locations"
      }
    ],
    "system": "CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的位置代码和位置名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code ,  location_name FROM Ref_locations"
      }
    ],
    "system": "CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "代码为“粤”的位置名称和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"粤\""
      }
    ],
    "system": "CREATE TABLE Ref_locations (location_code VARCHAR, location_name VARCHAR, location_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出代码为“粤”的位置名称和描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT location_name ,  location_description FROM Ref_locations WHERE location_code  =  \"粤\""
      }
    ],
    "system": "CREATE TABLE Ref_locations (location_code VARCHAR, location_name VARCHAR, location_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "国家“加拿大”的位置代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"加拿大\""
      }
    ],
    "system": "CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示国家“加拿大”的位置代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code FROM Ref_locations WHERE location_name  =  \"加拿大\""
      }
    ],
    "system": "CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少角色？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ROLES"
      }
    ],
    "system": "CREATE TABLE ROLES (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算列出的角色总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ROLES"
      }
    ],
    "system": "CREATE TABLE ROLES (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有角色代码、角色名和角色描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code ,  role_name ,  role_description FROM ROLES"
      }
    ],
    "system": "CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的角色代码、角色名称和角色描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code ,  role_name ,  role_description FROM ROLES"
      }
    ],
    "system": "CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "角色代码是“经理”的名称和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"经理\""
      }
    ],
    "system": "CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出角色代码是“经理”的名称和描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_name ,  role_description FROM ROLES WHERE role_code  =  \"经理\""
      }
    ],
    "system": "CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示角色名称是“校对员”的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_description FROM ROLES WHERE role_name  =  \"校对员\""
      }
    ],
    "system": "CREATE TABLE ROLES (role_name VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“校对员”角色的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_description FROM ROLES WHERE role_name  =  \"校对员\""
      }
    ],
    "system": "CREATE TABLE ROLES (role_name VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Employees"
      }
    ],
    "system": "CREATE TABLE Employees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出我们拥有的员工数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Employees"
      }
    ],
    "system": "CREATE TABLE Employees (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示名为“琦琦”的雇员的姓名、角色代码和出生日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  '琦琦'"
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, date_of_birth VARCHAR, role_code VARCHAR, employee_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“琦琦”的员工的姓名、职务代码和出生日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  '琦琦'"
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, date_of_birth VARCHAR, role_code VARCHAR, employee_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字叫“琳琳”的员工的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"琳琳\""
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示名为“琳琳”的雇员的id。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"琳琳\""
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有角色是“人力资源”的员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_name FROM Employees WHERE role_code  =  \"人力资源\""
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些员工的角色代码是“人力资源”？找出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_name FROM Employees WHERE role_code  =  \"人力资源\""
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有角色代码和每个角色中的雇员数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code"
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个角色的代码及其对应的的员工数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code ,  count(*) FROM Employees GROUP BY role_code"
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工人数最多的角色代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出具有最多雇员的角色代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有3名员工的所有角色代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有三个或更多员工的角色的角色代码是什么？。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Employees GROUP BY role_code HAVING count(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最少的雇员的角色代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工数最少的角色是什么？找出其角色代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "雇员名为“琳琳”的角色名和角色描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"琳琳\""
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, role_code VARCHAR), CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示名为“琳琳”的雇员的角色名和角色描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"琳琳\""
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, role_code VARCHAR), CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示角色名称是“编辑”的员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"编辑\""
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, role_code VARCHAR), CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有角色名称为“编辑”的雇员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"编辑\""
      }
    ],
    "system": "CREATE TABLE Employees (employee_name VARCHAR, role_code VARCHAR), CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有角色名称是“人力资源”或“经理”的员工的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"人力资源\" OR T2.role_name  =  \"经理\""
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR, employee_id VARCHAR), CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "角色名称是“人力资源”或“经理”的员工的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"人力资源\" OR T2.role_name  =  \"经理\""
      }
    ],
    "system": "CREATE TABLE Employees (role_code VARCHAR, employee_id VARCHAR), CREATE TABLE ROLES (role_name VARCHAR, role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档的位置代码有什么不同？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT location_code FROM Document_locations"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我所有的文件的不同位置代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT location_code FROM Document_locations"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示文件“罗超的简历”的位置名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"罗超的简历\""
      }
    ],
    "system": "CREATE TABLE All_documents (document_id VARCHAR, document_name VARCHAR), CREATE TABLE Document_locations (document_id VARCHAR, location_code VARCHAR), CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“罗超的简历”文件的位置名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"罗超的简历\""
      }
    ],
    "system": "CREATE TABLE All_documents (document_id VARCHAR, document_name VARCHAR), CREATE TABLE Document_locations (document_id VARCHAR, location_code VARCHAR), CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有文档的位置代码、起始日期和结束数据所在位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations"
      }
    ],
    "system": "CREATE TABLE Document_locations (date_in_location_from VARCHAR, location_code VARCHAR, date_in_locaton_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个文档的位置代码、起始日期和结束数据所在位置都是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code ,  date_in_location_from ,  date_in_locaton_to FROM Document_locations"
      }
    ],
    "system": "CREATE TABLE Document_locations (date_in_location_from VARCHAR, location_code VARCHAR, date_in_locaton_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名称为“罗超的简历”的文档的“起始位置日期”和“最终位置日期”是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"罗超的简历\""
      }
    ],
    "system": "CREATE TABLE Document_locations (document_id VARCHAR, date_in_locaton_to VARCHAR, date_in_location_from VARCHAR), CREATE TABLE All_documents (document_id VARCHAR, document_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出名为“罗超的简历”的文档起始日期和结束数据所在位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"罗超的简历\""
      }
    ],
    "system": "CREATE TABLE Document_locations (document_id VARCHAR, date_in_locaton_to VARCHAR, date_in_location_from VARCHAR), CREATE TABLE All_documents (document_id VARCHAR, document_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个位置的位置代码和文档数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个位置的代码和那个位置对应的文档数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code ,  count(*) FROM Document_locations GROUP BY location_code"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多的文件的位置代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找拥有最大数量的文档的位置代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少3个文件的位置代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有三个文件的位置代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最少的文档所在位置名称和代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR), CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档数量最少的地点的名称和代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Document_locations (location_code VARCHAR), CREATE TABLE Ref_locations (location_name VARCHAR, location_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "授权销毁的雇员和销毁相应文件的雇员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR, Destroyed_by_Employee_ID VARCHAR), CREATE TABLE Employees (employee_name VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出授权销毁文件的雇员和销毁相应文件的雇员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR, Destroyed_by_Employee_ID VARCHAR), CREATE TABLE Employees (employee_name VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个雇员的id以及该雇员授权销毁文件的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个雇员的id和授权销毁文件的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Destruction_Authorised_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destruction_Authorised_by_Employee_ID"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示员工的ID和每个员工对应销毁的文件数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destroyed_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个员工的id和销毁的文件数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destroyed_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有授权销毁任何文档的雇员的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Employees (Destruction_Authorised_by_Employee_ID VARCHAR, employee_id VARCHAR), CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些雇员没有授权销毁任何文件？列出他们的员工ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Employees (Destruction_Authorised_by_Employee_ID VARCHAR, employee_id VARCHAR), CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有授权销毁文件的员工的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "授权文件销毁的所有员工的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有销毁文件的雇员的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destroyed_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有销毁文件的员工的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destroyed_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有没有销毁过任何文件的雇员的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Employees (Destroyed_by_Employee_ID VARCHAR, employee_id VARCHAR), CREATE TABLE Documents_to_be_destroyed (Destroyed_by_Employee_ID VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些员工没有销毁过任何文件？找到他们的雇员ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Employees (Destroyed_by_Employee_ID VARCHAR, employee_id VARCHAR), CREATE TABLE Documents_to_be_destroyed (Destroyed_by_Employee_ID VARCHAR, employee_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示销毁文档或授权进行此操作的所有员工的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR, Destroyed_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些员工销毁了文件或授权其他员工销毁文件？返回他们的雇员ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed"
      }
    ],
    "system": "CREATE TABLE Documents_to_be_destroyed (Destruction_Authorised_by_Employee_ID VARCHAR, Destroyed_by_Employee_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个俱乐部？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club"
      }
    ],
    "system": "CREATE TABLE club (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计俱乐部总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club"
      }
    ],
    "system": "CREATE TABLE club (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有俱乐部的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT clubname FROM club"
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我每个俱乐部的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT clubname FROM club"
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那儿有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student"
      }
    ],
    "system": "CREATE TABLE student (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student"
      }
    ],
    "system": "CREATE TABLE student (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT fname FROM student"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT fname FROM student"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“赛车”俱乐部所有成员的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“赛车”俱乐部的成员的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北大创业俱乐部”俱乐部的成员都有谁？显示他们的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"北大创业俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回名为“北大创业俱乐部”的俱乐部成员的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"北大创业俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“网球俱乐部”有多少会员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"网球俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计俱乐部“网球俱乐部”的成员数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"网球俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“文学”会员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"文学\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人拥有俱乐部“文学”的会员资格？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"文学\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“天天”“帅”属于多少家俱乐部？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"天天\" AND t3.lname  =  \"帅\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR, fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“天天”“帅”有多少家俱乐部的会员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"天天\" AND t3.lname  =  \"帅\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR, fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“金” “洋”拥有的俱乐部成员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"金\" AND t3.lname  =  \"洋\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR, fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“金” “洋”是多少俱乐部的会员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"金\" AND t3.lname  =  \"洋\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR, fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“赛车”俱乐部的所有“女性”成员的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t3.sex  =  \"F\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, sex VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“赛车”俱乐部所有“女性”成员的名字和姓氏是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t3.sex  =  \"F\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, sex VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“北大创业俱乐部”俱乐部的所有“男性”成员的姓名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"北大创业俱乐部\" AND t3.sex  =  \"男\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, sex VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北大创业俱乐部”俱乐部每个“男性”成员的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"北大创业俱乐部\" AND t3.sex  =  \"男\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, sex VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有专业是“600”的“赛车”的成员的姓名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t3.major  =  \"600\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, major VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有专业是“600”的“赛车”的成员的姓名和姓氏是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t3.major  =  \"600\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, major VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个俱乐部拥有最多主修“600”的会员？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出主修“600”课程的会员最多的俱乐部。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到拥有最多“女性”学生的俱乐部的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个俱乐部的“女性”学生最多？给我这个俱乐部的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对“网球俱乐部”的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT clubdesc FROM club WHERE clubname  =  \"网球俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubdesc VARCHAR, clubname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找一个叫做“网球俱乐部”的俱乐部的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT clubdesc FROM club WHERE clubname  =  \"网球俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubdesc VARCHAR, clubname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出俱乐部“文学”的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT clubdesc FROM club WHERE clubname  =  \"文学\""
      }
    ],
    "system": "CREATE TABLE club (clubdesc VARCHAR, clubname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“文学”俱乐部的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT clubdesc FROM club WHERE clubname  =  \"文学\""
      }
    ],
    "system": "CREATE TABLE club (clubdesc VARCHAR, clubname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字叫“网球俱乐部”的俱乐部所在位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT clublocation FROM club WHERE clubname  =  \"网球俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR, clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们叫“网球俱乐部”的俱乐部在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT clublocation FROM club WHERE clubname  =  \"网球俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR, clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到俱乐部“文学”的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT clublocation FROM club WHERE clubname  =  \"文学\""
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR, clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“文学”俱乐部在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT clublocation FROM club WHERE clubname  =  \"文学\""
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR, clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北大创业俱乐部”俱乐部在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT clublocation FROM club WHERE clubname  =  \"北大创业俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR, clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "告诉我俱乐部“北大创业俱乐部”的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT clublocation FROM club WHERE clubname  =  \"北大创业俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR, clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有在“济南”的俱乐部的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT clubname FROM club WHERE clublocation  =  \"济南\""
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR, clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些俱乐部位于“济南”？返回俱乐部名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT clubname FROM club WHERE clublocation  =  \"济南\""
      }
    ],
    "system": "CREATE TABLE club (clubname VARCHAR, clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“杭州”有多少家俱乐部？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club WHERE clublocation  =  \"杭州\""
      }
    ],
    "system": "CREATE TABLE club (clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计“杭州”俱乐部的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club WHERE clublocation  =  \"杭州\""
      }
    ],
    "system": "CREATE TABLE club (clublocation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“赛车”俱乐部主席的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t2.position  =  \"主席\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, position VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是“赛车”的主席？给出其名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t2.position  =  \"主席\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, position VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北大创业俱乐部”俱乐部的“CTO”的姓名和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"北大创业俱乐部\" AND t2.position  =  \"CTO\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, position VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“北大创业俱乐部”俱乐部的“CTO”的姓名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"北大创业俱乐部\" AND t2.position  =  \"CTO\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, position VARCHAR, stuid VARCHAR), CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“赛车”俱乐部中有多少不同的角色？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"赛车\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计在俱乐部“赛车”的不同位置的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"赛车\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, position VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“赛车”有多少会员年龄超过18岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t3.age  >  18"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计年龄在18岁以上的“赛车”俱乐部会员人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t3.age  >  18"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“赛车”俱乐部有多少成员年龄小于18岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t3.age  <  18"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计年龄在18岁以下的“赛车”俱乐部会员人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\" AND t3.age  <  18"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有俱乐部中至少有一个成员来自城市代码是“武汉”的城市的俱乐部名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"武汉\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些俱乐部有一个或多个会员来自城市的代码是“武汉”的城市？返回俱乐部的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"武汉\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找至少有一个成员来自城市的代码是“重庆”的城市的俱乐部的名称，。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"重庆\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有一个成员来自城市的代码是“重庆”的城市的俱乐部的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"重庆\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“代” “兵”的学生参加了多少个俱乐部？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"代\" AND t3.lname  =  \"兵\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR, fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算名为“代” “兵”的学生参加俱乐部的会员数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"代\" AND t3.lname  =  \"兵\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR, fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出名字是“秦” “小明”的学生参加的俱乐部。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"秦\" AND t3.lname  =  \"小明\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR, fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有会员名“秦” “小明”的俱乐部的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"秦\" AND t3.lname  =  \"小明\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR, fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出至少有一个成员且顾问是“1121”的俱乐部。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有一个成员且顾问是“1121”的俱乐部是那些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.advisor  =  1121"
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (stuid VARCHAR, advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“赛车”俱乐部成员的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (age INTEGER, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“赛车”俱乐部成员的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"赛车\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (age INTEGER, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到俱乐部“北大创业俱乐部”成员的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"北大创业俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (age INTEGER, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "俱乐部“北大创业俱乐部”成员的平均年龄有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"北大创业俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (age INTEGER, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回俱乐部“网球俱乐部”会员的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"网球俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (age INTEGER, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算俱乐部“网球俱乐部”成员的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"网球俱乐部\""
      }
    ],
    "system": "CREATE TABLE club (clubid VARCHAR, clubname VARCHAR), CREATE TABLE member_of_club (clubid VARCHAR, stuid VARCHAR), CREATE TABLE student (age INTEGER, stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“1986-08-26 20:49:27”之前送交文件的补助金额和在“1989-03-16 18:27:16”之后结束补助的补助金额分别是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'"
      }
    ],
    "system": "CREATE TABLE Grants (grant_id VARCHAR, grant_amount VARCHAR), CREATE TABLE Documents (grant_id VARCHAR, sent_date INTEGER), CREATE TABLE grants (grant_end_date INTEGER, grant_amount VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“1986-08-26 20:49:27”之前寄出的文件的补助金额和在“1989-03-16 18:27:16”补助结束之后的补助金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'"
      }
    ],
    "system": "CREATE TABLE Grants (grant_id VARCHAR, grant_amount VARCHAR), CREATE TABLE Documents (grant_id VARCHAR, sent_date INTEGER), CREATE TABLE grants (grant_end_date INTEGER, grant_amount VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出既有“专利”产出又有“论文”产出的项目细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  '论文' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  '专利'"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (outcome_code VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既有“专利”产出又有“论文”产出的项目细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  '论文' INTERSECT SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id WHERE T2.outcome_code  =  '专利'"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (outcome_code VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被描述为“研究”的组织的总补助金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  '研究'"
      }
    ],
    "system": "CREATE TABLE Grants (organisation_id VARCHAR), CREATE TABLE Organisations (organisation_id VARCHAR, organisation_type VARCHAR), CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“研究”经费的总额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  '研究'"
      }
    ],
    "system": "CREATE TABLE Grants (organisation_id VARCHAR), CREATE TABLE Organisations (organisation_id VARCHAR, organisation_type VARCHAR), CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出招聘“领导”员工最多的项目的开始和结束时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  '领导'"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_from VARCHAR, role_code VARCHAR, date_to VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工在具有最多员工并且具有“领导”角色的项目中工作的开始和结束时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_from ,  date_to FROM Project_Staff WHERE project_id IN( SELECT project_id FROM Project_Staff GROUP BY project_id ORDER BY count(*) DESC LIMIT 1 ) UNION SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  '领导'"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_from VARCHAR, role_code VARCHAR, date_to VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出参与的组织的组织ID和详细信息"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000"
      }
    ],
    "system": "CREATE TABLE Grants (organisation_id VARCHAR, grant_amount INTEGER), CREATE TABLE Organisations (organisation_id VARCHAR, organisation_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过6000美元的资助的所有组织的id和细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000"
      }
    ],
    "system": "CREATE TABLE Grants (organisation_id VARCHAR, grant_amount INTEGER), CREATE TABLE Organisations (organisation_id VARCHAR, organisation_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "研究人员最多的组织的组织类型和id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Organisations (organisation_type VARCHAR, organisation_id VARCHAR), CREATE TABLE Research_Staff (employer_organisation_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多研究人员的组织的类型和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Organisations (organisation_type VARCHAR, organisation_id VARCHAR), CREATE TABLE Research_Staff (employer_organisation_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个类型的组织雇佣了大多数研究人员？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Organisations (organisation_type VARCHAR, organisation_id VARCHAR), CREATE TABLE Research_Staff (employer_organisation_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "研究人员最多的组织类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Organisations (organisation_type VARCHAR, organisation_id VARCHAR), CREATE TABLE Research_Staff (employer_organisation_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找按组织类型为“研究”的被授予的授权金额超过5000的文件的发送日期"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  '研究'"
      }
    ],
    "system": "CREATE TABLE documents (sent_date VARCHAR, grant_id VARCHAR), CREATE TABLE Grants (organisation_id VARCHAR, grant_amount INTEGER, grant_id VARCHAR), CREATE TABLE Organisations (organisation_id VARCHAR, organisation_type VARCHAR), CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有资助金额超过5000并参与“研究”的文件的发送日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  '研究'"
      }
    ],
    "system": "CREATE TABLE documents (sent_date VARCHAR, grant_id VARCHAR), CREATE TABLE Grants (organisation_id VARCHAR, grant_amount INTEGER, grant_id VARCHAR), CREATE TABLE Organisations (organisation_id VARCHAR, organisation_type VARCHAR), CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于描述为“常规”类型或授予超过100份的文件，收到的回复日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  '常规' OR T3.grant_amount  >  100"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR, grant_id VARCHAR, response_received_date VARCHAR), CREATE TABLE Document_Types (document_description VARCHAR, document_type_code VARCHAR), CREATE TABLE Grants (grant_amount INTEGER, grant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被授予超过100美元的文件且描述类型为“常规”的文件回复日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  '常规' OR T3.grant_amount  >  100"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR, grant_id VARCHAR, response_received_date VARCHAR), CREATE TABLE Document_Types (document_description VARCHAR, document_type_code VARCHAR), CREATE TABLE Grants (grant_amount INTEGER, grant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有雇用任何担任“研究院”角色作为工作人员的项目的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  '研究院' )"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, role_code VARCHAR, project_id VARCHAR), CREATE TABLE Project_Staff (project_details VARCHAR, role_code VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有雇用任何担任“研究院”角色作为工作人员的项目的细节有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  '研究院' )"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, role_code VARCHAR, project_id VARCHAR), CREATE TABLE Project_Staff (project_details VARCHAR, role_code VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于详细描述为“详细”或具有两个以上产出的项目的任务细节、任务标识和项目标识是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  '详细' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Tasks (project_id VARCHAR, task_id VARCHAR, task_details VARCHAR), CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于被详细描述为“详细”或者至少有3个结果的项目的任务细节、任务id和项目id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  '详细' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Tasks (project_id VARCHAR, task_id VARCHAR, task_details VARCHAR), CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "角色是“研究院”的工作人员什么时候开始工作，什么时候停止工作？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  '研究院'"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_from VARCHAR, role_code VARCHAR, date_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“研究院”是什么时候开始工作的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  '研究院'"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_from VARCHAR, role_code VARCHAR, date_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工有多少种角色？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT role_code) FROM Project_Staff"
      }
    ],
    "system": "CREATE TABLE Project_Staff (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "项目员工有多少不同的角色？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT role_code) FROM Project_Staff"
      }
    ],
    "system": "CREATE TABLE Project_Staff (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个组织的补助金总额是多少？列出组织ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id"
      }
    ],
    "system": "CREATE TABLE Grants (organisation_id VARCHAR, grant_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个组织被给予的赠款总额是多少，其id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(grant_amount) ,  organisation_id FROM Grants GROUP BY organisation_id"
      }
    ],
    "system": "CREATE TABLE Grants (organisation_id VARCHAR, grant_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出用子字符串“已发表”描述研究成果的项目的项目细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '已发表'"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (outcome_code VARCHAR, project_id VARCHAR), CREATE TABLE Research_outcomes (outcome_code VARCHAR, outcome_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "已发表的项目有哪些细节？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '已发表'"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (outcome_code VARCHAR, project_id VARCHAR), CREATE TABLE Research_outcomes (outcome_code VARCHAR, outcome_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个项目有多少员工？按升序排列项目ID和编号。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"
      }
    ],
    "system": "CREATE TABLE Project_Staff (project_id VARCHAR), CREATE TABLE Projects (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个项目ID，它有多少员工？按升序排列它们。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_id ,  count(*) FROM Project_Staff AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) ASC"
      }
    ],
    "system": "CREATE TABLE Project_Staff (project_id VARCHAR), CREATE TABLE Projects (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是对“研究院”角色的完整描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_description FROM Staff_Roles WHERE role_code  =  '研究院'"
      }
    ],
    "system": "CREATE TABLE Staff_Roles (role_code VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是对“研究院”工作的完整描述？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_description FROM Staff_Roles WHERE role_code  =  '研究院'"
      }
    ],
    "system": "CREATE TABLE Staff_Roles (role_code VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "项目的第一批员工是什么时候开始工作的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_from VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "第一个工作人员什么时候开始工作的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_from VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个项目取得最多的成果？列出项目细节和项目ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "取得最多的成果的项目细节和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些项目没有结果？列出其项目细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_details VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有结果的项目细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_details VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个组织雇佣了最多的研究人员？列出组织ID、类型和细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Organisations (organisation_id VARCHAR, organisation_details VARCHAR, organisation_type VARCHAR), CREATE TABLE Research_Staff (employer_organisation_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有最多研究人员的组织的ID、类型和细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Organisations (organisation_id VARCHAR, organisation_details VARCHAR, organisation_type VARCHAR), CREATE TABLE Research_Staff (employer_organisation_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示参与去的最多项目结果的项目人员的角色描述和项目人员的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Staff_Roles (role_code VARCHAR, role_description VARCHAR), CREATE TABLE Project_Staff (role_code VARCHAR, staff_id VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个员工ID，对涉及最多项目的角色的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Staff_Roles (role_code VARCHAR, role_description VARCHAR), CREATE TABLE Project_Staff (role_code VARCHAR, staff_id VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "前缀是“初始”的描述文档是哪种文档类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE '初始'"
      }
    ],
    "system": "CREATE TABLE Document_Types (document_description VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“初始”一词开始描述的文档的类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE '初始'"
      }
    ],
    "system": "CREATE TABLE Document_Types (document_description VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出具有文件描述为“常规”和“初始申请”的补助金的开始日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  '常规' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  '初始申请'"
      }
    ],
    "system": "CREATE TABLE Grants (grant_id VARCHAR, grant_start_date VARCHAR), CREATE TABLE Documents (document_type_code VARCHAR, grant_id VARCHAR), CREATE TABLE Document_Types (document_description VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有文件描述为“常规”和“初始申请”的补助金的开始日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  '常规' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  '初始申请'"
      }
    ],
    "system": "CREATE TABLE Grants (grant_id VARCHAR, grant_start_date VARCHAR), CREATE TABLE Documents (document_type_code VARCHAR, grant_id VARCHAR), CREATE TABLE Document_Types (document_description VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个补助最多能得到多少文件？列出补助金ID和号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Documents (grant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个补助金ID有多少文档，哪一个文档最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Documents (grant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找组织细节为“运动”的组织类型描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  '运动'"
      }
    ],
    "system": "CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR), CREATE TABLE Organisations (organisation_type VARCHAR, organisation_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "组织细节为“运动”的组织类型描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  '运动'"
      }
    ],
    "system": "CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR), CREATE TABLE Organisations (organisation_type VARCHAR, organisation_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被称为“赞助商”的组织的所有细节是什么？按升序排序结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  '赞助商' ORDER BY organisation_details"
      }
    ],
    "system": "CREATE TABLE Organisations (organisation_type VARCHAR), CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按升序对结果进行排序的所有被描述为“赞助商”组织的细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  '赞助商' ORDER BY organisation_details"
      }
    ],
    "system": "CREATE TABLE Organisations (organisation_type VARCHAR), CREATE TABLE organisation_Types (organisation_type VARCHAR, organisation_type_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从所有项目中产生了多少“专利”成果？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  '专利'"
      }
    ],
    "system": "CREATE TABLE Project_outcomes (outcome_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有项目中多少“专利”成果产出？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  '专利'"
      }
    ],
    "system": "CREATE TABLE Project_outcomes (outcome_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“1989-04-24 23:51:54”之前，有多少项目人员担任领导或开始工作？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Project_Staff WHERE role_code  =  '领导' OR date_from  <  '1989-04-24 23:51:54'"
      }
    ],
    "system": "CREATE TABLE Project_Staff (role_code VARCHAR, date_from INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“1989-04-24 23:51:54”之前，有多少项目成员是领导者或开始工作？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Project_Staff WHERE role_code  =  '领导' OR date_from  <  '1989-04-24 23:51:54'"
      }
    ],
    "system": "CREATE TABLE Project_Staff (role_code VARCHAR, date_from INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工离开项目的最后日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工离开项目的截止日期是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_to VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "细节是“机密”的项目的成果描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  '机密'"
      }
    ],
    "system": "CREATE TABLE Research_outcomes (outcome_code VARCHAR, outcome_description VARCHAR), CREATE TABLE Project_outcomes (outcome_code VARCHAR, project_id VARCHAR), CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "项目细节是“机密”的项目对应的成果描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  '机密'"
      }
    ],
    "system": "CREATE TABLE Research_outcomes (outcome_code VARCHAR, outcome_description VARCHAR), CREATE TABLE Project_outcomes (outcome_code VARCHAR, project_id VARCHAR), CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出具有最高成果计数的组织ID和及其成果计数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Projects (organisation_id VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有最多成果的组织的id是什么，以及有多少成果？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Projects (organisation_id VARCHAR, project_id VARCHAR), CREATE TABLE Project_outcomes (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出由组织发起的项目的项目细节"
      },
      {
        "from": "assistant",
        "value": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, organisation_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "项目最多的组织发起的项目的细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, organisation_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出研究人员的细节，并按升序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"
      }
    ],
    "system": "CREATE TABLE Research_Staff (staff_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "研究人员有哪些细节？按字母顺序顺序排列结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT staff_details FROM Research_Staff ORDER BY staff_details ASC"
      }
    ],
    "system": "CREATE TABLE Research_Staff (staff_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总计有多少个任务？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Tasks"
      }
    ],
    "system": "CREATE TABLE Tasks (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个任务？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Tasks"
      }
    ],
    "system": "CREATE TABLE Tasks (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个项目有多少任务？列出任务计数和项目细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Tasks (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个项目ID有多少任务？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Tasks (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工在“2003-04-19 15:06:20”和“2016-03-15 00:33:18”之内的角色是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_to INTEGER, role_code VARCHAR, date_from INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“2003-04-19 15:06:20”和“2016-03-15 00:33:18”之间，员工扮演什么角色？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Project_Staff WHERE date_from  >  '2003-04-19 15:06:20' AND date_to  <  '2016-03-15 00:33:18'"
      }
    ],
    "system": "CREATE TABLE Project_Staff (date_to INTEGER, role_code VARCHAR, date_from INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有项目成果的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code"
      }
    ],
    "system": "CREATE TABLE Research_outcomes (outcome_code VARCHAR, outcome_description VARCHAR), CREATE TABLE Project_outcomes (outcome_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有项目的成果描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code"
      }
    ],
    "system": "CREATE TABLE Research_outcomes (outcome_code VARCHAR, outcome_description VARCHAR), CREATE TABLE Project_outcomes (outcome_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工最常见的角色是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Project_Staff (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工最常见的角色是那个？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Project_Staff (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丹丹”有几个朋友？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  '丹丹'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丹丹”的朋友有多少个？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  '丹丹'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这个网络有多少“女”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Person WHERE gender  =  '女'"
      }
    ],
    "system": "CREATE TABLE Person (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "网络中性别是“女”的人数有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Person WHERE gender  =  '女'"
      }
    ],
    "system": "CREATE TABLE Person (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有人的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) FROM Person"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "表格中所有人的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) FROM Person"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "他们来自多少个不同的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT city) FROM Person"
      }
    ],
    "system": "CREATE TABLE Person (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人们的故乡来自于多少个不同的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT city) FROM Person"
      }
    ],
    "system": "CREATE TABLE Person (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "他们有多少种工作？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT job) FROM Person"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出了多少份不同的工作？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT job) FROM Person"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是最老的人？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE person (age INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最老的人叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE age  =  (SELECT max(age) FROM person)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE person (age INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是年龄最大的“学生”？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE job  =  '学生' AND age  =  (SELECT max(age) FROM person WHERE job  =  '学生' )"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR, name VARCHAR), CREATE TABLE person (age INTEGER, job VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "年龄最大的“学生”叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE job  =  '学生' AND age  =  (SELECT max(age) FROM person WHERE job  =  '学生' )"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR, name VARCHAR), CREATE TABLE person (age INTEGER, job VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是最年轻的“男”？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE gender  =  '男' AND age  =  (SELECT min(age) FROM person WHERE gender  =  '男' )"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR, gender VARCHAR), CREATE TABLE person (age INTEGER, name VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最年轻的“男”叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE gender  =  '男' AND age  =  (SELECT min(age) FROM person WHERE gender  =  '男' )"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR, gender VARCHAR), CREATE TABLE person (age INTEGER, name VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字叫“仲景”的“医生”年纪多大了？"
      },
      {
        "from": "assistant",
        "value": "SELECT age FROM Person WHERE job  =  '医生' AND name  =  '仲景'"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR, age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个叫“仲景”的“医生”的年龄是多少岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT age FROM Person WHERE job  =  '医生' AND name  =  '仲景'"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR, age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "年龄低于30岁的人是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE age  <  30"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "年龄在30岁以下的人叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE age  <  30"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人年龄大于30且工作是“摄影师”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  '摄影师'"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少“摄影师”的年龄超过30岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  '摄影师'"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个性别的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  gender FROM Person GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个性别的平均年龄有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  gender FROM Person GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同工作职称的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  job FROM Person GROUP BY job"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个工作的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  job FROM Person GROUP BY job"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同职称的“男”的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  job FROM Person WHERE gender  =  '男' GROUP BY job"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个工作的“男”平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  job FROM Person WHERE gender  =  '男' GROUP BY job"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同职称的最低年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(age) ,  job FROM Person GROUP BY job"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个工作年龄最小的人的年纪有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(age) ,  job FROM Person GROUP BY job"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个性别中年龄低于40岁的人的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个性别有多少人不足40岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄排序找出年龄比任何“摄影师”年龄都大的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  '摄影师') ORDER BY age"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR, name VARCHAR), CREATE TABLE person (age INTEGER, job VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有比至少一个“摄影师”年龄大的人的名字是什么？按年龄顺序排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE age  >  (SELECT min(age) FROM person WHERE job  =  '摄影师') ORDER BY age"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR, name VARCHAR), CREATE TABLE person (age INTEGER, job VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出年龄大于所有“摄影师”年龄的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  '摄影师')"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR), CREATE TABLE person (age INTEGER, job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人比每个“摄影师”年纪都大？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  '摄影师')"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, job VARCHAR), CREATE TABLE person (age INTEGER, job VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄的顺序列出所有的人的姓名和职称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  job FROM Person ORDER BY name"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按姓名的字母顺序排列的每个人的姓名和职称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  job FROM Person ORDER BY name"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄顺序降序排列所有人的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person ORDER BY age DESC"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄顺序排序的每个人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person ORDER BY age DESC"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据年龄顺序找出所有“男”的姓名和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE gender  =  '男' ORDER BY age"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄顺序排列的每个“男”的名字和年龄的结果是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Person WHERE gender  =  '男' ORDER BY age"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“丹丹”和“丽丽”共同的朋友的姓名和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '丹丹' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '丽丽'"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丹丹”和“丽丽”共同的朋友的姓名和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '丹丹' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '丽丽'"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“丹丹”或“丽丽”的朋友的姓名和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '丹丹' OR T2.friend  =  '丽丽'"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丹丹”的朋友或者“丽丽”的朋友的姓名和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '丹丹' OR T2.friend  =  '丽丽'"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出拥有年龄在40岁以上和30岁以下的朋友的人的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个有40岁以上和30岁以下的朋友的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有年龄在40岁以上但不在30岁以下的朋友的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有年龄在40岁以上但不在30岁以下的朋友的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有“学生”朋友的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  '学生'"
      }
    ],
    "system": "CREATE TABLE person (name VARCHAR), CREATE TABLE Person (job VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“学生”朋友的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  '学生'"
      }
    ],
    "system": "CREATE TABLE person (name VARCHAR), CREATE TABLE Person (job VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出正好有一个朋友的人。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE PersonFriend (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "正好有一个朋友的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE PersonFriend (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是“张波”的朋友？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  '张波'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“张波”的朋友是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  '张波'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到和“张波”交朋友的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '张波'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“张波”的所有朋友的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '张波'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到和“仲景”交朋友的“女”的名字"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '仲景' AND T1.gender  =  '女'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR, gender VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有和“仲景”交朋友的“女”的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  '仲景' AND T1.gender  =  '女'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR, gender VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“丽丽”的“女”朋友。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  '丽丽' AND T1.gender  =  '女'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR, gender VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丽丽”的“女”朋友是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  '丽丽' AND T1.gender  =  '女'"
      }
    ],
    "system": "CREATE TABLE Person (name VARCHAR, gender VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“丽丽”的工作是“医生”的“男”朋友？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  '丽丽' AND T1.gender  =  '男' AND T1.job  =  '医生'"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR, name VARCHAR, gender VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是“丽丽”的“医生”朋友？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  '丽丽' AND T1.gender  =  '男' AND T1.job  =  '医生'"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR, name VARCHAR, gender VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁有一个来自“上海”的朋友？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  '上海'"
      }
    ],
    "system": "CREATE TABLE Person (city VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“上海”的所有朋友的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  '上海'"
      }
    ],
    "system": "CREATE TABLE Person (city VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁有比平均年龄小的朋友？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR), CREATE TABLE person (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比所有朋友中平均年龄小的朋友的不同名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR), CREATE TABLE person (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁有比平均年龄大的朋友？给出他们的朋友和他们的年龄"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR), CREATE TABLE person (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有比平均年龄大的人的姓名、朋友和年龄是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR), CREATE TABLE person (age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是“仲景”关系最长的朋友？"
      },
      {
        "from": "assistant",
        "value": "SELECT friend FROM PersonFriend WHERE name =  '仲景' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  '仲景')"
      }
    ],
    "system": "CREATE TABLE PersonFriend (YEAR INTEGER, name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“仲景”与哪位朋友有最长久的友谊？"
      },
      {
        "from": "assistant",
        "value": "SELECT friend FROM PersonFriend WHERE name =  '仲景' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  '仲景')"
      }
    ],
    "system": "CREATE TABLE PersonFriend (YEAR INTEGER, name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“仲景”关系最长的朋友的年龄是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  '仲景' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  '仲景')"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“仲景”相处时间最长的朋友的年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  '仲景' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  '仲景')"
      }
    ],
    "system": "CREATE TABLE Person (age VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出与“丽丽”成为朋友时间最短的人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM PersonFriend WHERE friend =  '丽丽' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  '丽丽')"
      }
    ],
    "system": "CREATE TABLE PersonFriend (YEAR INTEGER, name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "和“丽丽”交朋友时间最短的人叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM PersonFriend WHERE friend =  '丽丽' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  '丽丽')"
      }
    ],
    "system": "CREATE TABLE PersonFriend (YEAR INTEGER, name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出和“丽丽”交往最久的人的姓名、年龄和工作头衔。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  '丽丽' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  '丽丽')"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR, age VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (YEAR INTEGER, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“丽丽”交最长时间朋友的姓名、年龄和工作是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  '丽丽' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  '丽丽')"
      }
    ],
    "system": "CREATE TABLE Person (job VARCHAR, age VARCHAR, name VARCHAR), CREATE TABLE PersonFriend (YEAR INTEGER, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有朋友的人是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"
      }
    ],
    "system": "CREATE TABLE person (name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有朋友的人的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend"
      }
    ],
    "system": "CREATE TABLE person (name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "朋友的平均年龄最大的人是哪位？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "朋友平均年龄最大的人叫什么名字？平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  avg(T1.age) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend GROUP BY T2.name ORDER BY avg(T1.age) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Person (age INTEGER, name VARCHAR), CREATE TABLE PersonFriend (name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有朋友住在“郑州”市的总人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  '郑州')"
      }
    ],
    "system": "CREATE TABLE PersonFriend (city VARCHAR, name VARCHAR, friend VARCHAR), CREATE TABLE person (city VARCHAR, name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“郑州”没有朋友的人的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  '郑州')"
      }
    ],
    "system": "CREATE TABLE PersonFriend (city VARCHAR, name VARCHAR, friend VARCHAR), CREATE TABLE person (city VARCHAR, name VARCHAR, friend VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“丽丽”的朋友。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  '丽丽' AND T4.name != '丽丽'"
      }
    ],
    "system": "CREATE TABLE PersonFriend (name VARCHAR), CREATE TABLE Person (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丽丽”的朋友们的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  '丽丽' AND T4.name != '丽丽'"
      }
    ],
    "system": "CREATE TABLE PersonFriend (name VARCHAR), CREATE TABLE Person (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少名成员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM member"
      }
    ],
    "system": "CREATE TABLE member (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母升序顺序列出成员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM member ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE member (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "成员的名字和国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Country FROM member"
      }
    ],
    "system": "CREATE TABLE member (Country VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示国家“美国”或“加拿大”的成员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM member WHERE Country  =  \"美国\" OR Country  =  \"加拿大\""
      }
    ],
    "system": "CREATE TABLE member (Country VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的国家和每个国家成员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country ,  COUNT(*) FROM member GROUP BY Country"
      }
    ],
    "system": "CREATE TABLE member (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示成员间最常见的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE member (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家有两个以上成员？"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE member (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示大学的领导姓名和地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT Leader_Name ,  College_Location FROM college"
      }
    ],
    "system": "CREATE TABLE college (College_Location VARCHAR, Leader_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示会员的姓名和他们入学大学名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID"
      }
    ],
    "system": "CREATE TABLE college (Name VARCHAR, College_ID VARCHAR), CREATE TABLE member (Name VARCHAR, College_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照会员名字升序的字母顺序，显示会员姓名和他们所去大学的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC"
      }
    ],
    "system": "CREATE TABLE college (College_Location VARCHAR, College_ID VARCHAR), CREATE TABLE member (Name VARCHAR, College_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与来自国家“加拿大”的成员相关的大学的不同领导者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  \"加拿大\""
      }
    ],
    "system": "CREATE TABLE college (College_ID VARCHAR, Leader_Name VARCHAR), CREATE TABLE member (Country VARCHAR, College_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示成员的姓名和装饰主题。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Decoration_Theme FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID"
      }
    ],
    "system": "CREATE TABLE member (Member_ID VARCHAR, Name VARCHAR), CREATE TABLE round (Member_ID VARCHAR, Decoration_Theme VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在轮次中具有高于等级3的成员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID WHERE T2.Rank_in_Round  >  3"
      }
    ],
    "system": "CREATE TABLE member (Member_ID VARCHAR, Name VARCHAR), CREATE TABLE round (Rank_in_Round INTEGER, Member_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在轮次中以升序排列成员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC"
      }
    ],
    "system": "CREATE TABLE member (Member_ID VARCHAR, Name VARCHAR), CREATE TABLE round (Member_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有参加任何回合的成员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM round)"
      }
    ],
    "system": "CREATE TABLE member (Member_ID VARCHAR, Name VARCHAR), CREATE TABLE round (Member_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照文档名称的字母顺序查找所有文档的名称和访问次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name ,  access_count FROM documents ORDER BY document_name"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, access_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照文档名称的字母顺序排序的所有文档的名称和访问次数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name ,  access_count FROM documents ORDER BY document_name"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, access_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出被访问次数最多的文档的名称以及其被访问的次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, access_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被访问次数最多的文档的名称以及被访问次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, access_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有超过4个文档的文档类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"
      }
    ],
    "system": "CREATE TABLE documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "超过4个文档的文档类型的编码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4"
      }
    ],
    "system": "CREATE TABLE documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最流行的文档类型中所有文档的总访问计数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_type_code VARCHAR, access_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最常见文档类型的文档的总访问次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_type_code VARCHAR, access_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文件的平均访问次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(access_count) FROM documents"
      }
    ],
    "system": "CREATE TABLE documents (access_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有文件的平均访问次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(access_count) FROM documents"
      }
    ],
    "system": "CREATE TABLE documents (access_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "访问次数最少的文档的结构是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_structure_code VARCHAR), CREATE TABLE document_structures (document_structure_code VARCHAR, document_structure_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回被访问次数最少的文档的结构描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.document_structure_description FROM documents AS t1 JOIN document_structures AS t2 ON t1.document_structure_code  =  t2.document_structure_code GROUP BY t1.document_structure_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_structure_code VARCHAR), CREATE TABLE document_structures (document_structure_code VARCHAR, document_structure_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“张伟的简历”的文档的文件类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM documents WHERE document_name  =  \"张伟的简历\""
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回名为“张伟的简历”的文档的类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM documents WHERE document_name  =  \"张伟的简历\""
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找既属于最流行的三种类型之一又具有最流行的三种结构之一的文档列表。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_type_code VARCHAR, document_structure_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有三种最常见类型之一和三种最常见结构之一的文档的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 3 INTERSECT SELECT document_name FROM documents GROUP BY document_structure_code ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_type_code VARCHAR, document_structure_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么文档类型拥有超过10000的总访问量。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000"
      }
    ],
    "system": "CREATE TABLE documents (document_type_code VARCHAR, access_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回总访问计数不超过10000的文档类型的代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING sum(access_count)  >  10000"
      }
    ],
    "system": "CREATE TABLE documents (document_type_code VARCHAR, access_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“张伟的简历”的文件的所有章节标题是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"张伟的简历\""
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_code VARCHAR), CREATE TABLE document_sections (section_title VARCHAR, document_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出名字是“张伟的简历”的文档的章节标题。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"张伟的简历\""
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_code VARCHAR), CREATE TABLE document_sections (section_title VARCHAR, document_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有文件中无任何章节的文件的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_code VARCHAR), CREATE TABLE document_sections (document_name VARCHAR, document_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有任何章节的文件的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name FROM documents WHERE document_code NOT IN (SELECT document_code FROM document_sections)"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_code VARCHAR), CREATE TABLE document_sections (document_name VARCHAR, document_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出最受欢迎角色的用户所有的用户名和密码。"
      },
      {
        "from": "assistant",
        "value": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE users (role_code VARCHAR, user_name VARCHAR, password VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用户最常用的角色的用户名和密码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE users (role_code VARCHAR, user_name VARCHAR, password VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有功能区域“致谢”的文档的平均访问次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"致谢\""
      }
    ],
    "system": "CREATE TABLE documents (document_code VARCHAR, access_count INTEGER), CREATE TABLE document_functional_areas (functional_area_code VARCHAR, document_code VARCHAR), CREATE TABLE functional_areas (functional_area_description VARCHAR, functional_area_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "功能区域描述为“致谢”的文档的平均访问次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(t1.access_count) FROM documents AS t1 JOIN document_functional_areas AS t2 ON t1.document_code  =  t2.document_code JOIN functional_areas AS t3 ON t2.functional_area_code  =  t3.functional_area_code WHERE t3.functional_area_description  =  \"致谢\""
      }
    ],
    "system": "CREATE TABLE documents (document_code VARCHAR, access_count INTEGER), CREATE TABLE document_functional_areas (functional_area_code VARCHAR, document_code VARCHAR), CREATE TABLE functional_areas (functional_area_description VARCHAR, functional_area_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找没有任何图像的文档的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_code VARCHAR), CREATE TABLE document_sections (section_id VARCHAR, document_code VARCHAR), CREATE TABLE document_sections_images (section_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有任何图像的文档的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_code VARCHAR), CREATE TABLE document_sections (section_id VARCHAR, document_code VARCHAR), CREATE TABLE document_sections_images (section_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多章节数的文档的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_code VARCHAR), CREATE TABLE document_sections (document_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回拥有最多章节数的文档的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR, document_code VARCHAR), CREATE TABLE document_sections (document_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出包含“CV”的所有文档的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name FROM documents WHERE document_name LIKE \"简历\""
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含子字符串“CV”的文档的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name FROM documents WHERE document_name LIKE \"简历\""
      }
    ],
    "system": "CREATE TABLE documents (document_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少用户曾登录过？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM users WHERE user_login  =  1"
      }
    ],
    "system": "CREATE TABLE users (user_login VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算登录的用户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM users WHERE user_login  =  1"
      }
    ],
    "system": "CREATE TABLE users (user_login VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找已登录的用户中最流行的角色的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE ROLES (role_code VARCHAR, user_login VARCHAR, role_description VARCHAR), CREATE TABLE users (role_code VARCHAR, user_login VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在已经登录的用户中，最流行的角色描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE ROLES (role_code VARCHAR, user_login VARCHAR, role_description VARCHAR), CREATE TABLE users (role_code VARCHAR, user_login VARCHAR, role_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有最不流行结构的文档的平均访问计数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_structure_code VARCHAR, access_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有最不常用结构的文档的平均访问计数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE documents (document_structure_code VARCHAR, access_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按名称的顺序列出所有的图像名称和URL。"
      },
      {
        "from": "assistant",
        "value": "SELECT image_name ,  image_url FROM images ORDER BY image_name"
      }
    ],
    "system": "CREATE TABLE images (image_url VARCHAR, image_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的图像名称和URL是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT image_name ,  image_url FROM images ORDER BY image_name"
      }
    ],
    "system": "CREATE TABLE images (image_url VARCHAR, image_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个角色中的用户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  role_code FROM users GROUP BY role_code"
      }
    ],
    "system": "CREATE TABLE users (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用户的角色代码有哪些，每个用户有多少个？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  role_code FROM users GROUP BY role_code"
      }
    ],
    "system": "CREATE TABLE users (role_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些文档类型有超过2个对应的文档？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出具有超过2个对应文档的文档类型的代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少家公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Companies"
      }
    ],
    "system": "CREATE TABLE Companies (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计公司的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Companies"
      }
    ],
    "system": "CREATE TABLE Companies (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以市场价值递减的顺序列出公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"
      }
    ],
    "system": "CREATE TABLE Companies (name VARCHAR, Market_Value_billion VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按公司市场价值的降序对公司名称进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Companies ORDER BY Market_Value_billion DESC"
      }
    ],
    "system": "CREATE TABLE Companies (name VARCHAR, Market_Value_billion VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总部不是“中国”的公司名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Companies WHERE Headquarters != '中国'"
      }
    ],
    "system": "CREATE TABLE Companies (Headquarters VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出总部不在“中国”的公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM Companies WHERE Headquarters != '中国'"
      }
    ],
    "system": "CREATE TABLE Companies (Headquarters VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按公司名称升序排列的每个公司的名称和资产是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC"
      }
    ],
    "system": "CREATE TABLE Companies (Assets_billion VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按公司名称的升序排列各公司的名称和资产。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC"
      }
    ],
    "system": "CREATE TABLE Companies (Assets_billion VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "公司的平均利润是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Profits_billion) FROM Companies"
      }
    ],
    "system": "CREATE TABLE Companies (Profits_billion INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算公司的平均利润。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Profits_billion) FROM Companies"
      }
    ],
    "system": "CREATE TABLE Companies (Profits_billion INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些行业不是“银行业”的公司的最高销售额和最低销售额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"银行业\""
      }
    ],
    "system": "CREATE TABLE Companies (Sales_billion INTEGER, Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不在“银行业”行业的公司的最大和最小销售额。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"银行业\""
      }
    ],
    "system": "CREATE TABLE Companies (Sales_billion INTEGER, Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "公司有多少不同的行业？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Industry) FROM Companies"
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计公司的不同行业数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Industry) FROM Companies"
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以建筑物高度降序列出建筑物名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM buildings ORDER BY Height DESC"
      }
    ],
    "system": "CREATE TABLE buildings (Height VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "建筑高度按降序排列的建筑物名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM buildings ORDER BY Height DESC"
      }
    ],
    "system": "CREATE TABLE buildings (Height VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最大高度的建筑物的故事。"
      },
      {
        "from": "assistant",
        "value": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE buildings (Height VARCHAR, Stories VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高建筑物的故事是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE buildings (Height VARCHAR, Stories VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出办公室所在建筑物的名称以及公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id"
      }
    ],
    "system": "CREATE TABLE Office_locations (building_id VARCHAR, company_id VARCHAR), CREATE TABLE buildings (id VARCHAR, name VARCHAR), CREATE TABLE Companies (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个公司，返回其办公室所在的建筑物的名称和公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name ,  T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id"
      }
    ],
    "system": "CREATE TABLE Office_locations (building_id VARCHAR, company_id VARCHAR), CREATE TABLE buildings (id VARCHAR, name VARCHAR), CREATE TABLE Companies (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有超过一个公司办公室的建筑物的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE Office_locations (building_id VARCHAR, company_id VARCHAR), CREATE TABLE buildings (id VARCHAR, name VARCHAR), CREATE TABLE Companies (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些建筑物有一个以上的公司办公室？给出建筑物名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE Office_locations (building_id VARCHAR, company_id VARCHAR), CREATE TABLE buildings (id VARCHAR, name VARCHAR), CREATE TABLE Companies (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示拥有公司办公室最多的建筑的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Office_locations (building_id VARCHAR, company_id VARCHAR), CREATE TABLE buildings (id VARCHAR, name VARCHAR), CREATE TABLE Companies (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪家公司拥有最多的公司办公室？给出建筑物名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Office_locations (building_id VARCHAR, company_id VARCHAR), CREATE TABLE buildings (id VARCHAR, name VARCHAR), CREATE TABLE Companies (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请按楼层升序列出“值班”状态的建筑物的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM buildings WHERE Status  =  \"值班\" ORDER BY Stories ASC"
      }
    ],
    "system": "CREATE TABLE buildings (Status VARCHAR, name VARCHAR, Stories VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出处于“值班”状态的建筑物的名称，并按照建筑物层级的升序对其进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM buildings WHERE Status  =  \"值班\" ORDER BY Stories ASC"
      }
    ],
    "system": "CREATE TABLE buildings (Status VARCHAR, name VARCHAR, Stories VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示每个行业的名称以及该行业相应的公司数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry"
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个行业的名称和每个行业中对应的公司数量是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Industry ,  COUNT(*) FROM Companies GROUP BY Industry"
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请按照公司数量的降序显示公司的行业。"
      },
      {
        "from": "assistant",
        "value": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按每个行业的公司数量的降序对所有行业进行排序"
      },
      {
        "from": "assistant",
        "value": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出大多数公司共享的行业。"
      },
      {
        "from": "assistant",
        "value": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个行业有最多的公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT Industry FROM Companies GROUP BY Industry ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有公司办公室的建筑名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)"
      }
    ],
    "system": "CREATE TABLE buildings (building_id VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE Office_locations (building_id VARCHAR, id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些建筑物没有公司的办公室？给出建筑的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM buildings WHERE id NOT IN (SELECT building_id FROM Office_locations)"
      }
    ],
    "system": "CREATE TABLE buildings (building_id VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE Office_locations (building_id VARCHAR, id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示总部设在“中国”的公司和总部设在“中国”的公司所共有的行业。"
      },
      {
        "from": "assistant",
        "value": "SELECT Industry FROM Companies WHERE Headquarters  =  \"中国\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"中国\""
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR, Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总部设在“中国”的公司和总部设在“中国”的公司所共有的行业是那些？"
      },
      {
        "from": "assistant",
        "value": "SELECT Industry FROM Companies WHERE Headquarters  =  \"中国\" INTERSECT SELECT Industry FROM Companies WHERE Headquarters  =  \"中国\""
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR, Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出其行业是“银行业”或“综合”的公司。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Companies WHERE Industry  =  \"银行业\" OR Industry  =  \"综合\""
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "行业是“银行业”或“综合”的公司有多少家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Companies WHERE Industry  =  \"银行业\" OR Industry  =  \"综合\""
      }
    ],
    "system": "CREATE TABLE Companies (Industry VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示超过两家公司所共享的总部地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Companies (Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个总部位置被超过2家公司所共享？"
      },
      {
        "from": "assistant",
        "value": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Companies (Headquarters VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Products"
      }
    ],
    "system": "CREATE TABLE Products (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按价格升序列出产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
      }
    ],
    "system": "CREATE TABLE Products (Product_Price VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "产品名称和型号代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name ,  Product_Type_Code FROM Products"
      }
    ],
    "system": "CREATE TABLE Products (Product_Type_Code VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“快餐”或“交易守则”的产品的价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"快餐\" OR Product_Name  =  \"交易守则\""
      }
    ],
    "system": "CREATE TABLE Products (Product_Price VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "产品的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Product_Price) FROM Products"
      }
    ],
    "system": "CREATE TABLE Products (Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "价格最高的产品叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Products (Product_Price VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的产品类型代码以及每个类型代码的产品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Type_Code ,  COUNT(*) FROM Products GROUP BY Product_Type_Code"
      }
    ],
    "system": "CREATE TABLE Products (Product_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示跨产品间最常见类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Products (Product_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有至少两个产品的产品类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Products (Product_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示产品价格高于4500和产品价格低于3000的产品型号代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000"
      }
    ],
    "system": "CREATE TABLE Products (Product_Type_Code VARCHAR, Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示产品的名称和事件的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name"
      }
    ],
    "system": "CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR), CREATE TABLE Products_in_Events (Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照事件的数量按降序排序显示产品的名称和它们对应的事件数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Product_Name ,  COUNT(*) FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR), CREATE TABLE Products_in_Events (Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两个事件中的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR), CREATE TABLE Products_in_Events (Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照产品名称字母升序显示至少包含两个事件中的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name"
      }
    ],
    "system": "CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR), CREATE TABLE Products_in_Events (Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有任何事件的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)"
      }
    ],
    "system": "CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR), CREATE TABLE Products_in_Events (Product_Name VARCHAR, Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少艺术品？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM artwork"
      }
    ],
    "system": "CREATE TABLE artwork (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序升序排列艺术品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM artwork ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE artwork (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出不属于“抽象”类型的作品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM artwork WHERE TYPE != \"抽象\""
      }
    ],
    "system": "CREATE TABLE artwork (Name VARCHAR, TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "艺术节的名称和地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Festival_Name ,  LOCATION FROM festival_detail"
      }
    ],
    "system": "CREATE TABLE festival_detail (LOCATION VARCHAR, Festival_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照每年的升序排列的艺术节主席的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Chair_Name FROM festival_detail ORDER BY YEAR ASC"
      }
    ],
    "system": "CREATE TABLE festival_detail (Chair_Name VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "观众人数最多的艺术节地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM festival_detail ORDER BY Num_of_Audience DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE festival_detail (LOCATION VARCHAR, Num_of_Audience VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2007年度的艺术节名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Festival_Name FROM festival_detail WHERE YEAR  =  2007"
      }
    ],
    "system": "CREATE TABLE festival_detail (Festival_Name VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "艺术节观众的平均人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Num_of_Audience) FROM festival_detail"
      }
    ],
    "system": "CREATE TABLE festival_detail (Num_of_Audience INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示最近三个艺术节的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE festival_detail (Festival_Name VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个提名，显示作品的名称和提名它的艺术节名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID"
      }
    ],
    "system": "CREATE TABLE nomination (Festival_ID VARCHAR, Artwork_ID VARCHAR), CREATE TABLE artwork (Artwork_ID VARCHAR, Name VARCHAR), CREATE TABLE festival_detail (Festival_ID VARCHAR, Festival_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示不同类型在2007的艺术节中被提名的艺术品。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007"
      }
    ],
    "system": "CREATE TABLE nomination (Festival_ID VARCHAR, Artwork_ID VARCHAR), CREATE TABLE artwork (Artwork_ID VARCHAR, Type VARCHAR), CREATE TABLE festival_detail (Festival_ID VARCHAR, Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按提名年度的升序显示艺术品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID ORDER BY T3.Year"
      }
    ],
    "system": "CREATE TABLE nomination (Festival_ID VARCHAR, Artwork_ID VARCHAR), CREATE TABLE artwork (Artwork_ID VARCHAR, Name VARCHAR), CREATE TABLE festival_detail (Festival_ID VARCHAR, Year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示提及“抽象”类型的艺术品的艺术节名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T2.Type  =  \"抽象\""
      }
    ],
    "system": "CREATE TABLE nomination (Festival_ID VARCHAR, Artwork_ID VARCHAR), CREATE TABLE artwork (Artwork_ID VARCHAR, Type VARCHAR), CREATE TABLE festival_detail (Festival_ID VARCHAR, Festival_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示至少有两项艺术品提名的艺术节的名称和标识。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Festival_ID ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE nomination (Festival_ID VARCHAR, Artwork_ID VARCHAR), CREATE TABLE artwork (Artwork_ID VARCHAR), CREATE TABLE festival_detail (Festival_ID VARCHAR, Festival_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每一个艺术节的ID、名字和它所提名的艺术品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Festival_ID ,  T3.Festival_Name ,  COUNT(*) FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID"
      }
    ],
    "system": "CREATE TABLE nomination (Festival_ID VARCHAR, Artwork_ID VARCHAR), CREATE TABLE artwork (Artwork_ID VARCHAR), CREATE TABLE festival_detail (Festival_ID VARCHAR, Festival_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同类型的艺术品及每种类型的艺术品对应的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  COUNT(*) FROM artwork GROUP BY TYPE"
      }
    ],
    "system": "CREATE TABLE artwork (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出最常见的艺术品类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE artwork (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出有一个以上艺术节的年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE festival_detail (YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出未被提名的作品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM Artwork WHERE Artwork_ID NOT IN (SELECT Artwork_ID FROM nomination)"
      }
    ],
    "system": "CREATE TABLE Artwork (Artwork_ID VARCHAR, Name VARCHAR), CREATE TABLE nomination (Artwork_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示2008或2010年的观众数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE festival_detail (Num_of_Audience VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参观这些艺术节的观众总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Num_of_Audience) FROM festival_detail"
      }
    ],
    "system": "CREATE TABLE festival_detail (Num_of_Audience INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一年“美国”国内和“美国”国外都有艺术节？"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR FROM festival_detail WHERE LOCATION  =  '美国' INTERSECT SELECT YEAR FROM festival_detail WHERE LOCATION != '美国'"
      }
    ],
    "system": "CREATE TABLE festival_detail (LOCATION VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少处建筑物？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM premises"
      }
    ],
    "system": "CREATE TABLE premises (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是不同的建筑物的类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT premises_type FROM premises"
      }
    ],
    "system": "CREATE TABLE premises (premises_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "通过建筑物类型查找所有房屋和订单的类型和细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT premises_type ,  premise_details FROM premises ORDER BY premises_type"
      }
    ],
    "system": "CREATE TABLE premises (premise_details VARCHAR, premises_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个建筑物类型和该类型的建筑物数。"
      },
      {
        "from": "assistant",
        "value": "SELECT premises_type ,  count(*) FROM premises GROUP BY premises_type"
      }
    ],
    "system": "CREATE TABLE premises (premises_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有不同的产品类别以及每个类别中的邮件的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_category ,  count(*) FROM mailshot_campaigns GROUP BY product_category"
      }
    ],
    "system": "CREATE TABLE mailshot_campaigns (product_category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在没有任何邮件的情况下显示客户的姓名和电话。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE mailshot_customers (customer_phone VARCHAR, customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示用带有“无回应”结果代码的发放邮件客户的姓名和电话。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  '无回应'"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE mailshot_customers (outcome_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示邮件快照的结果代码以及每个结果代码中的邮件快照数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT outcome_code ,  count(*) FROM mailshot_customers GROUP BY outcome_code"
      }
    ],
    "system": "CREATE TABLE mailshot_customers (outcome_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有2个邮件的客户且结果代码是“预定”的客户姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  '预定' GROUP BY T1.customer_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE mailshot_customers (customer_id VARCHAR), CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示邮件最多的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE mailshot_customers (customer_id VARCHAR), CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在邮件结果中同时具有“预定”邮件快照和具有“无回应”邮件快照的客户的姓名和支付方法是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  '预定' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  '无回应'"
      }
    ],
    "system": "CREATE TABLE mailshot_customers (outcome_code VARCHAR, customer_id VARCHAR), CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "针对所有客户地址显示建筑物类型和地址类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.premises_type ,  T1.address_type_code FROM customer_addresses AS T1 JOIN premises AS T2 ON T1.premise_id  =  T2.premise_id"
      }
    ],
    "system": "CREATE TABLE customer_addresses (address_type_code VARCHAR, premise_id VARCHAR), CREATE TABLE premises (premise_id VARCHAR, premises_type VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于所有的客户地址，有什么不同的地址类型代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT address_type_code FROM customer_addresses"
      }
    ],
    "system": "CREATE TABLE customer_addresses (address_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“取消”或“付款”订单状态的客户订单的装运费和客户ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  '取消' OR order_status_code  =  '付款'"
      }
    ],
    "system": "CREATE TABLE customer_orders (order_status_code VARCHAR, customer_id VARCHAR, order_shipping_charges VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有配送方法是“顺丰快递”和订单状态“付款”的订单客户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE shipping_method_code  =  '顺丰快递' AND order_status_code  =  '付款'"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一共有多少门课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM COURSE"
      }
    ],
    "system": "CREATE TABLE COURSE (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计课程的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM COURSE"
      }
    ],
    "system": "CREATE TABLE COURSE (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少课程有超过2学分？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM COURSE WHERE Credits  >  2"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计超过2学分的课程数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM COURSE WHERE Credits  >  2"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出1学分的课程名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT CName FROM COURSE WHERE Credits  =  1"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits VARCHAR, CName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1学分的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT CName FROM COURSE WHERE Credits  =  1"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits VARCHAR, CName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些课程是在“星期一”那一天教授的？"
      },
      {
        "from": "assistant",
        "value": "SELECT CName FROM COURSE WHERE Days  =  \"星期一\""
      }
    ],
    "system": "CREATE TABLE COURSE (CName VARCHAR, Days VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“星期一”那一天教授的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT CName FROM COURSE WHERE Days  =  \"星期一\""
      }
    ],
    "system": "CREATE TABLE COURSE (CName VARCHAR, Days VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在分公司“管理部”的部门数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"管理部\""
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (Division VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在分公司“管理部”有多少个部门？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"管理部\""
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (Division VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "268号房的电话是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DPhone VARCHAR, Room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给位置在268号房间内的部门打电话。"
      },
      {
        "from": "assistant",
        "value": "SELECT DPhone FROM DEPARTMENT WHERE Room  =  268"
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DPhone VARCHAR, Room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到至少有一个成绩为“B”的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\""
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生至少有一门成绩是“B”级？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT StuID) FROM ENROLLED_IN WHERE Grade  =  \"B\""
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有字母分数中找出所有字母等级的最大和最小等级点。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION"
      }
    ],
    "system": "CREATE TABLE GRADECONVERSION (gradepoint INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "分数的最大值和最小值是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION"
      }
    ],
    "system": "CREATE TABLE GRADECONVERSION (gradepoint INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出名字包含“安”字的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE 'a'"
      }
    ],
    "system": "CREATE TABLE STUDENT (Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中包含“安”的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE 'a'"
      }
    ],
    "system": "CREATE TABLE STUDENT (Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找住在“行政”大楼的男性（性别是“男”）教职员工的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"男\" AND Building  =  \"行政\""
      }
    ],
    "system": "CREATE TABLE FACULTY (sex VARCHAR, Lname VARCHAR, Building VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“行政”大楼的男性（性别是“男”）教职员工的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"男\" AND Building  =  \"行政\""
      }
    ],
    "system": "CREATE TABLE FACULTY (sex VARCHAR, Lname VARCHAR, Building VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到居住在“行政”大楼的高级教授的房间。"
      },
      {
        "from": "assistant",
        "value": "SELECT Room FROM FACULTY WHERE Rank  =  \"教授\" AND Building  =  \"行政\""
      }
    ],
    "system": "CREATE TABLE FACULTY (Rank VARCHAR, Building VARCHAR, Room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "居住在“行政”大楼的高级教授的房间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Room FROM FACULTY WHERE Rank  =  \"教授\" AND Building  =  \"行政\""
      }
    ],
    "system": "CREATE TABLE FACULTY (Rank VARCHAR, Building VARCHAR, Room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到位置在“逸夫”大楼的部门的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"逸夫\""
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DName VARCHAR, Building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“逸夫”大楼内的部门名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DName FROM DEPARTMENT WHERE Building  =  \"逸夫\""
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DName VARCHAR, Building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出以学分升序排列的所有课程信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM COURSE ORDER BY Credits"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以学分升序排列的所有课程信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM COURSE ORDER BY Credits"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按学分排序列出的课程名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT CName FROM COURSE ORDER BY Credits"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits VARCHAR, CName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按学分排序的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT CName FROM COURSE ORDER BY Credits"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits VARCHAR, CName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄递减顺序查找学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM STUDENT ORDER BY Age DESC"
      }
    ],
    "system": "CREATE TABLE STUDENT (Age VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄顺序从最大到最小排列的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM STUDENT ORDER BY Age DESC"
      }
    ],
    "system": "CREATE TABLE STUDENT (Age VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄递减顺序查找女性学生的姓氏（性别为“女性”）。"
      },
      {
        "from": "assistant",
        "value": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC"
      }
    ],
    "system": "CREATE TABLE STUDENT (Age VARCHAR, LName VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄降序顺序排序的“女性”学生的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC"
      }
    ],
    "system": "CREATE TABLE STUDENT (Age VARCHAR, LName VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据字母顺序找出在“行政楼”建筑中机构工作的工作人员的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT Lname FROM FACULTY WHERE Building  =  \"行政楼\" ORDER BY Lname"
      }
    ],
    "system": "CREATE TABLE FACULTY (Lname VARCHAR, Building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据字母顺序的在“行政楼”建筑中机构工作的工作人员的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Lname FROM FACULTY WHERE Building  =  \"行政楼\" ORDER BY Lname"
      }
    ],
    "system": "CREATE TABLE FACULTY (Lname VARCHAR, Building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序查找职级是“教授”的职工的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM FACULTY WHERE Rank  =  \"教授\" ORDER BY Fname"
      }
    ],
    "system": "CREATE TABLE FACULTY (Rank VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的职级是“教授”的职工的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM FACULTY WHERE Rank  =  \"教授\" ORDER BY Fname"
      }
    ],
    "system": "CREATE TABLE FACULTY (Rank VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到辅修人数最多的系的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DNO VARCHAR, DName VARCHAR), CREATE TABLE MINOR_IN (DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有辅修学生最多的专业叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DNO VARCHAR, DName VARCHAR), CREATE TABLE MINOR_IN (DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有学生参与辅修的专业的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO"
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DNO VARCHAR, DName VARCHAR), CREATE TABLE MINOR_IN (DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有学生参与辅修的专业的名字 是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO"
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DNO VARCHAR, DName VARCHAR), CREATE TABLE MINOR_IN (DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出拥有最少会员人数的部门的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DNO VARCHAR, DName VARCHAR), CREATE TABLE MEMBER_OF (DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最少会员人数的部门名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DNO VARCHAR, DName VARCHAR), CREATE TABLE MEMBER_OF (DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出教职人员最少的教职人员的职级。"
      },
      {
        "from": "assistant",
        "value": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE FACULTY (Rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是最不常见的教职员工职级？"
      },
      {
        "from": "assistant",
        "value": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE FACULTY (Rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教授课程数前三多的老师的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE COURSE (Instructor VARCHAR), CREATE TABLE FACULTY (FacID VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教授课程数最多的3名老师的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE COURSE (Instructor VARCHAR), CREATE TABLE FACULTY (FacID VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教课最多的老师住在哪栋楼里？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE COURSE (Instructor VARCHAR), CREATE TABLE FACULTY (FacID VARCHAR, Building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出教授课程数最多的老师住的大楼。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE COURSE (Instructor VARCHAR), CREATE TABLE FACULTY (FacID VARCHAR, Building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有五人参加的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"
      }
    ],
    "system": "CREATE TABLE COURSE (CID VARCHAR, CName VARCHAR), CREATE TABLE ENROLLED_IN (CID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出至少有五人的课程的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5"
      }
    ],
    "system": "CREATE TABLE COURSE (CID VARCHAR, CName VARCHAR), CREATE TABLE ENROLLED_IN (CID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出具有课程名称为“计算机基础”的教师的名字和姓氏"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"计算机基础\""
      }
    ],
    "system": "CREATE TABLE COURSE (Instructor VARCHAR, CName VARCHAR), CREATE TABLE FACULTY (FacID VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有“计算机基础”课程的老师的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"计算机基础\""
      }
    ],
    "system": "CREATE TABLE COURSE (Instructor VARCHAR, CName VARCHAR), CREATE TABLE FACULTY (FacID VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找教授“计算机导论”的部门名称和房间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"计算机导论\""
      }
    ],
    "system": "CREATE TABLE COURSE (DNO VARCHAR, CName VARCHAR), CREATE TABLE DEPARTMENT (DNO VARCHAR, Dname VARCHAR, Room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“计算机导论”这门课的系名和课室是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"计算机导论\""
      }
    ],
    "system": "CREATE TABLE COURSE (DNO VARCHAR, CName VARCHAR), CREATE TABLE DEPARTMENT (DNO VARCHAR, Dname VARCHAR, Room VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有注册学生的名字、姓氏和分数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID"
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR), CREATE TABLE GRADECONVERSION (lettergrade VARCHAR, gradepoint VARCHAR), CREATE TABLE STUDENT (LName VARCHAR, StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有注册学生的全名和分数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Fname ,  T3.LName ,  T2.gradepoint FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID"
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR), CREATE TABLE GRADECONVERSION (lettergrade VARCHAR, gradepoint VARCHAR), CREATE TABLE STUDENT (LName VARCHAR, StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出一门课程的分数至少是3.8的所有学生的不同名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8"
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR), CREATE TABLE GRADECONVERSION (gradepoint INTEGER, lettergrade VARCHAR), CREATE TABLE STUDENT (StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在至少一门课程中，成绩在3.8或以上的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8"
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR), CREATE TABLE GRADECONVERSION (gradepoint INTEGER, lettergrade VARCHAR), CREATE TABLE STUDENT (StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找系号为520的系人员中教员的全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520"
      }
    ],
    "system": "CREATE TABLE FACULTY (FacID VARCHAR, Lname VARCHAR, Fname VARCHAR), CREATE TABLE MEMBER_OF (FacID VARCHAR, DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "系号为520的系人员中教员的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520"
      }
    ],
    "system": "CREATE TABLE FACULTY (FacID VARCHAR, Lname VARCHAR, Fname VARCHAR), CREATE TABLE MEMBER_OF (FacID VARCHAR, DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在DNO 140系辅修的学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"
      }
    ],
    "system": "CREATE TABLE MINOR_IN (DNO VARCHAR, StuID VARCHAR), CREATE TABLE STUDENT (Lname VARCHAR, StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参与140系辅修课程的学生的全名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140"
      }
    ],
    "system": "CREATE TABLE MINOR_IN (DNO VARCHAR, StuID VARCHAR), CREATE TABLE STUDENT (Lname VARCHAR, StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“计算机科学”系成员的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"计算机科学\""
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DNO VARCHAR, DName VARCHAR), CREATE TABLE FACULTY (FacID VARCHAR, Lname VARCHAR), CREATE TABLE MEMBER_OF (FacID VARCHAR, DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“计算机科学”系教员的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"计算机科学\""
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (DNO VARCHAR, DName VARCHAR), CREATE TABLE FACULTY (FacID VARCHAR, Lname VARCHAR), CREATE TABLE MEMBER_OF (FacID VARCHAR, DNO VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出姓\"帅\"的学生的平均成绩。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"帅\""
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR), CREATE TABLE GRADECONVERSION (gradepoint INTEGER, lettergrade VARCHAR), CREATE TABLE STUDENT (LName VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓\"帅\"的学生平均成绩是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.LName  =  \"帅\""
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR), CREATE TABLE GRADECONVERSION (gradepoint INTEGER, lettergrade VARCHAR), CREATE TABLE STUDENT (LName VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“上海”的生的最高和最低分数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR), CREATE TABLE GRADECONVERSION (gradepoint INTEGER, lettergrade VARCHAR), CREATE TABLE STUDENT (city_code VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出住在“上海”的学生的最高和最低分数。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"上海\""
      }
    ],
    "system": "CREATE TABLE ENROLLED_IN (Grade VARCHAR, StuID VARCHAR), CREATE TABLE GRADECONVERSION (gradepoint INTEGER, lettergrade VARCHAR), CREATE TABLE STUDENT (city_code VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找学分为3学分或有1学分但有4学时的课程名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits VARCHAR, CName VARCHAR, Hours VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学分为3学分或有1学分但有4学时的课程名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT CName FROM COURSE WHERE Credits  =  3 UNION SELECT CName FROM COURSE WHERE Credits  =  1 AND Hours  =  4"
      }
    ],
    "system": "CREATE TABLE COURSE (Credits VARCHAR, CName VARCHAR, Hours VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在“管理部”部门或在“财务部”部门和建筑“行政”的部门的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"管理部\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"财务部\" AND Building  =  \"行政\""
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (Division VARCHAR, DName VARCHAR, Building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“管理部”部门或在“财务部”部门和建筑“行政”部门的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"管理部\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"财务部\" AND Building  =  \"行政\""
      }
    ],
    "system": "CREATE TABLE DEPARTMENT (Division VARCHAR, DName VARCHAR, Building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到不参加任何课程的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)"
      }
    ],
    "system": "CREATE TABLE STUDENT (StuID VARCHAR, Fname VARCHAR), CREATE TABLE ENROLLED_IN (StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有参加课程的所有学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)"
      }
    ],
    "system": "CREATE TABLE STUDENT (StuID VARCHAR, Fname VARCHAR), CREATE TABLE ENROLLED_IN (StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "购买量前三大产品的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE product_suppliers (product_id VARCHAR, total_amount_purchased VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出购买金额最大的三种产品的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE product_suppliers (product_id VARCHAR, total_amount_purchased VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最便宜产品的产品ID和产品类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_price VARCHAR, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出最低价格产品的ID和产品类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_price VARCHAR, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不同产品类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT product_type_code) FROM products"
      }
    ],
    "system": "CREATE TABLE products (product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同产品类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT product_type_code) FROM products"
      }
    ],
    "system": "CREATE TABLE products (product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回客户10的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"
      }
    ],
    "system": "CREATE TABLE addresses (address_id VARCHAR, address_details VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户ID为10的地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.address_details FROM addresses AS T1 JOIN customer_addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T2.customer_id  =  10"
      }
    ],
    "system": "CREATE TABLE addresses (address_id VARCHAR, address_details VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有职称是“部门经理”的员工的id和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"部门经理\""
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_gender VARCHAR), CREATE TABLE staff_department_assignments (staff_id VARCHAR, job_title_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回任何职称是“部门经理”的员工的员工ID和性别。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"部门经理\""
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_gender VARCHAR), CREATE TABLE staff_department_assignments (staff_id VARCHAR, job_title_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个支付方法，返回多少客户使用它。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code"
      }
    ],
    "system": "CREATE TABLE customers (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种付款方式有多少客户使用？"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code"
      }
    ],
    "system": "CREATE TABLE customers (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最经常订购的产品的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE order_items (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给最频繁订购的产品的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE order_items (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "订单数量最多的客户的姓名、电话号码和电子邮件地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, customer_name VARCHAR, customer_id VARCHAR, customer_email VARCHAR), CREATE TABLE customer_orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回订单最多的客户的姓名、电话号码和电子邮件地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, customer_name VARCHAR, customer_id VARCHAR, customer_email VARCHAR), CREATE TABLE customer_orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种产品的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个产品类型的平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大洋”连锁店有多少家百货公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"大洋\""
      }
    ],
    "system": "CREATE TABLE department_stores (dept_store_chain_id VARCHAR), CREATE TABLE department_store_chain (dept_store_chain_id VARCHAR, dept_store_chain_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "算一下“大洋”连锁店的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"大洋\""
      }
    ],
    "system": "CREATE TABLE department_stores (dept_store_chain_id VARCHAR), CREATE TABLE department_store_chain (dept_store_chain_id VARCHAR, dept_store_chain_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最新指派的工作人员的姓名和职称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_name VARCHAR), CREATE TABLE staff_department_assignments (date_assigned_to VARCHAR, staff_id VARCHAR, job_title_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最新指派的工作人员的姓名和职称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_name VARCHAR), CREATE TABLE staff_department_assignments (date_assigned_to VARCHAR, staff_id VARCHAR, job_title_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我由供应商ID是3提供的所有产品的类型、名称和价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
      }
    ],
    "system": "CREATE TABLE product_suppliers (product_id VARCHAR, supplier_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR, product_price VARCHAR, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回供应商3提供的产品类型、名称和价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3"
      }
    ],
    "system": "CREATE TABLE product_suppliers (product_id VARCHAR, supplier_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR, product_price VARCHAR, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照客户id的顺序返回订单状态为“延迟”的客户的不同名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"延迟\" ORDER BY T2.customer_id"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_status_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按客户ID排序的具有“延迟”订单状态的客户的不同名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"延迟\" ORDER BY T2.customer_id"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_status_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找既有“新”订单又有“延迟”订单的客户的名称和地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"新\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"延迟\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR, customer_address VARCHAR), CREATE TABLE customer_orders (order_status_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既有“新”订单又有“延迟”的客户的姓名和地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"新\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"延迟\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR, customer_address VARCHAR), CREATE TABLE customer_orders (order_status_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回由供应商ID2供应并且比所有产品的平均价格更贵的所有产品的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"
      }
    ],
    "system": "CREATE TABLE product_suppliers (product_id VARCHAR, supplier_id VARCHAR), CREATE TABLE products (product_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自id 2的供应商的产品的id且比所有产品的平均价格都贵的是id什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)"
      }
    ],
    "system": "CREATE TABLE product_suppliers (product_id VARCHAR, supplier_id VARCHAR), CREATE TABLE products (product_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有“市场”部和“管理”部的百货公司的id和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"市场\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"管理\""
      }
    ],
    "system": "CREATE TABLE departments (dept_store_id VARCHAR, department_name VARCHAR), CREATE TABLE department_stores (dept_store_id VARCHAR, store_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既有“市场”部又有“管理”部百货公司的id和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"市场\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"管理\""
      }
    ],
    "system": "CREATE TABLE departments (dept_store_id VARCHAR, department_name VARCHAR), CREATE TABLE department_stores (dept_store_id VARCHAR, store_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "百货商店数量最多的两家连锁店的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"
      }
    ],
    "system": "CREATE TABLE department_stores (dept_store_chain_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回百货商店数量最多的两家连锁店的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2"
      }
    ],
    "system": "CREATE TABLE department_stores (dept_store_chain_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工人数最少的部门的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff_department_assignments (department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回员工人数最少的部门的id。"
      },
      {
        "from": "assistant",
        "value": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff_department_assignments (department_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每种产品类型，返回最高和最低价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种产品的最高和最低的产品价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出平均价格高于所有产品平均价格的产品类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "该类型产品的平均价格高于所有产品平均价格的产品类型的代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到被指派时间最短的员工的id和姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_name VARCHAR), CREATE TABLE Staff_Department_Assignments (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被指派时间最短的员工的id和姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_name VARCHAR), CREATE TABLE Staff_Department_Assignments (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有价格在600到700之间的产品的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_price INTEGER, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有价格在600到700之间的产品的名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_price INTEGER, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有在“取消”某些订单后又有订购的不同客户的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"取消\")"
      }
    ],
    "system": "CREATE TABLE Customer_Orders (order_date INTEGER, order_status_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“取消”某些订单后又有订购的不同客户的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"取消\")"
      }
    ],
    "system": "CREATE TABLE Customer_Orders (order_date INTEGER, order_status_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些比“文书职员”更早被分配到职员部的职员的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  '文书职员')"
      }
    ],
    "system": "CREATE TABLE Staff_Department_Assignments (date_assigned_to INTEGER, staff_id VARCHAR, job_title_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回比“文书职员”更早被分配到职员部的职员的id。"
      },
      {
        "from": "assistant",
        "value": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  '文书职员')"
      }
    ],
    "system": "CREATE TABLE Staff_Department_Assignments (date_assigned_to INTEGER, staff_id VARCHAR, job_title_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "地址包含“巷”的客户名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"巷\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR, customer_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回地址包含“巷”的客户名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"巷\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR, customer_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“2016”年被指派的工作人员的姓名和性别。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016\""
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_gender VARCHAR, staff_name VARCHAR), CREATE TABLE staff_department_assignments (staff_id VARCHAR, date_assigned_from VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“2016”年被指派的工作人员的姓名和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016\""
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_gender VARCHAR, staff_name VARCHAR), CREATE TABLE staff_department_assignments (staff_id VARCHAR, date_assigned_from VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出被指派多个工作岗位的员工的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_name VARCHAR), CREATE TABLE staff_department_assignments (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被指派了多个工作岗位的员工的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_name VARCHAR), CREATE TABLE staff_department_assignments (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按地址的字母顺序列出所有供应商的名称和电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"
      }
    ],
    "system": "CREATE TABLE Suppliers (supplier_id VARCHAR, supplier_name VARCHAR, supplier_phone VARCHAR), CREATE TABLE supplier_addresses (supplier_id VARCHAR, address_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, address_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按地址的字母顺序排列的所有供应商的姓名和电话号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details"
      }
    ],
    "system": "CREATE TABLE Suppliers (supplier_id VARCHAR, supplier_name VARCHAR, supplier_phone VARCHAR), CREATE TABLE supplier_addresses (supplier_id VARCHAR, address_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, address_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有客户和供应商的电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, supplier_phone VARCHAR), CREATE TABLE suppliers (customer_phone VARCHAR, supplier_phone VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有客户和供应商的电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, supplier_phone VARCHAR), CREATE TABLE suppliers (customer_phone VARCHAR, supplier_phone VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有订购三次以上或购买金额为80000以上的产品的标识。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"
      }
    ],
    "system": "CREATE TABLE Order_Items (product_id VARCHAR, total_amount_purchased INTEGER), CREATE TABLE Product_Suppliers (product_id VARCHAR, total_amount_purchased INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "订购次数超过3次或累计购买金额超过80000的所有产品的标识是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000"
      }
    ],
    "system": "CREATE TABLE Order_Items (product_id VARCHAR, total_amount_purchased INTEGER), CREATE TABLE Product_Suppliers (product_id VARCHAR, total_amount_purchased INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "价格低于600或高于900的产品的id和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_price INTEGER, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出价格低于600或高于900的产品的ID和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_price INTEGER, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找平均每件产品购买量在50000以上或低于30000的供应商的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000"
      }
    ],
    "system": "CREATE TABLE Product_Suppliers (supplier_id VARCHAR, total_amount_purchased INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均购买量在50000以上或低于30000的供应商的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000"
      }
    ],
    "system": "CREATE TABLE Product_Suppliers (supplier_id VARCHAR, total_amount_purchased INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "供应最多产品的供应商购买的平均数量和购买的金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE Product_Suppliers (supplier_id VARCHAR, total_value_purchased INTEGER, total_amount_purchased INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回供应最多产品的供应商购买的平均数量和购买的金额。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE Product_Suppliers (supplier_id VARCHAR, total_value_purchased INTEGER, total_amount_purchased INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大和最小的客户代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(customer_code) ,  min(customer_code) FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (customer_code INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回客户代码的最大值和最小值。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(customer_code) ,  min(customer_code) FROM Customers"
      }
    ],
    "system": "CREATE TABLE Customers (customer_code INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有购买“键盘”的不同客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"键盘\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "购买“键盘”的客户不同的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id JOIN products AS T4 ON T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"键盘\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有供应“红色牛仔裤”的不同供应商的名字和电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"红色牛仔裤\""
      }
    ],
    "system": "CREATE TABLE suppliers (supplier_id VARCHAR, supplier_name VARCHAR, supplier_phone VARCHAR), CREATE TABLE product_suppliers (product_id VARCHAR, supplier_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "供应“红色牛仔裤”的供应商的名字和电话号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.supplier_name ,  T1.supplier_phone FROM suppliers AS T1 JOIN product_suppliers AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN products AS T3 ON T2.product_id  =  T3.product_id WHERE T3.product_name  =  \"红色牛仔裤\""
      }
    ],
    "system": "CREATE TABLE suppliers (supplier_id VARCHAR, supplier_name VARCHAR, supplier_phone VARCHAR), CREATE TABLE product_suppliers (product_id VARCHAR, supplier_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按产品类型分组并按字母顺序排序的产品的最高和最低价格是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按产品类型分组和排序并给出每个产品类型的最高和最低产品价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按订单日期排序的、处于“取消”状态的订单的订单id、客户id。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"取消\" ORDER BY order_date"
      }
    ],
    "system": "CREATE TABLE customer_orders (order_id VARCHAR, order_status_code VARCHAR, order_date VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于已经“取消”状态的订单，按订单日期排序的订单id和客户id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  customer_id FROM customer_orders WHERE order_status_code  =   \"取消\" ORDER BY order_date"
      }
    ],
    "system": "CREATE TABLE customer_orders (order_id VARCHAR, order_status_code VARCHAR, order_date VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出至少由两个不同客户购买的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"
      }
    ],
    "system": "CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "由至少两个不同的客户购买的产品的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T3.product_name FROM customer_orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id JOIN products AS T3 ON T2.product_id  =  T3.product_id GROUP BY T3.product_id HAVING COUNT (DISTINCT T1.customer_id)  >=  2"
      }
    ],
    "system": "CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出至少购买三种不同产品的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "购买了至少三种不同产品的客户不同名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出被任命为“销售员”，但从未担任“文书职员”的员工的姓名和性别。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"销售员\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"文书职员\""
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_gender VARCHAR, staff_name VARCHAR), CREATE TABLE Staff_Department_Assignments (staff_id VARCHAR, job_title_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有“销售员”头衔，但从未担任过“文书职员”的职员的姓名和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"销售员\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"文书职员\""
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, staff_gender VARCHAR, staff_name VARCHAR), CREATE TABLE Staff_Department_Assignments (staff_id VARCHAR, job_title_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找地址包含“湖南”省且不使用“信用卡”付款的客户的ID和名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"湖南\" AND payment_method_code != \"信用卡\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, payment_method_code VARCHAR, customer_id VARCHAR, customer_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "地址包含“湖南”省且不使用“信用卡”付款的客户的ID和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"湖南\" AND payment_method_code != \"信用卡\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, payment_method_code VARCHAR, customer_id VARCHAR, customer_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有“服装”产品的平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(product_price) FROM products WHERE product_type_code  =  '服装'"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“服装”的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(product_price) FROM products WHERE product_type_code  =  '服装'"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最贵的“硬件”产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name FROM products WHERE product_type_code  =  '硬件' ORDER BY product_price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_name VARCHAR, product_price VARCHAR, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最昂贵的“硬件”产品的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name FROM products WHERE product_type_code  =  '硬件' ORDER BY product_price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_name VARCHAR, product_price VARCHAR, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少架飞机？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM aircraft"
      }
    ],
    "system": "CREATE TABLE aircraft (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "飞机的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM aircraft"
      }
    ],
    "system": "CREATE TABLE aircraft (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有飞机的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT Description FROM aircraft"
      }
    ],
    "system": "CREATE TABLE aircraft (Description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "飞机的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Description FROM aircraft"
      }
    ],
    "system": "CREATE TABLE aircraft (Description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有机场的国际旅客平均人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(International_Passengers) FROM airport"
      }
    ],
    "system": "CREATE TABLE airport (International_Passengers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "机场的国际旅客平均人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(International_Passengers) FROM airport"
      }
    ],
    "system": "CREATE TABLE airport (International_Passengers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北京首都机场”机场的国际和国内旅客人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"北京首都机场\""
      }
    ],
    "system": "CREATE TABLE airport (International_Passengers VARCHAR, Domestic_Passengers VARCHAR, Airport_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北京首都机场”机场有多少国际旅客和国内旅客？"
      },
      {
        "from": "assistant",
        "value": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"北京首都机场\""
      }
    ],
    "system": "CREATE TABLE airport (International_Passengers VARCHAR, Domestic_Passengers VARCHAR, Airport_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含“北京”这个词的机场的国内旅客总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"北京\""
      }
    ],
    "system": "CREATE TABLE airport (Airport_Name VARCHAR, Domestic_Passengers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北京”机场的国内旅客总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"北京\""
      }
    ],
    "system": "CREATE TABLE airport (Airport_Name VARCHAR, Domestic_Passengers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有机场的过境旅客的最大和最小数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport"
      }
    ],
    "system": "CREATE TABLE airport (Transit_Passengers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有机场过境旅客的最大值和最小值是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport"
      }
    ],
    "system": "CREATE TABLE airport (Transit_Passengers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "25岁或以上的飞行员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM pilot WHERE Age  >=  25"
      }
    ],
    "system": "CREATE TABLE pilot (Name VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少25岁的每名飞行员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM pilot WHERE Age  >=  25"
      }
    ],
    "system": "CREATE TABLE pilot (Name VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母升序顺序列出所有的飞行员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM pilot ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE pilot (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "飞行员按字母顺序排列的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM pilot ORDER BY Name ASC"
      }
    ],
    "system": "CREATE TABLE pilot (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按降序字母顺序列出所有30岁或以下的飞行员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"
      }
    ],
    "system": "CREATE TABLE pilot (Name VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母降序排列的所有30岁或30岁的飞行员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC"
      }
    ],
    "system": "CREATE TABLE pilot (Name VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示与“北京南苑”机场有关的飞机的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"北京南苑\""
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR), CREATE TABLE airport (Airport_Name VARCHAR, Airport_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北京南苑”机场的所有飞机的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"北京南苑\""
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR), CREATE TABLE airport (Airport_Name VARCHAR, Airport_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请出示与总旅客数超过10万人的机场有关的飞机的名称和说明。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000"
      }
    ],
    "system": "CREATE TABLE aircraft (Description VARCHAR, Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR), CREATE TABLE airport (Total_Passengers INTEGER, Airport_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与总旅客数超过10万人的机场有关的飞机的名称和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000"
      }
    ],
    "system": "CREATE TABLE aircraft (Description VARCHAR, Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR), CREATE TABLE airport (Total_Passengers INTEGER, Airport_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“歼-10”飞机有关的机场的平均旅客总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"歼-10\""
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR), CREATE TABLE airport (Total_Passengers INTEGER, Airport_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“歼-10”飞机访问的所有机场的平均旅客总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T3.Total_Passengers) FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T1.Aircraft  =  \"歼-10\""
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR), CREATE TABLE airport (Total_Passengers INTEGER, Airport_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请列出地点和获奖的飞机名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft"
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Location VARCHAR, Winning_Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "获奖的飞机的位置和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Location ,  T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft"
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Location VARCHAR, Winning_Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出被评为获奖飞机次数最多的飞机的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Winning_Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "得奖次数最多的飞机叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Winning_Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出飞机的名称和赢得比赛的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Winning_Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每架获奖的飞机叫什么名字？获奖多少次？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft"
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Winning_Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄递减顺序列出所有飞行员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM pilot ORDER BY Age DESC"
      }
    ],
    "system": "CREATE TABLE pilot (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按降序列出的所有飞行员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM pilot ORDER BY Age DESC"
      }
    ],
    "system": "CREATE TABLE pilot (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出至少赢得两次比赛飞机的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Winning_Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有赢得至少两场比赛的飞机的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Winning_Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有赢得任何比赛的飞机名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)"
      }
    ],
    "system": "CREATE TABLE aircraft (Winning_Aircraft VARCHAR, Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Winning_Aircraft VARCHAR, Aircraft_ID VARCHAR, Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些从来没有赢得任何比赛的飞机的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)"
      }
    ],
    "system": "CREATE TABLE aircraft (Winning_Aircraft VARCHAR, Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE MATCH (Winning_Aircraft VARCHAR, Aircraft_ID VARCHAR, Aircraft VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与名为“北京首都机场”的机场和“北京南苑”的机场相关联的飞机的名称"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"北京首都机场\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"北京南苑\""
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR), CREATE TABLE airport (Airport_Name VARCHAR, Airport_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“北京首都机场”机场和“北京南苑”机场有关的所有飞机的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"北京首都机场\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"北京南苑\""
      }
    ],
    "system": "CREATE TABLE aircraft (Aircraft_ID VARCHAR, Aircraft VARCHAR), CREATE TABLE airport_aircraft (Aircraft_ID VARCHAR, Airport_ID VARCHAR), CREATE TABLE airport (Airport_Name VARCHAR, Airport_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示国际旅客最多的机场的所有信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airport (International_Passengers VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "国际旅客最多的机场有哪些信息？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airport (International_Passengers VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在30岁以下的飞行员中获胜次数最多的飞行员的姓名和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE pilot (age INTEGER, name VARCHAR, pilot_id VARCHAR), CREATE TABLE MATCH (winning_pilot VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "获胜次数最多的30岁以下的飞行员的姓名和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE pilot (age INTEGER, name VARCHAR, pilot_id VARCHAR), CREATE TABLE MATCH (winning_pilot VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最年轻的获奖飞行员的名字和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"
      }
    ],
    "system": "CREATE TABLE pilot (age VARCHAR, name VARCHAR, pilot_id VARCHAR), CREATE TABLE MATCH (winning_pilot VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最年轻的中奖飞行员年龄多大？他们叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1"
      }
    ],
    "system": "CREATE TABLE pilot (age VARCHAR, name VARCHAR, pilot_id VARCHAR), CREATE TABLE MATCH (winning_pilot VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“澳大利亚”举行的比赛中没有获胜的飞行员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  '澳大利亚')"
      }
    ],
    "system": "CREATE TABLE pilot (country VARCHAR, name VARCHAR, pilot_id VARCHAR, Winning_Pilot VARCHAR), CREATE TABLE MATCH (country VARCHAR, name VARCHAR, pilot_id VARCHAR, Winning_Pilot VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“澳大利亚”没有赢得任何比赛的飞行员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM pilot WHERE pilot_id NOT IN (SELECT Winning_Pilot  FROM MATCH WHERE country  =  '澳大利亚')"
      }
    ],
    "system": "CREATE TABLE pilot (country VARCHAR, name VARCHAR, pilot_id VARCHAR, Winning_Pilot VARCHAR), CREATE TABLE MATCH (country VARCHAR, name VARCHAR, pilot_id VARCHAR, Winning_Pilot VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个房产有多少居民？列出属性ID和常驻计数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id"
      }
    ],
    "system": "CREATE TABLE properties (property_id VARCHAR), CREATE TABLE residents (property_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有“父子聚会”细节的组织提供哪些不同的服务类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  '父子聚会'"
      }
    ],
    "system": "CREATE TABLE services (organization_id VARCHAR, service_type_code VARCHAR), CREATE TABLE organizations (organization_id VARCHAR, organization_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个居民需要多少服务？以计数的降序列出常驻ID、详细信息和计数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE Residents (resident_id VARCHAR, other_details VARCHAR), CREATE TABLE Residents_Services (resident_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供某一服务的最大数目是多少？列出服务ID、详细信息和号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.service_id ,  T1.service_details ,  count(*) FROM Services AS T1 JOIN Residents_Services AS T2 ON T1.service_id  =  T2.service_id GROUP BY T1.service_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Services (service_id VARCHAR, service_details VARCHAR), CREATE TABLE Residents_Services (service_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每个事物的id和类型，以及拥有它的组织的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.thing_id ,  T1.type_of_Thing_Code ,  T2.organization_details FROM Things AS T1 JOIN Organizations AS T2 ON T1.organization_id  =  T2.organization_id"
      }
    ],
    "system": "CREATE TABLE Things (type_of_Thing_Code VARCHAR, thing_id VARCHAR, organization_id VARCHAR), CREATE TABLE Organizations (organization_id VARCHAR, organization_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有3个事件的客户的id和细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR, customer_id VARCHAR), CREATE TABLE Customer_Events (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个客户的移动日期是什么，以及相应的客户ID和细节？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.date_moved_in ,  T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id"
      }
    ],
    "system": "CREATE TABLE Customers (customer_details VARCHAR, customer_id VARCHAR), CREATE TABLE Customer_Events (date_moved_in VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些事件有一到三的记录？列出事件ID和属性ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Customer_Event_ID  ,  T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*) BETWEEN 1 AND 3"
      }
    ],
    "system": "CREATE TABLE Customer_Events (customer_event_id VARCHAR, Customer_Event_ID VARCHAR, property_id VARCHAR), CREATE TABLE Customer_Event_Notes (Customer_Event_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在日期“2017-06-19 02:59:21”之前具有“关闭”状态或状态记录的事物的不同id和类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  '关闭' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'"
      }
    ],
    "system": "CREATE TABLE Timed_Status_of_Things (Date_and_Date INTEGER, thing_id VARCHAR, Status_of_Thing_Code VARCHAR), CREATE TABLE Things (Type_of_Thing_Code VARCHAR, thing_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个不同的地点位于有东西的服务细节是“不满意的”的地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  '不满意的'"
      }
    ],
    "system": "CREATE TABLE Things (thing_id VARCHAR, service_details VARCHAR), CREATE TABLE Timed_Locations_of_Things (thing_id VARCHAR, Location_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种不同的状态代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Status_of_Thing_Code) FROM Timed_Status_of_Things"
      }
    ],
    "system": "CREATE TABLE Timed_Status_of_Things (Status_of_Thing_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些组织不是其他组织的父组织？列出组织ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations"
      }
    ],
    "system": "CREATE TABLE organizations (parent_organization_id VARCHAR, organization_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "居民入住的最后一天是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(date_moved_in) FROM Residents"
      }
    ],
    "system": "CREATE TABLE Residents (date_moved_in INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含子字符串“女士”的驻留详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT other_details FROM Residents WHERE other_details LIKE '女士'"
      }
    ],
    "system": "CREATE TABLE Residents (other_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出客户事件ID和日期，入住日期和属性ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_event_id ,  date_moved_in ,  property_id FROM customer_events"
      }
    ],
    "system": "CREATE TABLE customer_events (property_id VARCHAR, date_moved_in VARCHAR, customer_event_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户没有任何活动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_events )"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE customer_events (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "居民的日期有什么不同？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT date_moved_in FROM residents"
      }
    ],
    "system": "CREATE TABLE residents (date_moved_in VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学校？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM school"
      }
    ],
    "system": "CREATE TABLE school (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计学校的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM school"
      }
    ],
    "system": "CREATE TABLE school (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按升学顺序列出学校的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"
      }
    ],
    "system": "CREATE TABLE school (LOCATION VARCHAR, Enrollment VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按入学升序排列的学校位置列表是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM school ORDER BY Enrollment ASC"
      }
    ],
    "system": "CREATE TABLE school (LOCATION VARCHAR, Enrollment VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按创办年的降序列出学校的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM school ORDER BY Founded DESC"
      }
    ],
    "system": "CREATE TABLE school (LOCATION VARCHAR, Founded VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学校创办年降序排列的学校名单是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM school ORDER BY Founded DESC"
      }
    ],
    "system": "CREATE TABLE school (LOCATION VARCHAR, Founded VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教派教不是“天主教”的学校的入学人数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Enrollment FROM school WHERE Denomination != \"天主教\""
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR, Enrollment VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有“天主教”教派的每所学校的入学人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Enrollment FROM school WHERE Denomination != \"天主教\""
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR, Enrollment VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学校平均入学数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Enrollment) FROM school"
      }
    ],
    "system": "CREATE TABLE school (Enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以平均入学数为准。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Enrollment) FROM school"
      }
    ],
    "system": "CREATE TABLE school (Enrollment INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母升序排列的队伍的球员是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM player ORDER BY Team ASC"
      }
    ],
    "system": "CREATE TABLE player (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个球员的队伍并按字母顺序排列它们。"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM player ORDER BY Team ASC"
      }
    ],
    "system": "CREATE TABLE player (Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "球员有多少不同的位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT POSITION) FROM player"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同球员位置的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT POSITION) FROM player"
      }
    ],
    "system": "CREATE TABLE player (POSITION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最高年龄球员的队伍。"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE player (Age VARCHAR, Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个队的球员年龄最大？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM player ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE player (Age VARCHAR, Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出前5名年龄最大的球员所在的队伍。"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE player (Age VARCHAR, Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有5个最老球员的球队是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5"
      }
    ],
    "system": "CREATE TABLE player (Age VARCHAR, Team VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个球员，显示他们所在的队伍和学校的所在地。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID"
      }
    ],
    "system": "CREATE TABLE player (School_ID VARCHAR, Team VARCHAR), CREATE TABLE school (School_ID VARCHAR, Location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个球员的队伍和学校的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Team ,  T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID"
      }
    ],
    "system": "CREATE TABLE player (School_ID VARCHAR, Team VARCHAR), CREATE TABLE school (School_ID VARCHAR, Location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示有超过1名球员的学校的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE player (School_ID VARCHAR), CREATE TABLE school (School_ID VARCHAR, Location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些学校有超过1名球员？给我学校的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE player (School_ID VARCHAR), CREATE TABLE school (School_ID VARCHAR, Location VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示拥有最多球员的学校的教派。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE player (School_ID VARCHAR), CREATE TABLE school (Denomination VARCHAR, School_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多数球员的学校的教派是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Denomination FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE player (School_ID VARCHAR), CREATE TABLE school (Denomination VARCHAR, School_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示学校的地点和昵称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID"
      }
    ],
    "system": "CREATE TABLE school (School_ID VARCHAR, Location VARCHAR), CREATE TABLE school_details (Nickname VARCHAR, School_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个学校的位置和昵称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Location ,  T2.Nickname FROM school AS T1 JOIN school_details AS T2 ON T1.School_ID  =  T2.School_ID"
      }
    ],
    "system": "CREATE TABLE school (School_ID VARCHAR, Location VARCHAR), CREATE TABLE school_details (Nickname VARCHAR, School_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请出示不同的教派和相应的学校的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination"
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个教派，返回教派和具有该教派的学校的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination"
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请按降序显示不同的教派和相应的学校数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按学校数量的降序排列教派。返回每个教派及其对应学校的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出学校招生人数最多的学校颜色。"
      },
      {
        "from": "assistant",
        "value": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE school (School_Colors VARCHAR, Enrollment VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "招生人数最多的学校的学校色彩是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT School_Colors FROM school ORDER BY Enrollment DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE school (School_Colors VARCHAR, Enrollment VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有任何球员的学校的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)"
      }
    ],
    "system": "CREATE TABLE school (LOCATION VARCHAR, School_ID VARCHAR), CREATE TABLE Player (LOCATION VARCHAR, School_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些学校没有球员？给我学校的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)"
      }
    ],
    "system": "CREATE TABLE school (LOCATION VARCHAR, School_ID VARCHAR), CREATE TABLE Player (LOCATION VARCHAR, School_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示1890年前建立的学校和1900后建立的学校所共有的教派"
      },
      {
        "from": "assistant",
        "value": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900"
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR, Founded INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1890年以前建立的学校和1900年以后建立的学校都使用什么教派?"
      },
      {
        "from": "assistant",
        "value": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900"
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR, Founded INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不属于“第一机构”的学校的昵称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Nickname FROM school_details WHERE Division != \"第一机构\""
      }
    ],
    "system": "CREATE TABLE school_details (Nickname VARCHAR, Division VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是“第一机构”学校划分的是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Nickname FROM school_details WHERE Division != \"第一机构\""
      }
    ],
    "system": "CREATE TABLE school_details (Nickname VARCHAR, Division VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示一个以上学校共享的教派。"
      },
      {
        "from": "assistant",
        "value": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个学校有多少教派？"
      },
      {
        "from": "assistant",
        "value": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE school (Denomination VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找城市区域降序排列的所有区域名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"
      }
    ],
    "system": "CREATE TABLE district (District_name VARCHAR, city_area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按市区区域降序排列的不同的区域名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT District_name FROM district ORDER BY city_area DESC"
      }
    ],
    "system": "CREATE TABLE district (District_name VARCHAR, city_area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出具有超过3个产品列表的页面大小列表"
      },
      {
        "from": "assistant",
        "value": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "超过3个产品列表的所有产品的最大页面大小是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max_page_size FROM product GROUP BY max_page_size HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找人口在20万到200万之间的地区的名称和人口"
      },
      {
        "from": "assistant",
        "value": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"
      }
    ],
    "system": "CREATE TABLE district (District_name VARCHAR, City_Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "20万到200万居民之间的所有地区的区名和城市人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000"
      }
    ],
    "system": "CREATE TABLE district (District_name VARCHAR, City_Population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找城市面积大于10或人口大于10万的所有地区的名称"
      },
      {
        "from": "assistant",
        "value": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000"
      }
    ],
    "system": "CREATE TABLE district (City_Population INTEGER, district_name VARCHAR, city_area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "市区面积大于10或居住10万人以上的地区名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT district_name FROM district WHERE city_area  >  10 OR City_Population  >  100000"
      }
    ],
    "system": "CREATE TABLE district (City_Population INTEGER, district_name VARCHAR, city_area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个地区人口最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE district (city_population VARCHAR, district_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "居民最多的地区叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE district (city_population VARCHAR, district_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个地区的面积最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE district (city_area VARCHAR, district_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "面积最小的地区叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE district (city_area VARCHAR, district_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出总面积最大的3个区的总人口。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE district (city_area VARCHAR, city_population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "三大最大区域的居民总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE district (city_area VARCHAR, city_population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有类型的商店和其对应的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE"
      }
    ],
    "system": "CREATE TABLE store (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每种类型的商店，有多少种？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE"
      }
    ],
    "system": "CREATE TABLE store (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“上城区”所有商店的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"上城区\""
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR, store_name VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (district_id VARCHAR, district_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“上城区”所有商店的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"上城区\""
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR, store_name VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (district_id VARCHAR, district_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到人口最多的地区所有的商店。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR, store_name VARCHAR), CREATE TABLE store_district (store_id VARCHAR), CREATE TABLE district (city_population VARCHAR, district_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的地区所有商店的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR, store_name VARCHAR), CREATE TABLE store_district (store_id VARCHAR), CREATE TABLE district (city_population VARCHAR, district_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市是“卡西欧”店的总部？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"卡西欧\""
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR, store_name VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (district_id VARCHAR, headquartered_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个商店是“卡西欧”商场的总部？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"卡西欧\""
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR, store_name VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (district_id VARCHAR, headquartered_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找每个城市的商店数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city"
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (district_id VARCHAR, headquartered_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个城市都有多少商店的总部？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city"
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (district_id VARCHAR, headquartered_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到拥有最多商店的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (district_id VARCHAR, headquartered_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个城市的旗舰店数量最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (district_id VARCHAR, headquartered_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每分钟颜色的平均页数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(pages_per_minute_color) FROM product"
      }
    ],
    "system": "CREATE TABLE product (pages_per_minute_color INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每分钟颜色的平均页数的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(pages_per_minute_color) FROM product"
      }
    ],
    "system": "CREATE TABLE product (pages_per_minute_color INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "叫“安踏”商店里有什么产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"安踏\""
      }
    ],
    "system": "CREATE TABLE product (product_id VARCHAR, product VARCHAR), CREATE TABLE store_product (product_id VARCHAR, store_id VARCHAR), CREATE TABLE store (store_id VARCHAR, store_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“安踏”店里卖什么产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"安踏\""
      }
    ],
    "system": "CREATE TABLE product (product_id VARCHAR, product VARCHAR), CREATE TABLE store_product (product_id VARCHAR, store_id VARCHAR), CREATE TABLE store (store_id VARCHAR, store_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到最大页面大小为“A4”且每分钟页面颜色小于5的产品。"
      },
      {
        "from": "assistant",
        "value": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR, product VARCHAR, pages_per_minute_color INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些产品具有最大页面大小为“A4”，并且每分钟页面颜色小于5？"
      },
      {
        "from": "assistant",
        "value": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR, product VARCHAR, pages_per_minute_color INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最大页面大小为“A4”或每分钟页面颜色小于5的产品。"
      },
      {
        "from": "assistant",
        "value": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR, product VARCHAR, pages_per_minute_color INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是最大页面大小等于“A4”或每分钟页面颜色小于5的产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR, product VARCHAR, pages_per_minute_color INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有包含“扫描仪”一词产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT product FROM product WHERE product LIKE \"扫描仪\""
      }
    ],
    "system": "CREATE TABLE product (product VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的其名称包括子字符串“扫描仪”的产品有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT product FROM product WHERE product LIKE \"扫描仪\""
      }
    ],
    "system": "CREATE TABLE product (product VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在所有产品中最常用的最大页面大小。"
      },
      {
        "from": "assistant",
        "value": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最常用的最大页面的大小是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不使用最常用最大页面大小的产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR, product VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是最常使用的最大页面大小的所有产品的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE product (max_page_size VARCHAR, product VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出面积大于平均城市面积的区域的总人口。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)"
      }
    ],
    "system": "CREATE TABLE district (city_area INTEGER, city_population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "面积大于城市平均面积的所有地区的人口总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)"
      }
    ],
    "system": "CREATE TABLE district (city_area INTEGER, city_population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找同时具有“大型商场”和“便利店”类型的商店的地区的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"大型商场\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"便利店\""
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR, Type VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (District_name VARCHAR, district_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "同时有“大型商场”和“便利店”的地区叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"大型商场\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"便利店\""
      }
    ],
    "system": "CREATE TABLE store (store_id VARCHAR, Type VARCHAR), CREATE TABLE store_district (store_id VARCHAR, district_id VARCHAR), CREATE TABLE district (District_name VARCHAR, district_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有大学的总入学人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(enr) FROM College"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生进入大学？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(enr) FROM College"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均入学人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(enr) FROM College"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个大学平均有多少学生入学？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(enr) FROM College"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一共有多少所大学？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM College"
      }
    ],
    "system": "CREATE TABLE College (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少所不同的大学？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM College"
      }
    ],
    "system": "CREATE TABLE College (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少球员有超过1000小时的训练？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Player WHERE HS  >  1000"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的球员训练超过1000小时？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Player WHERE HS  >  1000"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少大学有超过15000名学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM College WHERE enr  >  15000"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生人数超过15000的大学数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM College WHERE enr  >  15000"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有运动员的平均训练时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(HS) FROM Player"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "球员平均训练多少小时？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(HS) FROM Player"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出小时数低于1500的球员的名字和训练时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT pName ,  HS FROM Player WHERE HS  <  1500"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER, pName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "训练时间少于1500小时的每个运动员的姓名和训练时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT pName ,  HS FROM Player WHERE HS  <  1500"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER, pName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的大学参加选拔赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT cName) FROM tryout"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选拔赛中有多少所不同的大学？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT cName) FROM tryout"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选拔赛中球员的不同的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT pPos) FROM tryout"
      }
    ],
    "system": "CREATE TABLE tryout (pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的球员的位置？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT pPos) FROM tryout"
      }
    ],
    "system": "CREATE TABLE tryout (pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选拔赛后有多少学生被录取的“确定”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM tryout WHERE decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE tryout (decision VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生从选拔赛中得到了录取的“确定”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM tryout WHERE decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE tryout (decision VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生担任“守门员”的角色？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM tryout WHERE pPos  =  '守门员'"
      }
    ],
    "system": "CREATE TABLE tryout (pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作为“守门员”的学生人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM tryout WHERE pPos  =  '守门员'"
      }
    ],
    "system": "CREATE TABLE tryout (pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有球员的最大，平均和最少训练时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均、最大和最小训练时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“河北”省的平均入学率是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(enr) FROM College WHERE state  =  '河北'"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“河北”省高校学生平均入学人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(enr) FROM College WHERE state  =  '河北'"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "训练时间在500到1500之间的球员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER, pName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在500到1500小时之间有训练的球员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500"
      }
    ],
    "system": "CREATE TABLE Player (HS INTEGER, pName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些名字包含字母“a”的球员。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT pName FROM Player WHERE pName LIKE 'a'"
      }
    ],
    "system": "CREATE TABLE Player (pName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁的名字包含字母“a”的玩家？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT pName FROM Player WHERE pName LIKE 'a'"
      }
    ],
    "system": "CREATE TABLE Player (pName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找名称，招生规模大于10000，地点在“江苏”省的大学。"
      },
      {
        "from": "assistant",
        "value": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"江苏\""
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“江苏”省有10000多学生入学的大学的名字和招生号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"江苏\""
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按招生号升序列出关于大学的信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM College ORDER BY enr"
      }
    ],
    "system": "CREATE TABLE College (enr VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按招生号升序列出关于大学的信息有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM College ORDER BY enr"
      }
    ],
    "system": "CREATE TABLE College (enr VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按大学名称排序，列出招生人数超过18000人的大学的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的招生人数超过18000人的每所大学叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName"
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照训练时间的降序且卡片为“确定”的球员的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT pName FROM Player WHERE yCard  =  '确定' ORDER BY HS DESC"
      }
    ],
    "system": "CREATE TABLE Player (HS VARCHAR, pName VARCHAR, yCard VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按训练小时数递减顺序且收到卡片的运动员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT pName FROM Player WHERE yCard  =  '确定' ORDER BY HS DESC"
      }
    ],
    "system": "CREATE TABLE Player (HS VARCHAR, pName VARCHAR, yCard VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序查找参与选拔赛的不同大学的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT cName FROM tryout ORDER BY cName"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序参加选拔赛的大学名称有哪些不同？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT cName FROM tryout ORDER BY cName"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选拔赛中哪些球员最受欢迎？"
      },
      {
        "from": "assistant",
        "value": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE tryout (pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选拔赛中最受欢迎的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE tryout (pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按数量递减查找每所大学参加选拔赛的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生参加了每一所大学的选拔赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生在不同的位置上花费的最短时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos"
      }
    ],
    "system": "CREATE TABLE tryout (pID VARCHAR, pPos VARCHAR), CREATE TABLE player (HS INTEGER, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个职位，学生实习的最低时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos"
      }
    ],
    "system": "CREATE TABLE tryout (pID VARCHAR, pPos VARCHAR), CREATE TABLE player (HS INTEGER, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "规模前3大学校的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE college (cName VARCHAR, enr VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有前3大规模班级的学校名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE college (cName VARCHAR, enr VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个省招生人数最少的学校叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个省招生规模最小的学校叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到大学生参加选拔赛的省。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName"
      }
    ],
    "system": "CREATE TABLE college (cName VARCHAR), CREATE TABLE tryout (cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生参加选拔赛的不同的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName"
      }
    ],
    "system": "CREATE TABLE college (cName VARCHAR), CREATE TABLE tryout (cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找一些有大学生参加试行的省，他们的决定是肯定的。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (decision VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生成功尝试的状态有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (decision VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在选拔赛的决定是“确定”的学生的名字和大学。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE player (pID VARCHAR, pName VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有在选拔赛中得到“确定”的选手的名字是什么？他们的大学叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE player (pID VARCHAR, pName VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排序找出所有参加选拔赛的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName"
      }
    ],
    "system": "CREATE TABLE player (pID VARCHAR, pName VARCHAR), CREATE TABLE tryout (pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有按字母顺序参加选拔赛的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID ORDER BY T1.pName"
      }
    ],
    "system": "CREATE TABLE player (pID VARCHAR, pName VARCHAR), CREATE TABLE tryout (pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出选拔赛决定是“确定”的学生的名字和时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE player (pID VARCHAR, HS VARCHAR, pName VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个在试用中得到“确定”的学生的姓名和练习时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE player (pID VARCHAR, HS VARCHAR, pName VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些有学生在选拔赛中打“前锋”位置的大学的所在省。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '前锋'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些在选拔赛中是“前锋”职位的学生所在的学校在那些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '前锋'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在选拔赛中获得“确定”的“前锋”位置的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '确定' AND T2.pPos  =  '前锋'"
      }
    ],
    "system": "CREATE TABLE player (pID VARCHAR, pName VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有成功申请“前锋”职位的学生都叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '确定' AND T2.pPos  =  '前锋'"
      }
    ],
    "system": "CREATE TABLE player (pID VARCHAR, pName VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到“小刚”所就读的大学的省份。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  '小刚'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (pID VARCHAR, cName VARCHAR), CREATE TABLE player (pName VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“小刚”所在的大学是哪一个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  '小刚'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (pID VARCHAR, cName VARCHAR), CREATE TABLE player (pName VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出学生的选拔赛决定是“确定”的平均和最长时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE player (HS INTEGER, pID VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参与团队练习的学生平均和最长练习时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE player (HS INTEGER, pID VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出选拔赛决定为“否定”的学生的平均小时数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '否定'"
      }
    ],
    "system": "CREATE TABLE player (HS INTEGER, pID VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被“否定”的学生平均花多少时间练习？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  '否定'"
      }
    ],
    "system": "CREATE TABLE player (HS INTEGER, pID VARCHAR), CREATE TABLE tryout (decision VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同位置上培训时间超过1000小时的学生的最长训练时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos"
      }
    ],
    "system": "CREATE TABLE player (HS INTEGER, pID VARCHAR), CREATE TABLE tryout (pID VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个位置，超过1000小时训练的学生最多的训练时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos"
      }
    ],
    "system": "CREATE TABLE player (HS INTEGER, pID VARCHAR), CREATE TABLE tryout (pID VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些大学的名字是从名字是“东”开始试训球员的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE '东'"
      }
    ],
    "system": "CREATE TABLE tryout (pID VARCHAR, cName VARCHAR), CREATE TABLE player (pName VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从名字字母是“东”开始试训球员的大学是那些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE '东'"
      }
    ],
    "system": "CREATE TABLE tryout (pID VARCHAR, cName VARCHAR), CREATE TABLE player (pName VARCHAR, pID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个大学有哪个学生是在选拔赛中获胜的“守门员”。"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM  tryout WHERE decision  =  '确定' AND pPos  =  '守门员'"
      }
    ],
    "system": "CREATE TABLE tryout (decision VARCHAR, cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪所大学有学生以“守门员”的身份让球队成功？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM  tryout WHERE decision  =  '确定' AND pPos  =  '守门员'"
      }
    ],
    "system": "CREATE TABLE tryout (decision VARCHAR, cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出来自最大规格大学的选拔球员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE tryout (pID VARCHAR, cName VARCHAR), CREATE TABLE player (pID VARCHAR, pName VARCHAR), CREATE TABLE college (cName VARCHAR, enr VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自最大大学的所有选拔参与者的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE tryout (pID VARCHAR, cName VARCHAR), CREATE TABLE player (pID VARCHAR, pName VARCHAR), CREATE TABLE college (cName VARCHAR, enr VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在选呗赛制有学生被“接受”学校所在的省份和招生情况如何？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR, enr VARCHAR), CREATE TABLE tryout (decision VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生在试用期间被“接受”且这些大学在哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  '确定'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR, enr VARCHAR), CREATE TABLE tryout (decision VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请查找在“江苏”规模超过15000所或“山东”省注册人数少于13000人的大学的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"山东\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"江苏\""
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“江苏”规模超过15000所或“山东”省注册人数少于13000人的大学的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"山东\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"江苏\""
      }
    ],
    "system": "CREATE TABLE College (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有学生在“守门员”和“中场”位置踢球的学校的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM  tryout WHERE pPos  =  '守门员' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  '中场'"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些让学生们在试训中以“守门员”位置和“中场”位置的学校叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM  tryout WHERE pPos  =  '守门员' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  '中场'"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出一些大学生在“守门员”和“中场”位置踢球的学校所在的省名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '守门员' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '中场'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些让一些学生担任“守门员”和“中场”位置学校所在的省叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '守门员' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '中场'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学校的学生在“守门员”和“中场”位置比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  '守门员' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  '中场')"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学校有学生既在“守门员”位置又在“中场”位置比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM (SELECT cName FROM  tryout WHERE pPos  =  '守门员' INTERSECT SELECT cName FROM  tryout WHERE pPos  =  '中场')"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出学校拥有的球员在“中场”位置但不在“守门员”位置的学校的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM  tryout WHERE pPos  =  '中场' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  '守门员'"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些球员在“中场”位置，但没有“守门员”位置的学校名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM  tryout WHERE pPos  =  '中场' EXCEPT SELECT cName FROM  tryout WHERE pPos  =  '守门员'"
      }
    ],
    "system": "CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出一些大学生在“中场”位置打球，但“守门员”位置不打球的所在学校的省名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '中场' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '守门员'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些学校所在省的大学生在“中场”位置打球，但没有“守门员”位置的球员？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '中场' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '守门员'"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省有部分大学的学生生打“中场”位置，但没有球员在“守门员”位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '中场' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '守门员')"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有学生在“中场”位置而不是“守门员”位置打球的大学所在的省的数目是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '中场' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  '守门员')"
      }
    ],
    "system": "CREATE TABLE college (state VARCHAR, cName VARCHAR), CREATE TABLE tryout (cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些招生人数少于最大规模招生的大学所在的省。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些招生人数比其他大学少的大学所在的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找在“河北”省注册人数比某些（至少一个）大学大的学校的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  '河北')"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些比“河北”省至少一所大学大的大学叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  '河北')"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有招生人数比“河北”省所有大学都多的大学的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  '河北')"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有招生人数比“河北”省所有大学都多的大学的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  '河北')"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR, cName VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“守门员”就读的学校的总入学人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"守门员\")"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, cName VARCHAR, pPos VARCHAR), CREATE TABLE tryout (enr INTEGER, cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "入学没有任何“守门员”的学校的学生总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"守门员\")"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, cName VARCHAR, pPos VARCHAR), CREATE TABLE tryout (enr INTEGER, cName VARCHAR, pPos VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省的大学入学率高于平均入学率？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省拥有人数比平均大学人数更大的大学？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省的大学入学率低于平均入学率？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省的大学入学比率比平均学校的入学规模小？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT state) FROM college WHERE enr  <  (SELECT avg(enr) FROM college)"
      }
    ],
    "system": "CREATE TABLE college (enr INTEGER, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少设备？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM device"
      }
    ],
    "system": "CREATE TABLE device (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算设备的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM device"
      }
    ],
    "system": "CREATE TABLE device (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按字母降序排列的设备的载体。"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier FROM device ORDER BY Carrier ASC"
      }
    ],
    "system": "CREATE TABLE device (Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的设备不同的载体有什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier FROM device ORDER BY Carrier ASC"
      }
    ],
    "system": "CREATE TABLE device (Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些设备的运营商软件平台不是“安卓”？"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier FROM device WHERE Software_Platform != '安卓'"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回没有“安卓”的设备运营商作为他们的软件平台。"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier FROM device WHERE Software_Platform != '安卓'"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开店年度升序排列的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC"
      }
    ],
    "system": "CREATE TABLE shop (Open_Year VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开业年度升序排序返回店铺的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Shop_Name FROM shop ORDER BY Open_Year ASC"
      }
    ],
    "system": "CREATE TABLE shop (Open_Year VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "库存的平均数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Quantity) FROM stock"
      }
    ],
    "system": "CREATE TABLE stock (Quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出库存的平均数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Quantity) FROM stock"
      }
    ],
    "system": "CREATE TABLE stock (Quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按名称的字母升序排列的商店的名称和位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC"
      }
    ],
    "system": "CREATE TABLE shop (LOCATION VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回按名称字母顺序排列的商店名称和地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT Shop_Name ,  LOCATION FROM shop ORDER BY Shop_Name ASC"
      }
    ],
    "system": "CREATE TABLE shop (LOCATION VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "设备有多少种不同的软件平台？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Software_Platform) FROM device"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同软件平台的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Software_Platform) FROM device"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出一个名为“苹果”的商店的开店年份和日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"苹果\""
      }
    ],
    "system": "CREATE TABLE shop (Open_Year VARCHAR, Shop_Name VARCHAR, Open_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“苹果”店的开店日期和年份是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"苹果\""
      }
    ],
    "system": "CREATE TABLE shop (Open_Year VARCHAR, Shop_Name VARCHAR, Open_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出最近一年开业的商店名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE shop (Open_Year VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近一年开张的商店的店名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Shop_Name FROM shop ORDER BY Open_Year DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE shop (Open_Year VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示商店名称和他们所拥有的设备的载体。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID"
      }
    ],
    "system": "CREATE TABLE stock (Shop_ID VARCHAR, Device_ID VARCHAR), CREATE TABLE device (Device_ID VARCHAR, Carrier VARCHAR), CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "设备商店的名称是什么以及他们携带设备库存的载体是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Shop_Name ,  T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID JOIN shop AS T3 ON T1.Shop_ID  =  T3.Shop_ID"
      }
    ],
    "system": "CREATE TABLE stock (Shop_ID VARCHAR, Device_ID VARCHAR), CREATE TABLE device (Device_ID VARCHAR, Carrier VARCHAR), CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示商店里有不止一种设备库存的商店名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE stock (Shop_ID VARCHAR), CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多于一种设备库存的商店的名字叫什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE stock (Shop_ID VARCHAR), CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示拥有最多种类设备库存的商店名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stock (Shop_ID VARCHAR), CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有设备的库存种类最多的商店叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stock (Shop_ID VARCHAR), CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示库存量最大的商店的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stock (Shop_ID VARCHAR, quantity INTEGER), CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "库存量最大的商店的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stock (Shop_ID VARCHAR, quantity INTEGER), CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的软件平台以及每个平台相应的设备数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "设备的不同软件平台是什么，每个平台对应的设备有多少个？"
      },
      {
        "from": "assistant",
        "value": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请以设备计数的递减顺序显示软件平台。"
      },
      {
        "from": "assistant",
        "value": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按频率下降顺序排列的设备的不同软件平台是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出最大数量的设备共享的软件平台。"
      },
      {
        "from": "assistant",
        "value": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有设备中最常见的软件平台是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE device (Software_Platform VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有库存设备的商店名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)"
      }
    ],
    "system": "CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR), CREATE TABLE stock (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有库存设备的商店名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)"
      }
    ],
    "system": "CREATE TABLE shop (Shop_ID VARCHAR, Shop_Name VARCHAR), CREATE TABLE stock (Shop_ID VARCHAR, Shop_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示开业年份迟于2012年或开业年份早于2008年的商店共有的地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008"
      }
    ],
    "system": "CREATE TABLE shop (LOCATION VARCHAR, Open_Year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些地方既包括2012年以后开张的商店又有2008年之前开张的商店？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008"
      }
    ],
    "system": "CREATE TABLE shop (LOCATION VARCHAR, Open_Year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有设备库存的设备的载体。"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)"
      }
    ],
    "system": "CREATE TABLE device (Device_ID VARCHAR, Carrier VARCHAR), CREATE TABLE stock (Device_ID VARCHAR, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有设备库存的设备的载体是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)"
      }
    ],
    "system": "CREATE TABLE device (Device_ID VARCHAR, Carrier VARCHAR), CREATE TABLE stock (Device_ID VARCHAR, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有超过一个商店库存的设备的载体。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE stock (Device_ID VARCHAR), CREATE TABLE device (Device_ID VARCHAR, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过一个商店库存的设备的载体是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Carrier FROM stock AS T1 JOIN device AS T2 ON T1.Device_ID  =  T2.Device_ID GROUP BY T1.Device_ID HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE stock (Device_ID VARCHAR), CREATE TABLE device (Device_ID VARCHAR, Carrier VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少预订？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM BOOKINGS"
      }
    ],
    "system": "CREATE TABLE BOOKINGS (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计预订的总人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM BOOKINGS"
      }
    ],
    "system": "CREATE TABLE BOOKINGS (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有预订的订单日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Order_Date FROM BOOKINGS"
      }
    ],
    "system": "CREATE TABLE BOOKINGS (Order_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个预订的预定日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Order_Date FROM BOOKINGS"
      }
    ],
    "system": "CREATE TABLE BOOKINGS (Order_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示预定的发货日期和预订的实际交货日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
      }
    ],
    "system": "CREATE TABLE BOOKINGS (Actual_Delivery_Date VARCHAR, Planned_Delivery_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一次预定的发货日期和实际交货日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Planned_Delivery_Date ,  Actual_Delivery_Date FROM BOOKINGS"
      }
    ],
    "system": "CREATE TABLE BOOKINGS (Actual_Delivery_Date VARCHAR, Planned_Delivery_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM CUSTOMERS"
      }
    ],
    "system": "CREATE TABLE CUSTOMERS (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计记录的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM CUSTOMERS"
      }
    ],
    "system": "CREATE TABLE CUSTOMERS (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "顾客“小勇”的电话和电子邮件是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"小勇\""
      }
    ],
    "system": "CREATE TABLE CUSTOMERS (Customer_Phone VARCHAR, Customer_Email_Address VARCHAR, Customer_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出客户名字是“小勇”的电话号码和电子邮件地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT Customer_Phone ,  Customer_Email_Address FROM CUSTOMERS WHERE Customer_Name  =  \"小勇\""
      }
    ],
    "system": "CREATE TABLE CUSTOMERS (Customer_Phone VARCHAR, Customer_Email_Address VARCHAR, Customer_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示戏剧工作室群的所有店名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Store_Name FROM Drama_Workshop_Groups"
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Store_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "戏剧工作室团体的店名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Store_Name FROM Drama_Workshop_Groups"
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Store_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有发票的最小、平均、最大订单数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"
      }
    ],
    "system": "CREATE TABLE INVOICES (Order_Quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有发票上订购的最低、平均和最大数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES"
      }
    ],
    "system": "CREATE TABLE INVOICES (Order_Quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有发票中有哪些不同的付款方法代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT payment_method_code FROM INVOICES"
      }
    ],
    "system": "CREATE TABLE INVOICES (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示发票记录中不同的付款方法代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT payment_method_code FROM INVOICES"
      }
    ],
    "system": "CREATE TABLE INVOICES (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对“中国”营销区域的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"中国\""
      }
    ],
    "system": "CREATE TABLE Marketing_Regions (Marketing_Region_Descriptrion VARCHAR, Marketing_Region_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“中国”营销区域的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT Marketing_Region_Descriptrion FROM Marketing_Regions WHERE Marketing_Region_Name  =  \"中国\""
      }
    ],
    "system": "CREATE TABLE Marketing_Regions (Marketing_Region_Descriptrion VARCHAR, Marketing_Region_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示价格高于平均水平的所有不同的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
      }
    ],
    "system": "CREATE TABLE PRODUCTS (Product_Name VARCHAR, Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些比平均值还要贵产品的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Product_Name FROM PRODUCTS WHERE Product_Price  >  (SELECT avg(Product_Price) FROM PRODUCTS)"
      }
    ],
    "system": "CREATE TABLE PRODUCTS (Product_Name VARCHAR, Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最贵的产品叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE PRODUCTS (Product_Price VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "告诉我最昂贵产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name FROM PRODUCTS ORDER BY Product_Price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE PRODUCTS (Product_Price VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按价格升序列出所有产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
      }
    ],
    "system": "CREATE TABLE Products (Product_Price VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按价格的升序排列所有的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name FROM Products ORDER BY Product_Price ASC"
      }
    ],
    "system": "CREATE TABLE Products (Product_Price VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "表演者“李红”的电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"李红\""
      }
    ],
    "system": "CREATE TABLE PERFORMERS (Customer_Phone VARCHAR, Customer_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到名字是“李红”的表演者的电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"李红\""
      }
    ],
    "system": "CREATE TABLE PERFORMERS (Customer_Phone VARCHAR, Customer_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有支付方法代码和每个代码的订单数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"
      }
    ],
    "system": "CREATE TABLE INVOICES (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出不同的付款方法代码与订单数量"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code ,  count(*) FROM INVOICES GROUP BY payment_method_code"
      }
    ],
    "system": "CREATE TABLE INVOICES (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "大多数订单使用的付款方法代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE INVOICES (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有发票中找到最常用的付款方法的代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE INVOICES (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个是“东方”商店的地址所在的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"东方\""
      }
    ],
    "system": "CREATE TABLE Addresses (Address_ID VARCHAR, City_Town VARCHAR), CREATE TABLE Stores (Store_Name VARCHAR, Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“东方”商店地址所在的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"东方\""
      }
    ],
    "system": "CREATE TABLE Addresses (Address_ID VARCHAR, City_Town VARCHAR), CREATE TABLE Stores (Store_Name VARCHAR, Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有销售区域代码为“西南”的商店地址所在的省或县是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"西南\""
      }
    ],
    "system": "CREATE TABLE Addresses (State_County VARCHAR, Address_ID VARCHAR), CREATE TABLE Stores (Marketing_Region_Code VARCHAR, Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到有销售区域代码“西南”的商店所在的省或县。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Marketing_Region_Code  =  \"西南\""
      }
    ],
    "system": "CREATE TABLE Addresses (State_County VARCHAR, Address_ID VARCHAR), CREATE TABLE Stores (Marketing_Region_Code VARCHAR, Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“友谊商店”的商店所属的营销区域的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"友谊商店\""
      }
    ],
    "system": "CREATE TABLE Marketing_Regions (Marketing_Region_Code VARCHAR, Marketing_Region_Name VARCHAR), CREATE TABLE Stores (Store_Name VARCHAR, Marketing_Region_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“友谊商店”商店所在的营销区域的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"友谊商店\""
      }
    ],
    "system": "CREATE TABLE Marketing_Regions (Marketing_Region_Code VARCHAR, Marketing_Region_Name VARCHAR), CREATE TABLE Stores (Store_Name VARCHAR, Marketing_Region_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对产品价格高于100的服务类型有何描述？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
      }
    ],
    "system": "CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR), CREATE TABLE Services (Service_Type_Code VARCHAR, Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请给我花费超过100的服务类型的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Price  >  100"
      }
    ],
    "system": "CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR), CREATE TABLE Services (Service_Type_Code VARCHAR, Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个服务类型的描述、代码和相应的计数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
      }
    ],
    "system": "CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR), CREATE TABLE Services (Service_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每个服务类型的描述、代码和服务数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Service_Type_Description ,  T2.Service_Type_Code ,  COUNT(*) FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T2.Service_Type_Code"
      }
    ],
    "system": "CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR), CREATE TABLE Services (Service_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最常执行的服务类型的描述和代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR), CREATE TABLE Services (Service_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出执行次数最多的服务类型的描述和代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR), CREATE TABLE Services (Service_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供所有服务的工作组的电话和电子邮件是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Workshop_Group_ID VARCHAR, Store_Phone VARCHAR, Store_Email_Address VARCHAR), CREATE TABLE Services (Workshop_Group_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我所有提供服务的工作组的电话号码和电子邮件地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID"
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Workshop_Group_ID VARCHAR, Store_Phone VARCHAR, Store_Email_Address VARCHAR), CREATE TABLE Services (Workshop_Group_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供产品名为“电影”服务的工作组的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"电影\""
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Workshop_Group_ID VARCHAR, Store_Phone VARCHAR, Store_Email_Address VARCHAR), CREATE TABLE Services (Workshop_Group_ID VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找提供产品名为“电影”服务的工作组的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Store_Phone ,  T1.Store_Email_Address FROM Drama_Workshop_Groups AS T1 JOIN Services AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T2.Product_Name  =  \"电影\""
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Workshop_Group_ID VARCHAR, Store_Phone VARCHAR, Store_Email_Address VARCHAR), CREATE TABLE Services (Workshop_Group_ID VARCHAR, Product_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的产品名称是什么？每个产品的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
      }
    ],
    "system": "CREATE TABLE PRODUCTS (Product_Name VARCHAR, Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个不同的产品名称，显示其平均产品价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name ,  avg(Product_Price) FROM PRODUCTS GROUP BY Product_Name"
      }
    ],
    "system": "CREATE TABLE PRODUCTS (Product_Name VARCHAR, Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "平均产品价格小于100万的产品名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
      }
    ],
    "system": "CREATE TABLE PRODUCTS (Product_Name VARCHAR, Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出平均产品价格低于100万的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_Name FROM PRODUCTS GROUP BY Product_Name HAVING avg(Product_Price)  <  1000000"
      }
    ],
    "system": "CREATE TABLE PRODUCTS (Product_Name VARCHAR, Product_Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“照片”产品的总订购量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"照片\""
      }
    ],
    "system": "CREATE TABLE ORDER_ITEMS (Product_ID VARCHAR, Order_Quantity INTEGER), CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算产品“照片”的总订单数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.Order_Quantity) FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_Name  =  \"照片\""
      }
    ],
    "system": "CREATE TABLE ORDER_ITEMS (Product_ID VARCHAR, Order_Quantity INTEGER), CREATE TABLE Products (Product_Name VARCHAR, Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "价格高于2000的产品的订单细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
      }
    ],
    "system": "CREATE TABLE ORDER_ITEMS (Product_ID VARCHAR, Other_Item_Details VARCHAR), CREATE TABLE Products (Product_price INTEGER, Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出价格超过2000的产品的订单细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Other_Item_Details FROM ORDER_ITEMS AS T1 JOIN Products AS T2 ON T1.Product_ID  =  T2.Product_ID WHERE T2.Product_price  >  2000"
      }
    ],
    "system": "CREATE TABLE ORDER_ITEMS (Product_ID VARCHAR, Other_Item_Details VARCHAR), CREATE TABLE Products (Product_price INTEGER, Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数量是1的订单的实际交货日期是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"
      }
    ],
    "system": "CREATE TABLE Customer_Orders (Order_ID VARCHAR, Actual_Delivery_Date VARCHAR), CREATE TABLE ORDER_ITEMS (Order_ID VARCHAR, Order_Quantity VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出数量为1的所有订单的实际交货日期"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1"
      }
    ],
    "system": "CREATE TABLE Customer_Orders (Order_ID VARCHAR, Actual_Delivery_Date VARCHAR), CREATE TABLE ORDER_ITEMS (Order_ID VARCHAR, Order_Quantity VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "价格高于1000的订单的订单日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
      }
    ],
    "system": "CREATE TABLE Customer_Orders (Order_Date VARCHAR, Order_ID VARCHAR), CREATE TABLE ORDER_ITEMS (Order_ID VARCHAR, Product_ID VARCHAR), CREATE TABLE Products (Product_price INTEGER, Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找订单价格高于1000的订单日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000"
      }
    ],
    "system": "CREATE TABLE Customer_Orders (Order_Date VARCHAR, Order_ID VARCHAR), CREATE TABLE ORDER_ITEMS (Order_ID VARCHAR, Product_ID VARCHAR), CREATE TABLE Products (Product_price INTEGER, Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于所有的戏剧工作组有多少不同的货币代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Currency_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找戏剧工作组使用的不同货币代码的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups"
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Currency_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "地址在“嘉兴”市的戏剧工作组的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"嘉兴\""
      }
    ],
    "system": "CREATE TABLE Addresses (Address_ID VARCHAR, City_Town VARCHAR), CREATE TABLE Drama_Workshop_Groups (Store_Name VARCHAR, Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回位于“嘉兴”市的戏剧工作组的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"嘉兴\""
      }
    ],
    "system": "CREATE TABLE Addresses (Address_ID VARCHAR, City_Town VARCHAR), CREATE TABLE Drama_Workshop_Groups (Store_Name VARCHAR, Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "地址在“黑龙江”省的戏剧工作组的电子邮件地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"黑龙江\""
      }
    ],
    "system": "CREATE TABLE Addresses (State_County VARCHAR, Address_ID VARCHAR), CREATE TABLE Drama_Workshop_Groups (Store_Email_Address VARCHAR, Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出位于“黑龙江”省的戏剧工作组的电子邮件地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"黑龙江\""
      }
    ],
    "system": "CREATE TABLE Addresses (State_County VARCHAR, Address_ID VARCHAR), CREATE TABLE Drama_Workshop_Groups (Store_Email_Address VARCHAR, Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有城市，以及每个城市的戏剧工作组的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"
      }
    ],
    "system": "CREATE TABLE Addresses (Address_ID VARCHAR, City_Town VARCHAR), CREATE TABLE Drama_Workshop_Groups (Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个城市有多少个戏剧工作团体？返回城市和对应的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town"
      }
    ],
    "system": "CREATE TABLE Addresses (Address_ID VARCHAR, City_Town VARCHAR), CREATE TABLE Drama_Workshop_Groups (Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最多的戏剧工作组的营销区域代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Marketing_Region_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个营销区域有最多的戏剧工作群？给出区域号。"
      },
      {
        "from": "assistant",
        "value": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Drama_Workshop_Groups (Marketing_Region_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有至少有一个客户居住但没有表演者居住的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"
      }
    ],
    "system": "CREATE TABLE Addresses (Address_ID VARCHAR, City_Town VARCHAR), CREATE TABLE Customers (Address_ID VARCHAR), CREATE TABLE Performers (Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市至少有一个客户，但没有表演者？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID"
      }
    ],
    "system": "CREATE TABLE Addresses (Address_ID VARCHAR, City_Town VARCHAR), CREATE TABLE Customers (Address_ID VARCHAR), CREATE TABLE Performers (Address_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预订最频繁的情况是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE BOOKINGS (Status_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种状态代码是所有预订中最常见的？"
      },
      {
        "from": "assistant",
        "value": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE BOOKINGS (Status_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "状态码是“停止”的有预订的工作组的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"停止\""
      }
    ],
    "system": "CREATE TABLE Bookings (Workshop_Group_ID VARCHAR, Status_Code VARCHAR), CREATE TABLE Drama_Workshop_Groups (Workshop_Group_ID VARCHAR, Store_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些工作组有状态代码是“停止”的预订？给出其名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"停止\""
      }
    ],
    "system": "CREATE TABLE Bookings (Workshop_Group_ID VARCHAR, Status_Code VARCHAR), CREATE TABLE Drama_Workshop_Groups (Workshop_Group_ID VARCHAR, Store_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有预订的所有客户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
      }
    ],
    "system": "CREATE TABLE Clients (Customer_Name VARCHAR, Client_ID VARCHAR), CREATE TABLE Bookings (Customer_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有预订的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Customer_Name FROM Clients EXCEPT SELECT T2.Customer_Name FROM Bookings AS T1 JOIN Clients AS T2 ON T1.Customer_ID  =  T2.Client_ID"
      }
    ],
    "system": "CREATE TABLE Clients (Customer_Name VARCHAR, Client_ID VARCHAR), CREATE TABLE Bookings (Customer_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用发票上的支付方法代码“信用卡”订购的平均数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"信用卡\""
      }
    ],
    "system": "CREATE TABLE Invoices (payment_method_code VARCHAR, Order_Quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "检查发票记录，计算支付方式是“信用卡”订购的平均数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Order_Quantity) FROM Invoices WHERE payment_method_code  =  \"信用卡\""
      }
    ],
    "system": "CREATE TABLE Invoices (payment_method_code VARCHAR, Order_Quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发票上最常订购的商品的产品ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE INVOICES (Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在发票上找到最常订购的产品的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE INVOICES (Product_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供“照片”产品和“电影”产品的服务类型有哪些描述？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  '照片' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  '电影'"
      }
    ],
    "system": "CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR), CREATE TABLE Services (Product_Name VARCHAR, Service_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出不仅提供“照片”产品而且提供“电影”产品的服务类型的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  '照片' INTERSECT SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code WHERE T2.Product_Name  =  '电影'"
      }
    ],
    "system": "CREATE TABLE Ref_Service_Types (Service_Type_Description VARCHAR, Service_Type_Code VARCHAR), CREATE TABLE Services (Product_Name VARCHAR, Service_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个乐队？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Band"
      }
    ],
    "system": "CREATE TABLE Band (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到乐队的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Band"
      }
    ],
    "system": "CREATE TABLE Band (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的标签是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT label FROM Albums"
      }
    ],
    "system": "CREATE TABLE Albums (label VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同唱片的标签有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT label FROM Albums"
      }
    ],
    "system": "CREATE TABLE Albums (label VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有2012年的专辑。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM Albums WHERE YEAR  =  2012"
      }
    ],
    "system": "CREATE TABLE Albums (YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2012年创建的专辑的列表。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM Albums WHERE YEAR  =  2012"
      }
    ],
    "system": "CREATE TABLE Albums (YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出名字是“俊杰”的音乐家的所有舞台位置"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"俊杰\""
      }
    ],
    "system": "CREATE TABLE Performance (stageposition VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“俊杰”的音乐家的所有舞台位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.stageposition FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE Firstname  =  \"俊杰\""
      }
    ],
    "system": "CREATE TABLE Performance (stageposition VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少首歌？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Songs"
      }
    ],
    "system": "CREATE TABLE Songs (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算歌曲的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Songs"
      }
    ],
    "system": "CREATE TABLE Songs (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有姓氏是“刘”的艺术家演唱的歌曲"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"刘\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, Lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏是“刘”的艺术家演唱的歌曲的名字叫什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.Lastname  =  \"刘\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, Lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少音乐家表演了歌曲“闪光”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"红玫瑰\""
      }
    ],
    "system": "CREATE TABLE performance (bandmate VARCHAR, songid VARCHAR), CREATE TABLE band (id VARCHAR), CREATE TABLE songs (songid VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少音乐家在歌曲“红玫瑰”中有过表演？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM performance AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id JOIN songs AS T3 ON T3.songid  =  T1.songid WHERE T3.Title  =  \"红玫瑰\""
      }
    ],
    "system": "CREATE TABLE performance (bandmate VARCHAR, songid VARCHAR), CREATE TABLE band (id VARCHAR), CREATE TABLE songs (songid VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有名为“贯中”的艺术家创作的歌曲。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"贯中\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“贯中”的艺术家创作所有的歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.Title FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T2.firstname  =  \"贯中\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁演奏了“红日”这首歌？显示其姓名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"红日\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演唱“红日”的那位艺术家的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"红日\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在“红日”这首歌的“后台”位置表演？显示其姓名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"红日\" AND T1.StagePosition  =  \"后台\""
      }
    ],
    "system": "CREATE TABLE Performance (StagePosition VARCHAR, SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“红日”中处于“后台”位置的表演者的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"红日\" AND T1.StagePosition  =  \"后台\""
      }
    ],
    "system": "CREATE TABLE Performance (StagePosition VARCHAR, SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "专辑有多少个独特的标签？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT label) FROM albums"
      }
    ],
    "system": "CREATE TABLE albums (label VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "专辑的独特标签是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT label) FROM albums"
      }
    ],
    "system": "CREATE TABLE albums (label VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多的唱片的标签是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE albums (label VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "唱片书最多的标签是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT label FROM albums GROUP BY label ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE albums (label VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制作歌曲数量最多的音乐家的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演奏最多数量歌曲的音乐家的姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最靠“后台”位置的音乐家的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"后台\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Performance (bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演奏“后台”位置最多的音乐家的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id WHERE stageposition  =  \"后台\" GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Performance (bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有名字包含“这个”的歌曲。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM songs WHERE title LIKE '这个'"
      }
    ],
    "system": "CREATE TABLE songs (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些标题有“这个”的歌的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM songs WHERE title LIKE '这个'"
      }
    ],
    "system": "CREATE TABLE songs (title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有被使用的乐器有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT instrument FROM Instruments"
      }
    ],
    "system": "CREATE TABLE Instruments (instrument VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在数据库中列出的不同乐器有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT instrument FROM Instruments"
      }
    ],
    "system": "CREATE TABLE Instruments (instrument VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“刘”的音乐家在歌曲“冰雨”中使用了什么乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"刘\" AND T3.title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (title VARCHAR, SongId VARCHAR, songid VARCHAR), CREATE TABLE Instruments (instrument VARCHAR, bandmateid VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那位姓“刘”的音乐家在“冰雨”中演奏了什么乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"刘\" AND T3.title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (title VARCHAR, SongId VARCHAR, songid VARCHAR), CREATE TABLE Instruments (instrument VARCHAR, bandmateid VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最常用的乐器是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instruments (instrument VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那种乐器被最常使用？"
      },
      {
        "from": "assistant",
        "value": "SELECT instrument FROM instruments GROUP BY instrument ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE instruments (instrument VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少首歌用过乐器“鼓”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM instruments WHERE instrument  =  \"鼓\""
      }
    ],
    "system": "CREATE TABLE instruments (instrument VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少歌曲用“鼓”作为乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM instruments WHERE instrument  =  \"鼓\""
      }
    ],
    "system": "CREATE TABLE instruments (instrument VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "\"冰雨\"这首歌使用了什么乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE instruments (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“冰雨”歌曲中使用的乐器有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE instruments (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“冰雨”歌曲使用了多少种乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE instruments (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“冰雨”歌曲中使用了多少种不同的乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE instruments (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏为“刘”的音乐家使用了多少乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"刘\""
      }
    ],
    "system": "CREATE TABLE instruments (bandmateid VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有“刘”这个姓氏的音乐家使用了多少种乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"刘\""
      }
    ],
    "system": "CREATE TABLE instruments (bandmateid VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出姓氏是“刘”的音乐家所有使用的乐器。"
      },
      {
        "from": "assistant",
        "value": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"刘\""
      }
    ],
    "system": "CREATE TABLE instruments (bandmateid VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“刘”的音乐家使用的所有乐器有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT instrument FROM instruments AS T1 JOIN Band AS T2 ON T1.bandmateid  =  T2.id WHERE T2.lastname  =  \"刘\""
      }
    ],
    "system": "CREATE TABLE instruments (bandmateid VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪首歌声乐部分最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪首歌有最多比例的声乐？"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid GROUP BY T1.songid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种声乐的类型最常见？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最频繁出现的声乐类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个声乐类型被有成员姓氏为“刘”的乐队演奏得最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"刘\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR), CREATE TABLE band (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有成员的姓是“刘”的乐队最常演奏的声乐类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"刘\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR), CREATE TABLE band (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "歌曲“冰雨”使用的声乐类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "歌曲“冰雨”中使用的声乐类型有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出歌曲“波斯猫”中使用的声乐类型的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"波斯猫\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "歌曲“波斯猫”中使用的声乐类型有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"波斯猫\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少首歌的声乐类型是“领唱”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"领唱\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "声乐类型是“领唱”的歌有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"领唱\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“俊杰”的音乐家在“江南”这首歌中演奏的是哪种声乐类型的歌曲？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"俊杰\" AND T2.title  =  \"江南\""
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR, songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR), CREATE TABLE band (firstname VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在歌曲“江南”中，名字为“俊杰”的音乐家所演奏的声乐类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.firstname  =  \"俊杰\" AND T2.title  =  \"江南\""
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR, songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR), CREATE TABLE band (firstname VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有没有“领唱”声乐类型的歌曲。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"领唱\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“领唱”声乐类型的歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"领唱\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有的声乐类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT TYPE FROM vocals"
      }
    ],
    "system": "CREATE TABLE vocals (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "声乐有那些不同的类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT TYPE FROM vocals"
      }
    ],
    "system": "CREATE TABLE vocals (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发行于2010年度的专辑是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM Albums WHERE YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE Albums (YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010发行的专辑有什么信息？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM Albums WHERE YEAR  =  2010"
      }
    ],
    "system": "CREATE TABLE Albums (YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁表演了“冰雨”这首歌？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "表演“冰雨”的艺人的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "创作最多数量歌曲的音乐家的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演唱最多歌曲的艺人的姓是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY lastname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“刘”的音乐家在歌曲“红日”中使用了什么乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"刘\" AND T3.title  =  \"红日\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (title VARCHAR, SongId VARCHAR, songid VARCHAR), CREATE TABLE Instruments (instrument VARCHAR, bandmateid VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏是“刘”的音乐家在歌曲“红日”中演奏了什么乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT T4.instrument FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId JOIN Instruments AS T4 ON T4.songid  =  T3.songid AND T4.bandmateid  =  T2.id WHERE T2.lastname  =  \"刘\" AND T3.title  =  \"红日\""
      }
    ],
    "system": "CREATE TABLE Performance (SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (title VARCHAR, SongId VARCHAR, songid VARCHAR), CREATE TABLE Instruments (instrument VARCHAR, bandmateid VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“红日”这首歌中使用多少乐器？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"红日\""
      }
    ],
    "system": "CREATE TABLE instruments (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "歌曲“红日”中有多少种乐器被使用？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"红日\""
      }
    ],
    "system": "CREATE TABLE instruments (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "歌曲“红日”中使用的声乐类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"红日\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "歌曲“红日”中使用了那种类型的声乐？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"红日\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出歌曲“冰雨”中的声乐演唱类型的数量"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字为“冰雨”歌曲中使用了多少种声乐类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"冰雨\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有“分享”一共有多少首歌？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"分享\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少首不同的歌拥有“分享”的声乐类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"分享\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有没有“后台”声乐类型的歌曲。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"后台\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“后台”声乐类型的不同歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"后台\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个声乐类型被有成员名字是“俊杰”的乐队演奏得最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"俊杰\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR), CREATE TABLE band (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字为“俊杰”的乐队成员所在地乐队最常演奏的声乐类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"俊杰\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR), CREATE TABLE band (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“刘”的音乐家在歌曲“说好的幸福呢”中演唱了了哪种类型声乐？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"刘\" AND T2.title  =  \"说好的幸福呢\""
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR, songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR), CREATE TABLE band (id VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在歌曲“说好的幸福呢”中，姓“刘”的音乐家所延长的声乐类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid JOIN band AS T3 ON T1.bandmate  =  T3.id WHERE T3.lastname  =  \"刘\" AND T2.title  =  \"说好的幸福呢\""
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR, songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR), CREATE TABLE band (id VARCHAR, lastname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在最多数歌曲中有过表演的乐队成员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Performance (bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR), CREATE TABLE Songs (SongId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在演奏过最多数歌曲的乐队的成员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.firstname FROM Performance AS t1 JOIN Band AS t2 ON t1.bandmate  =  t2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId GROUP BY firstname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Performance (bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR), CREATE TABLE Songs (SongId VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在拥有成员名字是“贯中”的乐队中哪种声乐类型被演奏的最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"贯中\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR), CREATE TABLE band (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "成员名字包含“贯中”的乐队中唱得最多的声乐是什么类型的？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"贯中\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE vocals (bandmate VARCHAR), CREATE TABLE band (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁为“说好的幸福呢”的“后台”做舞台表演？显示姓名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"说好的幸福呢\" AND T1.StagePosition  =  \"后台\""
      }
    ],
    "system": "CREATE TABLE Performance (StagePosition VARCHAR, SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "为歌曲“说好的幸福呢”表演“后台”的艺术家的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"说好的幸福呢\" AND T1.StagePosition  =  \"后台\""
      }
    ],
    "system": "CREATE TABLE Performance (StagePosition VARCHAR, SongId VARCHAR, bandmate VARCHAR), CREATE TABLE Band (firstname VARCHAR, id VARCHAR, lastname VARCHAR), CREATE TABLE Songs (SongId VARCHAR, Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有“后台”声乐类型的歌曲的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"后台\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些没有没有声乐类型是“后台”的歌曲的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"后台\""
      }
    ],
    "system": "CREATE TABLE vocals (songid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "专辑“十一月的肖邦”中的歌曲有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"十一月的肖邦\""
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, aid VARCHAR), CREATE TABLE tracklists (songid VARCHAR, albumid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "专辑“十一月的肖邦”包含的歌曲名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE T1.title  =  \"十一月的肖邦\""
      }
    ],
    "system": "CREATE TABLE albums (title VARCHAR, aid VARCHAR), CREATE TABLE tracklists (songid VARCHAR, albumid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在标签是“环球音乐公司”下的专辑中的歌曲是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"环球音乐公司\""
      }
    ],
    "system": "CREATE TABLE albums (aid VARCHAR), CREATE TABLE tracklists (songid VARCHAR, albumid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在专辑标签名称为“环球音乐公司”下的所有歌曲的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.title FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.label  =  \"环球音乐公司\""
      }
    ],
    "system": "CREATE TABLE albums (aid VARCHAR), CREATE TABLE tracklists (songid VARCHAR, albumid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有“我们的歌”专辑中的歌曲数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"我们的歌\""
      }
    ],
    "system": "CREATE TABLE albums (aid VARCHAR), CREATE TABLE tracklists (songid VARCHAR, albumid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“我们的歌”专辑里有多少歌曲？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T3.title) FROM albums AS T1 JOIN tracklists AS T2 ON T1.aid  =  T2.albumid JOIN songs AS T3 ON T2.songid  =  T3.songid WHERE t1.type  =  \"我们的歌\""
      }
    ],
    "system": "CREATE TABLE albums (aid VARCHAR), CREATE TABLE tracklists (songid VARCHAR, albumid VARCHAR), CREATE TABLE songs (title VARCHAR, songid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“索尼”的创始人是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT founder FROM manufacturers WHERE name  =  '索尼'"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“索尼”的创始人。"
      },
      {
        "from": "assistant",
        "value": "SELECT founder FROM manufacturers WHERE name  =  '索尼'"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "由“强东”创立的公司的总部在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarter FROM manufacturers WHERE founder  =  '强东'"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "创始人是“强东”的公司的总部是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT headquarter FROM manufacturers WHERE founder  =  '强东'"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按收益最高的排序，找出所有制造商的名称和它们的总部。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue VARCHAR, name VARCHAR, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按收益下降的顺序，所有制造商的名称和总部是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue VARCHAR, name VARCHAR, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有公司的平均收益、最大收益和总收益是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有制造商的平均收益、最大收益和总收益。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“林安”创建了多少家公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM manufacturers WHERE founder  =  '林安'"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“林安”创建的公司数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM manufacturers WHERE founder  =  '林安'"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出总部位于“郑州”的公司创造的总收益。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  '郑州'"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue INTEGER, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "公司总部在“郑州”的公司的收益是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) FROM manufacturers WHERE headquarter  =  '郑州'"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue INTEGER, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "已列出的不同的城市有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT headquarter FROM manufacturers"
      }
    ],
    "system": "CREATE TABLE manufacturers (headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出制造商的不同的总部。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT headquarter FROM manufacturers"
      }
    ],
    "system": "CREATE TABLE manufacturers (headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出总部在“东京”或“北京”的制造商的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM manufacturers WHERE headquarter  =  '日本' OR headquarter  =  '北京'"
      }
    ],
    "system": "CREATE TABLE manufacturers (headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少制造商在“东京”或“北京”拥有总部？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM manufacturers WHERE headquarter  =  '日本' OR headquarter  =  '北京'"
      }
    ],
    "system": "CREATE TABLE manufacturers (headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到以字母“少”开头的公司的创始人的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT founder FROM manufacturers WHERE name LIKE '少'"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是首字母为“少”的公司的创始人？"
      },
      {
        "from": "assistant",
        "value": "SELECT founder FROM manufacturers WHERE name LIKE '少'"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出收益在100到150之间的公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150"
      }
    ],
    "system": "CREATE TABLE manufacturers (name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "收益在100到150之间的公司名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM manufacturers WHERE revenue BETWEEN 100 AND 150"
      }
    ],
    "system": "CREATE TABLE manufacturers (name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有在“东京”或“台湾”设有总办事处的公司的总收益是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  '日本' OR Headquarter  =  '台湾'"
      }
    ],
    "system": "CREATE TABLE manufacturers (Headquarter VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回总部设在“东京”或“台湾”的公司的总收益。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  '日本' OR Headquarter  =  '台湾'"
      }
    ],
    "system": "CREATE TABLE manufacturers (Headquarter VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到由“创新实验室”和“索尼”两家公司生产的产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  '创造' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  '索尼'"
      }
    ],
    "system": "CREATE TABLE products (Manufacturer VARCHAR, name VARCHAR), CREATE TABLE manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“创新实验室”和“索尼”生产的产品名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  '创造' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  '索尼'"
      }
    ],
    "system": "CREATE TABLE products (Manufacturer VARCHAR, name VARCHAR), CREATE TABLE manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出收益最高的制造商的名称、总部和创始人。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue VARCHAR, founder VARCHAR, name VARCHAR, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "收益最高的公司的名称、总部和创始人是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue VARCHAR, founder VARCHAR, name VARCHAR, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照收益的降序排序，查找所有制造商的名称、总部和收益。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue VARCHAR, name VARCHAR, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按收益下降排序，制造商的名称、总部和收益是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue VARCHAR, name VARCHAR, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出收益大于所有公司平均收益的公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)"
      }
    ],
    "system": "CREATE TABLE manufacturers (name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "收益高于所有制造商收益的平均值的公司的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)"
      }
    ],
    "system": "CREATE TABLE manufacturers (name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找收益小于所有位于“奥斯汀”的公司收益的公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  '郑州')"
      }
    ],
    "system": "CREATE TABLE manufacturers (headquarter VARCHAR, name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "收益低于“奥斯汀”最低收益的制造商的公司有哪些名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  '郑州')"
      }
    ],
    "system": "CREATE TABLE manufacturers (headquarter VARCHAR, name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出收益大于“奥斯汀”一些公司收益的公司的总收益。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  '郑州')"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue INTEGER, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "收益高于在“奥斯汀”收益最低的制造商的所有公司的总收益是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  '郑州')"
      }
    ],
    "system": "CREATE TABLE manufacturers (revenue INTEGER, headquarter VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个创始人的公司总收益。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个创始人创办的公司的总收益是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder"
      }
    ],
    "system": "CREATE TABLE manufacturers (founder VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个城市收益最高的公司的名称和收益。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter"
      }
    ],
    "system": "CREATE TABLE manufacturers (Headquarter VARCHAR, name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个总部城市收益最高的公司的名称及其收益是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  max(revenue) ,  Headquarter FROM manufacturers GROUP BY Headquarter"
      }
    ],
    "system": "CREATE TABLE manufacturers (Headquarter VARCHAR, name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找处每个制造商的总收益。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name"
      }
    ],
    "system": "CREATE TABLE manufacturers (name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个制造商的总收益是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name"
      }
    ],
    "system": "CREATE TABLE manufacturers (name VARCHAR, revenue INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个制造商的所有产品的平均价格，并列出每个公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, Manufacturer VARCHAR), CREATE TABLE manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个制造商的平均产品价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, Manufacturer VARCHAR), CREATE TABLE manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不同总部城市的公司生产的不同产品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"
      }
    ],
    "system": "CREATE TABLE products (Manufacturer VARCHAR, name VARCHAR), CREATE TABLE manufacturers (Headquarter VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个总部城市生产多少种不同的产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter"
      }
    ],
    "system": "CREATE TABLE products (Manufacturer VARCHAR, name VARCHAR), CREATE TABLE manufacturers (Headquarter VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“索尼”不生产的产品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  '索尼')"
      }
    ],
    "system": "CREATE TABLE products (Manufacturer VARCHAR, name VARCHAR), CREATE TABLE manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种产品不是“索尼”制造的？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  '索尼')"
      }
    ],
    "system": "CREATE TABLE products (Manufacturer VARCHAR, name VARCHAR), CREATE TABLE manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不做“DVD驱动器”的公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD播放机'"
      }
    ],
    "system": "CREATE TABLE manufacturers (name VARCHAR, code VARCHAR), CREATE TABLE products (Manufacturer VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不制作“DVD驱动器”的公司的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM manufacturers EXCEPT SELECT T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T1.name  =  'DVD播放机'"
      }
    ],
    "system": "CREATE TABLE manufacturers (name VARCHAR, code VARCHAR), CREATE TABLE products (Manufacturer VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个制造商的产品数量，显示每个公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE products (Manufacturer VARCHAR), CREATE TABLE manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个制造商找出多少产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE products (Manufacturer VARCHAR), CREATE TABLE manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择店里所有产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM Products"
      }
    ],
    "system": "CREATE TABLE Products (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有产品的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM Products"
      }
    ],
    "system": "CREATE TABLE Products (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择店里所有产品的名称和价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  price FROM products"
      }
    ],
    "system": "CREATE TABLE products (price VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "商店里所有产品的名称和价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  price FROM products"
      }
    ],
    "system": "CREATE TABLE products (price VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择价格低于或等于200美元的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM products WHERE price  <=  200"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "价格最多是200的产品名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM products WHERE price  <=  200"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有价格在60到120美元之间的产品的所有信息，。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM products WHERE price BETWEEN 60 AND 120"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有价格在60到120之间的产品的所有信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM products WHERE price BETWEEN 60 AND 120"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算所有产品的平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM products"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有产品的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM products"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算制造商代码为2的所有产品的平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, Manufacturer VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "制造商代码为2的产品的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM products WHERE Manufacturer  =  2"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, Manufacturer VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算价格大于或等于180美元的产品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products WHERE price >= 180"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "多少产品的价格至少有180？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products WHERE price >= 180"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择所有价格大于或等于$180的产品的名称和价格，首先按价格（降序）排序，然后按名称（升序）排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据价格下降及名称上升排序，价格至少为180的产品的名称和价格是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从每个产品的制造商中选择所有产品数据。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code"
      }
    ],
    "system": "CREATE TABLE products (manufacturer VARCHAR), CREATE TABLE Manufacturers (code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的产品数据，以及每个产品的制造商是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code"
      }
    ],
    "system": "CREATE TABLE products (manufacturer VARCHAR), CREATE TABLE Manufacturers (code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择每个制造商产品的平均价格，只显示制造商的代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer"
      }
    ],
    "system": "CREATE TABLE Products (Manufacturer VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按制造商代码分组的产品平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(Price) ,  Manufacturer FROM Products GROUP BY Manufacturer"
      }
    ],
    "system": "CREATE TABLE Products (Manufacturer VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择每个制造商产品的平均价格，显示制造商的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE products (manufacturer VARCHAR, Price INTEGER), CREATE TABLE Manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按制造商名称分组的产品平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE products (manufacturer VARCHAR, Price INTEGER), CREATE TABLE Manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择产品平均价格高于或等于$150的制造商的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, manufacturer VARCHAR, Price INTEGER), CREATE TABLE Manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "产品平均成本在150或以上的制造商的产品名称和平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, manufacturer VARCHAR, Price INTEGER), CREATE TABLE Manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择最便宜产品的名称和价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Products (price VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最便宜的产品的名称和价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Products (price VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择每个制造商的名称及其最昂贵产品的名称和价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE products (manufacturer VARCHAR, Name VARCHAR, Price INTEGER), CREATE TABLE Manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个制造商的名字，他们最贵的产品的名称和价格是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name"
      }
    ],
    "system": "CREATE TABLE products (manufacturer VARCHAR, Name VARCHAR, Price INTEGER), CREATE TABLE Manufacturers (name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择每个产品类别中最便宜的产品代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT code ,  name ,  min(price) FROM products GROUP BY name"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个类别中最便宜的产品的代码和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT code ,  name ,  min(price) FROM products GROUP BY name"
      }
    ],
    "system": "CREATE TABLE products (price INTEGER, name VARCHAR, code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近创建的问题日志的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE problem_log (problem_log_id VARCHAR, log_entry_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个问题日志是最近创建的？把日志ID给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE problem_log (problem_log_id VARCHAR, log_entry_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最老的日志ID和对应的问题ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"
      }
    ],
    "system": "CREATE TABLE problem_log (problem_id VARCHAR, problem_log_id VARCHAR, log_entry_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最老的日志ID及其对应的问题ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1"
      }
    ],
    "system": "CREATE TABLE problem_log (problem_id VARCHAR, problem_log_id VARCHAR, log_entry_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据ID为10的问题找出所有日志的ID和日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"
      }
    ],
    "system": "CREATE TABLE problem_log (problem_id VARCHAR, problem_log_id VARCHAR, log_entry_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于ID为10的问题，返回其问题日志的ID和日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_log_id ,  log_entry_date FROM problem_log WHERE problem_id = 10"
      }
    ],
    "system": "CREATE TABLE problem_log (problem_id VARCHAR, problem_log_id VARCHAR, log_entry_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有日志ID及其从问题日志中的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_log_id ,  log_entry_description FROM problem_log"
      }
    ],
    "system": "CREATE TABLE problem_log (log_entry_description VARCHAR, problem_log_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个问题的日志ID和条目描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_log_id ,  log_entry_description FROM problem_log"
      }
    ],
    "system": "CREATE TABLE problem_log (log_entry_description VARCHAR, problem_log_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出分配到id为1的问题的所有不同工作人员的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR), CREATE TABLE problem_log (problem_id VARCHAR, assigned_to_staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些员工被分配到ID是1的问题？给我他们的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR), CREATE TABLE problem_log (problem_id VARCHAR, assigned_to_staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出分配给名为“马” “军军”的工作人员的问题id和日志id。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"马\" AND T1.staff_last_name = \"军军\""
      }
    ],
    "system": "CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR), CREATE TABLE problem_log (problem_id VARCHAR, problem_log_id VARCHAR, assigned_to_staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个问题ID和日志ID被指派给名为“马” “军军”的员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.problem_id ,  T2.problem_log_id FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T1.staff_first_name = \"马\" AND T1.staff_last_name = \"军军\""
      }
    ],
    "system": "CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR), CREATE TABLE problem_log (problem_id VARCHAR, problem_log_id VARCHAR, assigned_to_staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“显示器”产品有多少问题？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"显示器\""
      }
    ],
    "system": "CREATE TABLE product (product_id VARCHAR, product_name VARCHAR), CREATE TABLE problems (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被称为“显示器”的产品有多少问题被记录？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id WHERE T1.product_name = \"显示器\""
      }
    ],
    "system": "CREATE TABLE product (product_id VARCHAR, product_name VARCHAR), CREATE TABLE problems (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "出问题最多的产品有多少问题？列出问题的数量和产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE product (product_id VARCHAR, product_name VARCHAR), CREATE TABLE problems (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种产品有最多数量的问题？给出问题数量和产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE product (product_id VARCHAR, product_name VARCHAR), CREATE TABLE problems (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请给出一个名字为“梁”的工作人员报告的问题的描述列表。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"梁\""
      }
    ],
    "system": "CREATE TABLE problems (problem_description VARCHAR, reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“梁”的员工报告了哪些问题？显示问题的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"梁\""
      }
    ],
    "system": "CREATE TABLE problems (problem_description VARCHAR, reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出姓氏为“兰兰”的工作人员报告的问题的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"兰兰\""
      }
    ],
    "system": "CREATE TABLE problems (problem_id VARCHAR, reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_id VARCHAR, staff_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓“兰兰”的员工报告了哪些问题？显示问题的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"兰兰\""
      }
    ],
    "system": "CREATE TABLE problems (problem_id VARCHAR, reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_id VARCHAR, staff_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“1978-06-26”后报告的问题的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""
      }
    ],
    "system": "CREATE TABLE problems (problem_id VARCHAR, date_problem_reported INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“1978-06-26”后所报告问题的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_id FROM problems WHERE date_problem_reported > \"1978-06-26\""
      }
    ],
    "system": "CREATE TABLE problems (problem_id VARCHAR, date_problem_reported INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“1978-06-26”之前报告的问题的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""
      }
    ],
    "system": "CREATE TABLE problems (problem_id VARCHAR, date_problem_reported INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“1978-06-26”之前有哪些问题？把问题的ID告诉我。"
      },
      {
        "from": "assistant",
        "value": "SELECT problem_id FROM problems WHERE date_problem_reported < \"1978-06-26\""
      }
    ],
    "system": "CREATE TABLE problems (problem_id VARCHAR, date_problem_reported INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个有问题的产品，问题的数量和产品id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR), CREATE TABLE product (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个有问题的产品，列出问题的数量和产品id。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id"
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR), CREATE TABLE product (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个有问题的产品，查找“1986-11-13”之后报告的问题的数量和产品ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR, date_problem_reported INTEGER), CREATE TABLE product (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“1986-11-13”之后有哪些产品出现了问题？给我产品ID和“1986-11-13”后报告的问题数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id"
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR, date_problem_reported INTEGER), CREATE TABLE product (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有不同产品名称的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
      }
    ],
    "system": "CREATE TABLE product (product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列所有的不同的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_name FROM product ORDER BY product_name"
      }
    ],
    "system": "CREATE TABLE product (product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按产品ID排序列出所有不同的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
      }
    ],
    "system": "CREATE TABLE product (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用产品ID排序的不同产品名称列表是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_name FROM product ORDER BY product_id"
      }
    ],
    "system": "CREATE TABLE product (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字为“李” “航”或“白” “博文”的工作人员报告的问题的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"李\" AND T2.staff_last_name = \"航\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"白\" AND T2.staff_last_name = \"博文\""
      }
    ],
    "system": "CREATE TABLE problems (reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李” “航”或“白” “博文”的工作人员报告了哪些问题？给出问题的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"李\" AND T2.staff_last_name = \"航\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"白\" AND T2.staff_last_name = \"博文\""
      }
    ],
    "system": "CREATE TABLE problems (reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于“梁” “天一”报告的由“李红” “军”授权关闭的问题的产品标识是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"梁\" AND T2.staff_last_name = \"天一\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"李红\" AND T2.staff_last_name = \"军\""
      }
    ],
    "system": "CREATE TABLE problems (reported_by_staff_id VARCHAR, closure_authorised_by_staff_id VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“梁” “天一”报告了哪些产品的问题被“李红” “军”授权关闭？返回产品的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"梁\" AND T2.staff_last_name = \"天一\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"李红\" AND T2.staff_last_name = \"军\""
      }
    ],
    "system": "CREATE TABLE problems (reported_by_staff_id VARCHAR, closure_authorised_by_staff_id VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“严” “冰”报告的任何问题发生之前报告的问题的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"严\" AND T4.staff_last_name = \"冰\" )"
      }
    ],
    "system": "CREATE TABLE problems (reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在工作人员“严” “冰”报告任何问题的日期之前，报告了哪些问题？把问题的ID告诉我。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  <  ( SELECT min(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"严\" AND T4.staff_last_name = \"冰\" )"
      }
    ],
    "system": "CREATE TABLE problems (reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“马” “军军”报告的问题之后报告的问题的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"马\" AND T4.staff_last_name = \"军军\" )"
      }
    ],
    "system": "CREATE TABLE problems (reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“马” “军军”员工报告的任何问题日期之后报告的问题的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE date_problem_reported  >  ( SELECT max(date_problem_reported) FROM problems AS T3 JOIN staff AS T4 ON T3.reported_by_staff_id = T4.staff_id WHERE T4.staff_first_name = \"马\" AND T4.staff_last_name = \"军军\" )"
      }
    ],
    "system": "CREATE TABLE problems (reported_by_staff_id VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出问题数量最多的3个产品。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR), CREATE TABLE product (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪三种产品有最多的问题？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR), CREATE TABLE product (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出1995年以后报告的产品“显示器”中问题的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"显示器\" AND T1.date_problem_reported > \"1995\""
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR, problem_id VARCHAR, date_problem_reported INTEGER), CREATE TABLE product (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1995年以后报告了产品名字是“显示器”相关问题的id是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"显示器\" AND T1.date_problem_reported > \"1995\""
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR, problem_id VARCHAR, date_problem_reported INTEGER), CREATE TABLE product (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些从产品“内存”而不是“硬盘”报告问题的员工的名字和姓氏？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"内存\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"硬盘\""
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR, reported_by_staff_id VARCHAR), CREATE TABLE product (product_id VARCHAR, product_name VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_first_name VARCHAR, staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些员工报告“内存”产品而不是“硬盘”产品的问题？给出他们的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"内存\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"硬盘\""
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR, reported_by_staff_id VARCHAR), CREATE TABLE product (product_id VARCHAR, product_name VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_first_name VARCHAR, staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“刘” “兰兰”和“王” “平之”都报告有问题的产品"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"刘\" AND T3.staff_last_name = \"兰兰\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"王\" AND T3.staff_last_name = \"平之\""
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR, reported_by_staff_id VARCHAR), CREATE TABLE product (product_id VARCHAR, product_name VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“刘” “兰兰”和员工“王” “平之”报告有问题的产品是哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"刘\" AND T3.staff_last_name = \"兰兰\" INTERSECT SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T3.staff_first_name = \"王\" AND T3.staff_last_name = \"平之\""
      }
    ],
    "system": "CREATE TABLE problems (product_id VARCHAR, reported_by_staff_id VARCHAR), CREATE TABLE product (product_id VARCHAR, product_name VARCHAR), CREATE TABLE staff (staff_last_name VARCHAR, staff_id VARCHAR, staff_first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少分支机构的会员人数超过平均数？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少分支机构的成员数超过了平均数？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM branch WHERE membership_amount  >  (SELECT avg(membership_amount) FROM branch)"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开业年份分列出所有分行名称、地址、道路和城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year"
      }
    ],
    "system": "CREATE TABLE branch (city VARCHAR, address_road VARCHAR, name VARCHAR, open_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按开业年份排序的分行的名称、地址道路和城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year"
      }
    ],
    "system": "CREATE TABLE branch (city VARCHAR, address_road VARCHAR, name VARCHAR, open_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "会员人数最多的三大分支机构是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有前三多会员人数的分支机构的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有具有至少100个会员人数的分支机构所在的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市拥有超过100个会员资格？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT city FROM branch WHERE membership_amount  >=  100"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出至少两个商店开业的所有营业年。"
      },
      {
        "from": "assistant",
        "value": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE branch (open_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "开店时间至少有两个的营业年有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE branch (open_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示2011年开业或位于\"北京\"的所有分行的最低和最高会员数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  '北京'"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER, open_year VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2011年开业或位于\"北京\"的所有分行的最低和最高会员人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  '北京'"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER, open_year VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个城市在2010年开放的每个分支机构的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city"
      }
    ],
    "system": "CREATE TABLE branch (city VARCHAR, open_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个城市，有多少分支机构在2010年之前开放？"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city"
      }
    ],
    "system": "CREATE TABLE branch (city VARCHAR, open_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "会员有多少不同级别？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT LEVEL) FROM member"
      }
    ],
    "system": "CREATE TABLE member (LEVEL VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的会员级别有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT LEVEL) FROM member"
      }
    ],
    "system": "CREATE TABLE member (LEVEL VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照级别的降序显示所有成员的卡号、姓名和家乡。"
      },
      {
        "from": "assistant",
        "value": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC"
      }
    ],
    "system": "CREATE TABLE member (LEVEL VARCHAR, card_number VARCHAR, name VARCHAR, hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按降序排列的每个会员的卡号、姓名和家乡是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT card_number ,  name ,  hometown FROM member ORDER BY LEVEL DESC"
      }
    ],
    "system": "CREATE TABLE member (LEVEL VARCHAR, card_number VARCHAR, name VARCHAR, hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示成员数量最多的会员级别。"
      },
      {
        "from": "assistant",
        "value": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE member (LEVEL VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人数最多的会员等级是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE member (LEVEL VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按注册年份排序显示所有成员名字和的注册分支名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (register_year VARCHAR, branch_id VARCHAR, member_id VARCHAR), CREATE TABLE branch (name VARCHAR, branch_id VARCHAR), CREATE TABLE member (name VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按注册年份排序的注册会员和分支机构的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (register_year VARCHAR, branch_id VARCHAR, member_id VARCHAR), CREATE TABLE branch (name VARCHAR, branch_id VARCHAR), CREATE TABLE member (name VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有分支名称以及2015年后每个分支注册的成员数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (register_year INTEGER, branch_id VARCHAR), CREATE TABLE branch (name VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个分支ID，2015年以后登记的分支名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (register_year INTEGER, branch_id VARCHAR), CREATE TABLE branch (name VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有任何注册分支的成员名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)"
      }
    ],
    "system": "CREATE TABLE member (name VARCHAR, member_id VARCHAR), CREATE TABLE membership_register_branch (name VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些从未在任何分支注册过的会员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)"
      }
    ],
    "system": "CREATE TABLE member (name VARCHAR, member_id VARCHAR), CREATE TABLE membership_register_branch (name VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有任何注册会员的分支机构名称和城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)"
      }
    ],
    "system": "CREATE TABLE branch (city VARCHAR, name VARCHAR, branch_id VARCHAR), CREATE TABLE membership_register_branch (city VARCHAR, name VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有注册会员的分支机构的名字和城市有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)"
      }
    ],
    "system": "CREATE TABLE branch (city VARCHAR, name VARCHAR, branch_id VARCHAR), CREATE TABLE membership_register_branch (city VARCHAR, name VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2016年注册会员最多的分公司的名称和开业年限是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (register_year VARCHAR, branch_id VARCHAR), CREATE TABLE branch (open_year VARCHAR, name VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2016年注册会员人数最多的分支机构名字和其开业的年限是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (register_year VARCHAR, branch_id VARCHAR), CREATE TABLE branch (open_year VARCHAR, name VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2016年显示注册的分支机构的成员名字和故乡。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (register_year VARCHAR, member_id VARCHAR), CREATE TABLE member (name VARCHAR, hometown VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2016年在一个分支机构注册的会员名称和家乡名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (register_year VARCHAR, member_id VARCHAR), CREATE TABLE member (name VARCHAR, hometown VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有城市在2001年开设的分支机构，以及超过100个会员的分支机构。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER, open_year VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市在2001年开设了分支机构且有100多名会员？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER, open_year VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有没有超过100个会员的分支机构所在的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市没有超过100个成员的分支机构？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100"
      }
    ],
    "system": "CREATE TABLE branch (membership_amount INTEGER, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2018年“北京”所有分行的总购买金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  '北京' AND T1.year  =  2018"
      }
    ],
    "system": "CREATE TABLE purchase (year VARCHAR, branch_id VARCHAR), CREATE TABLE branch (city VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2018年度“北京”分行总共购买了英镑的金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  '北京' AND T1.year  =  2018"
      }
    ],
    "system": "CREATE TABLE purchase (year VARCHAR, branch_id VARCHAR), CREATE TABLE branch (city VARCHAR, branch_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "6级会员的购买总额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6"
      }
    ],
    "system": "CREATE TABLE purchase (member_id VARCHAR), CREATE TABLE member (level VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "6级成员的总购买量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6"
      }
    ],
    "system": "CREATE TABLE purchase (member_id VARCHAR), CREATE TABLE member (level VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有会员的家乡在“苏州，江苏”和“泉州，福建”的分支机构的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  '苏州，江苏' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  '泉州，福建'"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (branch_id VARCHAR, member_id VARCHAR), CREATE TABLE branch (name VARCHAR, branch_id VARCHAR), CREATE TABLE member (Hometown VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些有会员的家乡在“苏州，江苏”和“泉州，福建”的分支机构叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  '苏州，江苏' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  '泉州，福建'"
      }
    ],
    "system": "CREATE TABLE membership_register_branch (branch_id VARCHAR, member_id VARCHAR), CREATE TABLE branch (name VARCHAR, branch_id VARCHAR), CREATE TABLE member (Hometown VARCHAR, member_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出其家乡地址包含“肯塔基”一词的所有会员的卡号。"
      },
      {
        "from": "assistant",
        "value": "SELECT card_number FROM member WHERE Hometown LIKE \"西安\""
      }
    ],
    "system": "CREATE TABLE member (card_number VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自“肯塔基”的会员卡的号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT card_number FROM member WHERE Hometown LIKE \"西安\""
      }
    ],
    "system": "CREATE TABLE member (card_number VARCHAR, Hometown VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM STUDENT"
      }
    ],
    "system": "CREATE TABLE STUDENT (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM STUDENT"
      }
    ],
    "system": "CREATE TABLE STUDENT (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出投票记录的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM VOTING_RECORD"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少投票记录？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM VOTING_RECORD"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到不同数量的主席选票。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (President_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少主席选票被记录下来？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT President_Vote) FROM VOTING_RECORD"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (President_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有学生的最大年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Age) FROM STUDENT"
      }
    ],
    "system": "CREATE TABLE STUDENT (Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "学生中最大的年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Age) FROM STUDENT"
      }
    ],
    "system": "CREATE TABLE STUDENT (Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出主修课程50的学生姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT LName FROM STUDENT WHERE Major  =  50"
      }
    ],
    "system": "CREATE TABLE STUDENT (LName VARCHAR, Major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "主修课程50的学生的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LName FROM STUDENT WHERE Major  =  50"
      }
    ],
    "system": "CREATE TABLE STUDENT (LName VARCHAR, Major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到22岁以上学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM STUDENT WHERE Age  >  22"
      }
    ],
    "system": "CREATE TABLE STUDENT (Age INTEGER, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "22岁以上的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM STUDENT WHERE Age  >  22"
      }
    ],
    "system": "CREATE TABLE STUDENT (Age INTEGER, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "性别是“男”的学生的专业是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Major FROM STUDENT WHERE Sex  =  \"男\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每个性别是\"男性\"学生的专业。"
      },
      {
        "from": "assistant",
        "value": "SELECT Major FROM STUDENT WHERE Sex  =  \"男\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "女性的平均年龄（性别为“女性”）是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Sex VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到女学生的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Age) FROM STUDENT WHERE Sex  =  \"F\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Sex VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "主修课程600的学生的最大年龄和最小年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出年龄最大的和最年轻的学习专业600的学生。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是生活在城市编号为“武汉”的城市的学生的导师？"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"武汉\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示居住城市代码是“武汉”的城市的学生的导师。"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor FROM STUDENT WHERE city_code  =  \"武汉\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“秋季”选举周期中有哪些不同的秘书选票？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"秋季\""
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (ELECTION_CYCLE VARCHAR, Secretary_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“秋季”选举周期中所有不同的秘书选票。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Secretary_Vote FROM VOTING_RECORD WHERE ELECTION_CYCLE  =  \"秋季\""
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (ELECTION_CYCLE VARCHAR, Secretary_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“08/30/2015”不同的主席投票有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\""
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (PRESIDENT_Vote VARCHAR, Registration_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有在在“08/30/2015”的不同的主席选票。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\""
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (PRESIDENT_Vote VARCHAR, Registration_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列举不同的注册日期和选举周期。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR, Registration_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的注册日期和选举周期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Registration_Date ,  Election_Cycle FROM VOTING_RECORD"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR, Registration_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "报告不同的主席投票和副主席的投票。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (President_Vote VARCHAR, VICE_President_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有不同的主席选票和副主席的选票。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT President_Vote ,  VICE_President_Vote FROM VOTING_RECORD"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (President_Vote VARCHAR, VICE_President_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有学生会主席选票的学生的不同姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE"
      }
    ],
    "system": "CREATE TABLE STUDENT (LName VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (CLASS_President_VOTE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有学生会主席选票的学生的不同姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_President_VOTE"
      }
    ],
    "system": "CREATE TABLE STUDENT (LName VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (CLASS_President_VOTE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些有班干部选票的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE"
      }
    ],
    "system": "CREATE TABLE STUDENT (StuID VARCHAR, Fname VARCHAR), CREATE TABLE VOTING_RECORD (CLASS_Senator_VOTE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有学生会主席投票的学生的不同的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE"
      }
    ],
    "system": "CREATE TABLE STUDENT (StuID VARCHAR, Fname VARCHAR), CREATE TABLE VOTING_RECORD (CLASS_Senator_VOTE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“秋季”选举周期中有秘书投票的学生的不同年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"秋季\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Age VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR, Secretary_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“秋季”的选举周期中，有秘书投票的学生的不同年龄是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Secretary_Vote WHERE T2.Election_Cycle  =  \"秋季\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Age VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR, Secretary_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些在“春季”选举周期中拥有财务员选票的学生中的不同的导师。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"春天\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Treasurer_Vote VARCHAR, Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁担任过在“春季”选举周期中有财务员的选票的学生的导师？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Advisor FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote WHERE T2.Election_Cycle  =  \"春天\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Treasurer_Vote VARCHAR, Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些有财务员选票的学生的主修课程。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Treasurer_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有财务员的选票的学生正在学习那些不同的主修课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Major FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.Treasurer_Vote"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Treasurer_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有有主席选票的女性（性别是“女性”）学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\""
      }
    ],
    "system": "CREATE TABLE STUDENT (sex VARCHAR, LName VARCHAR, StuID VARCHAR, Fname VARCHAR), CREATE TABLE VOTING_RECORD (President_VOTE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有有主席选票的“女性”性别学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\""
      }
    ],
    "system": "CREATE TABLE STUDENT (sex VARCHAR, LName VARCHAR, StuID VARCHAR, Fname VARCHAR), CREATE TABLE VOTING_RECORD (President_VOTE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有有副主席投票的18岁学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"
      }
    ],
    "system": "CREATE TABLE STUDENT (LName VARCHAR, age VARCHAR, StuID VARCHAR, Fname VARCHAR), CREATE TABLE VOTING_RECORD (VICE_President_VOTE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "年龄是18岁且有副校长选票的学生的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18"
      }
    ],
    "system": "CREATE TABLE STUDENT (LName VARCHAR, age VARCHAR, StuID VARCHAR, Fname VARCHAR), CREATE TABLE VOTING_RECORD (VICE_President_VOTE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“秋季”的选举周期中，有多少男（\"男性\"）学生有班级干部成员的选票？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"男\" AND T2.Election_Cycle  =  \"秋季\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Sex VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算“秋季”选举周期中拥有班级干部成员选票的性别是“男性”的学生的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.Sex  =  \"男\" AND T2.Election_Cycle  =  \"秋季\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Sex VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出城市编号为“上海”且在“春季”选举周期中有班级干部选票的学生的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"上海\" AND T2.Election_Cycle  =  \"春天\""
      }
    ],
    "system": "CREATE TABLE STUDENT (city_code VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些学生居住在代号为“上海”的城市，并在“春季”选举周期有班级干部的选票？统计其数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"上海\" AND T2.Election_Cycle  =  \"春天\""
      }
    ],
    "system": "CREATE TABLE STUDENT (city_code VARCHAR, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出居住在城市代号“上海”的城市并在“春季”选举周期有秘书投票的学生的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"上海\" AND T2.Election_Cycle  =  \"春天\""
      }
    ],
    "system": "CREATE TABLE STUDENT (city_code VARCHAR, Age INTEGER, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "居住在城市代号“上海”的城市并在“春季”选举周期有秘书投票的学生的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"上海\" AND T2.Election_Cycle  =  \"春天\""
      }
    ],
    "system": "CREATE TABLE STUDENT (city_code VARCHAR, Age INTEGER, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“春季”选举周期有秘书投票的女性（性别是“女性”）学生的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"春天\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Sex VARCHAR, Age INTEGER, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“春季”选举周期中，有秘书投票的性别是“女性”学生的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"春天\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Sex VARCHAR, Age INTEGER, StuID VARCHAR), CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有拥有副主席选票且所在城市代码不是“沪”的学生的不同名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"沪\""
      }
    ],
    "system": "CREATE TABLE STUDENT (city_code VARCHAR, Fname VARCHAR), CREATE TABLE VOTING_RECORD (VICE_PRESIDENT_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些有副主席选票并居住在城市代码不是“沪”的城市的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_PRESIDENT_Vote EXCEPT SELECT DISTINCT Fname FROM STUDENT WHERE city_code  =  \"沪\""
      }
    ],
    "system": "CREATE TABLE STUDENT (city_code VARCHAR, Fname VARCHAR), CREATE TABLE VOTING_RECORD (VICE_PRESIDENT_Vote VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有有主席选票且导师不是“2192”的学生的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR, PRESIDENT_Vote VARCHAR, LName VARCHAR), CREATE TABLE VOTING_RECORD (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有主席选票但不是“2192”担任导师的学生有哪些不同的姓氏？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote EXCEPT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"2192\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR, PRESIDENT_Vote VARCHAR, LName VARCHAR), CREATE TABLE VOTING_RECORD (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有有主席选票且导师是“8741”的学生的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR, PRESIDENT_Vote VARCHAR, LName VARCHAR), CREATE TABLE VOTING_RECORD (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "同时拥有主席选票且其导师为“8741”的学生的不同姓氏有那些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\""
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR, PRESIDENT_Vote VARCHAR, LName VARCHAR), CREATE TABLE VOTING_RECORD (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每位导师，报告接受其辅导的学生总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor"
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每位导师有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor"
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "报告所有指导超过2名学生的导师。"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些导师有指导两个以上的学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "报告所有少于3名学生的专业。"
      },
      {
        "from": "assistant",
        "value": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么专业只有不到三名学生在学习？"
      },
      {
        "from": "assistant",
        "value": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个选举周期，报告投票记录的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计每个选举周期的投票记录数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Election_Cycle ,  count(*) FROM VOTING_RECORD GROUP BY Election_Cycle"
      }
    ],
    "system": "CREATE TABLE VOTING_RECORD (Election_Cycle VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个专业的学生最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出学生人数最多的专业。"
      },
      {
        "from": "assistant",
        "value": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“女性”学生中最常见的专业是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, major VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到大多数“女生”学习的专业。"
      },
      {
        "from": "assistant",
        "value": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE STUDENT (Major VARCHAR, major VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "大多数学生居住的城市的城市代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE STUDENT (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回拥有最多学生数量的城市代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE STUDENT (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "报告有超过2名学生的不同的导师。"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些导师指导超过2名学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT Advisor FROM STUDENT GROUP BY Advisor HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE STUDENT (Advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products"
      }
    ],
    "system": "CREATE TABLE products (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计产品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products"
      }
    ],
    "system": "CREATE TABLE products (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种颜色？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ref_colors"
      }
    ],
    "system": "CREATE TABLE ref_colors (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算颜色的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ref_colors"
      }
    ],
    "system": "CREATE TABLE ref_colors (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少特征？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM CHARACTERISTICS"
      }
    ],
    "system": "CREATE TABLE CHARACTERISTICS (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计数特征数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM CHARACTERISTICS"
      }
    ],
    "system": "CREATE TABLE CHARACTERISTICS (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有产品的名称和购买价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name ,  typical_buying_price FROM products"
      }
    ],
    "system": "CREATE TABLE products (typical_buying_price VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有产品的名称和各自的购买价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name ,  typical_buying_price FROM products"
      }
    ],
    "system": "CREATE TABLE products (typical_buying_price VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有颜色的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT color_description FROM ref_colors"
      }
    ],
    "system": "CREATE TABLE ref_colors (color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种颜色的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT color_description FROM ref_colors"
      }
    ],
    "system": "CREATE TABLE ref_colors (color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有产品特性的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"
      }
    ],
    "system": "CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "产品特性的不同名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS"
      }
    ],
    "system": "CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“香料”类中产品的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name FROM products WHERE product_category_code  =  \"香料\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“香料”类中的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name FROM products WHERE product_category_code  =  \"香料\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“香草”类产品的名称、颜色描述和产品描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"香草\""
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_description VARCHAR, product_name VARCHAR), CREATE TABLE Ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“香草”类产品的名称、颜色描述和产品描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"香草\""
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_description VARCHAR, product_name VARCHAR), CREATE TABLE Ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“种子”类别中有多少种产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products WHERE product_category_code  =  \"种子\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算“种子”类别中的产品数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products WHERE product_category_code  =  \"种子\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出产品类别为“香料”并且通常销售超过1000的产品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products WHERE product_category_code  =  \"香料\" AND typical_buying_price  >  1000"
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, typical_buying_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少产品属于“香料”类别且通常价格超过1000？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products WHERE product_category_code  =  \"香料\" AND typical_buying_price  >  1000"
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, typical_buying_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“茴香”的产品的类别和通常的购买价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"茴香\""
      }
    ],
    "system": "CREATE TABLE products (typical_buying_price VARCHAR, product_category_code VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“茴香”的分类代码和通常的价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"茴香\""
      }
    ],
    "system": "CREATE TABLE products (typical_buying_price VARCHAR, product_category_code VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“亚麻”的产品属于哪一类？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_category_code FROM products WHERE product_name  =  \"亚麻\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名称为“亚麻”的产品所属类别的代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_category_code FROM products WHERE product_name  =  \"亚麻\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "颜色描述为“黄色”的产品名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  '黄色'"
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出具有颜色描述为“黄色”的产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  '黄色'"
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找描述中包括“强”的产品对应的类别描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '强'"
      }
    ],
    "system": "CREATE TABLE ref_product_categories (product_category_code VARCHAR, product_category_description VARCHAR), CREATE TABLE products (product_category_code VARCHAR, product_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "产品描述重包含汉字强”的产品其类别描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '强'"
      }
    ],
    "system": "CREATE TABLE ref_product_categories (product_category_code VARCHAR, product_category_description VARCHAR), CREATE TABLE products (product_category_code VARCHAR, product_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名称是“君子兰”产品的颜色描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"君子兰\""
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出产品“君子兰”的颜色描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"君子兰\""
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字叫“鼠标”产品的颜色代码和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"鼠标\""
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回名称为“鼠标”的产品的颜色代码和描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"鼠标\""
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有至少两个特征的产品的id和颜色描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, color_code VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于具有两个或多个特征的产品其产品标识和颜色描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_id ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code JOIN product_characteristics AS t3 ON t1.product_id  =  t3.product_id GROUP BY t1.product_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, color_code VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有有颜色描述为“白色”的产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"白色\""
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以“白色”作为其颜色描述的产品名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"白色\""
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "颜色被描述为“黄色”的产品的名称和通常的买卖价格是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"黄色\""
      }
    ],
    "system": "CREATE TABLE products (typical_buying_price VARCHAR, product_name VARCHAR, color_code VARCHAR, typical_selling_price VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有“黄色”作为颜色描述的产品的名称及其通常买卖的价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"黄色\""
      }
    ],
    "system": "CREATE TABLE products (typical_buying_price VARCHAR, product_name VARCHAR, color_code VARCHAR, typical_selling_price VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“芝麻”的产品有多少个特点？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"芝麻\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算“芝麻”产品的特征数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"芝麻\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "产品“芝麻”有多少个不同的特性名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"芝麻\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算产品“芝麻”的不同特征名称的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"芝麻\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“芝麻”产品的所有特征名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"芝麻\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回产品名为“芝麻”的特征名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"芝麻\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出产品“茴香”的所有特征名称和数据类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"茴香\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_data_type VARCHAR, characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“茴香”产品的名称和数据类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"茴香\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_data_type VARCHAR, characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出具有“等级”的代码的“芝麻”产品的所有特征，。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"芝麻\" AND t3.characteristic_type_code  =  \"等级\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_type_code VARCHAR, characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有特征类型代码为“等级”的产品“芝麻”的特征的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"芝麻\" AND t3.characteristic_type_code  =  \"等级\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_type_code VARCHAR, characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“月桂树”的产品有几个特点？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"月桂树\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算名为“月桂树”的产品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"月桂树\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出产品“亚麻”所具有的特性。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"亚麻\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算“亚麻”产品的特征数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"亚麻\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找具有颜色描述“红色”并且具有特征名称是“快速”的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"红色\" AND t3.characteristic_name  =  \"快速\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, color_code VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些产品具有“红色”的颜色描述和“快速”的特征？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"红色\" AND t3.characteristic_name  =  \"快速\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, color_code VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少产品具有特证名是“热”的特性？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"热\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算具有“热”特性的产品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"热\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出具有“温暖”特征的所有产品的不同名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"温暖\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于具有“温暖”特性的产品，有哪些不同的产品名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"温暖\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些颜色描述为“红色”并具有“缓慢”特征的产品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"红色\" AND t3.characteristic_name  =  \"缓慢\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, color_code VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少数量的产品具有颜色描述为“红色”和特征名称是“缓慢”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"红色\" AND t3.characteristic_name  =  \"缓慢\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, color_code VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数有颜色描述是“白色”或有特色名称是“热”的产品。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"白色\" OR t3.characteristic_name  =  \"热\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, color_code VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少产品被描述为“白色”或有“热”这个名称的特征？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"白色\" OR t3.characteristic_name  =  \"热\""
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, color_code VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "产品类别代码“香草”的计量单位是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"香草\""
      }
    ],
    "system": "CREATE TABLE ref_product_categories (product_category_code VARCHAR, unit_of_measure VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“香草”类别产品的计量单位。"
      },
      {
        "from": "assistant",
        "value": "SELECT unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"香草\""
      }
    ],
    "system": "CREATE TABLE ref_product_categories (product_category_code VARCHAR, unit_of_measure VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用代码为“香料”查找产品类别的产品类别描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"香料\""
      }
    ],
    "system": "CREATE TABLE ref_product_categories (product_category_code VARCHAR, product_category_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用代码“香料”的产品类别描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_category_description FROM ref_product_categories WHERE product_category_code  =  \"香料\""
      }
    ],
    "system": "CREATE TABLE ref_product_categories (product_category_code VARCHAR, product_category_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是“香草”类的产品类别描述和测量单位？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"香草\""
      }
    ],
    "system": "CREATE TABLE ref_product_categories (product_category_code VARCHAR, product_category_description VARCHAR, unit_of_measure VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“香草”类产品的描述和测量单位。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"香草\""
      }
    ],
    "system": "CREATE TABLE ref_product_categories (product_category_code VARCHAR, product_category_description VARCHAR, unit_of_measure VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“茴香”产品的计量单位是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"茴香\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_product_categories (product_category_code VARCHAR, unit_of_measure VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出“茴香”产品的计量单位。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"茴香\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_product_categories (product_category_code VARCHAR, unit_of_measure VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“鼠标”产品的计量单位和产品类别代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"鼠标\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_product_categories (product_category_code VARCHAR, unit_of_measure VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“鼠标”产品的度量单位和分类代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"鼠标\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR), CREATE TABLE ref_product_categories (product_category_code VARCHAR, unit_of_measure VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出颜色为“白色”但没有测量单位“一把”的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"白色\" AND t2.unit_of_measure != \"一把\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR, color_code VARCHAR), CREATE TABLE ref_product_categories (product_category_code VARCHAR, unit_of_measure VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些产品颜色不是“白色”，并且不以“一把”为单位进行测量？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"白色\" AND t2.unit_of_measure != \"一把\""
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR, color_code VARCHAR), CREATE TABLE ref_product_categories (product_category_code VARCHAR, unit_of_measure VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多数产品的颜色描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有产品中最常见的颜色描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对最少产品使用的颜色描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出产品间最不常见的颜色描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (color_code VARCHAR), CREATE TABLE ref_colors (color_code VARCHAR, color_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "大多数产品使用的特征名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有产品中最常见的特性名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些从未被任何产品使用的特征的名称、细节和数据类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id"
      }
    ],
    "system": "CREATE TABLE CHARACTERISTICS (other_characteristic_details VARCHAR, characteristic_data_type VARCHAR, characteristic_name VARCHAR, characteristic_id VARCHAR), CREATE TABLE product_characteristics (characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出任何产品中都没有的特征的名称、细节和数据类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT characteristic_name ,  other_characteristic_details ,  characteristic_data_type FROM CHARACTERISTICS EXCEPT SELECT t1.characteristic_name ,  t1.other_characteristic_details ,  t1.characteristic_data_type FROM CHARACTERISTICS AS t1 JOIN product_characteristics AS t2 ON t1.characteristic_id  =  t2.characteristic_id"
      }
    ],
    "system": "CREATE TABLE CHARACTERISTICS (other_characteristic_details VARCHAR, characteristic_data_type VARCHAR, characteristic_name VARCHAR, characteristic_id VARCHAR), CREATE TABLE product_characteristics (characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有产品中，至少有两次使用的特征名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出两个或多个产品的特性名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name HAVING count(*)  >= 2"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR), CREATE TABLE product_characteristics (product_id VARCHAR, characteristic_id VARCHAR), CREATE TABLE CHARACTERISTICS (characteristic_name VARCHAR, characteristic_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么颜色从来没有被任何产品使用？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )"
      }
    ],
    "system": "CREATE TABLE Ref_colors (color_code VARCHAR), CREATE TABLE products (color_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算任何产品中没有使用的颜色的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )"
      }
    ],
    "system": "CREATE TABLE Ref_colors (color_code VARCHAR), CREATE TABLE products (color_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少活动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM event"
      }
    ],
    "system": "CREATE TABLE event (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "将所有事件名称按从最新到最老的年份列出。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM event ORDER BY YEAR DESC"
      }
    ],
    "system": "CREATE TABLE event (name VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近的一年发生的事件的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE event (name VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个体育场？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM stadium"
      }
    ],
    "system": "CREATE TABLE stadium (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出具有最大容量的体育场名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stadium (capacity VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出容量小于平均容量的体育场馆的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)"
      }
    ],
    "system": "CREATE TABLE stadium (name VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到拥有最多球场的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM stadium GROUP BY country ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stadium (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个国家有最多3个体育场馆在名单上？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3"
      }
    ],
    "system": "CREATE TABLE stadium (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个国家既有容量大于60000个的体育场馆，又有容量小于50000个的体育场？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM stadium WHERE capacity  >  60000 INTERSECT SELECT country FROM stadium WHERE capacity  <  50000"
      }
    ],
    "system": "CREATE TABLE stadium (country VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个城市有在2006年前开放的体育场？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006"
      }
    ],
    "system": "CREATE TABLE stadium (city VARCHAR, opening_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个国家有多少个体育场馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT country ,  count(*) FROM stadium GROUP BY country"
      }
    ],
    "system": "CREATE TABLE stadium (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家没有在2006后开放的体育场？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006"
      }
    ],
    "system": "CREATE TABLE stadium (country VARCHAR, opening_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“俄罗斯”这个国家有多少个体育场？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM stadium WHERE country != '俄罗斯'"
      }
    ],
    "system": "CREATE TABLE stadium (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有游泳运动员的名字，按他们的100米成绩按升序排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM swimmer ORDER BY meter_100"
      }
    ],
    "system": "CREATE TABLE swimmer (name VARCHAR, meter_100 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "游泳运动员来自多少个不同的国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT nationality) FROM swimmer"
      }
    ],
    "system": "CREATE TABLE swimmer (nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出有一个以上游泳运动员的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE swimmer (nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有200米和300米游泳成绩且国籍是“澳大利亚”的游泳运动员。"
      },
      {
        "from": "assistant",
        "value": "SELECT meter_200 ,  meter_300 FROM swimmer WHERE nationality  =  '澳大利亚'"
      }
    ],
    "system": "CREATE TABLE swimmer (nationality VARCHAR, meter_300 VARCHAR, meter_200 VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有结果是“胜利”的游泳运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  '胜利'"
      }
    ],
    "system": "CREATE TABLE swimmer (id VARCHAR, name VARCHAR), CREATE TABLE record (swimmer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "举办最多赛事的体育场叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE stadium (id VARCHAR, name VARCHAR), CREATE TABLE event (stadium_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“世界杯”活动发生的体育场的名称及其容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.capacity FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id WHERE t2.name  =  '世界杯'"
      }
    ],
    "system": "CREATE TABLE stadium (capacity VARCHAR, name VARCHAR, id VARCHAR), CREATE TABLE event (name VARCHAR, stadium_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到那些从来没有举办过活动的体育场馆的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM stadium WHERE id NOT IN (SELECT stadium_id FROM event)"
      }
    ],
    "system": "CREATE TABLE stadium (id VARCHAR, name VARCHAR, stadium_id VARCHAR), CREATE TABLE event (id VARCHAR, name VARCHAR, stadium_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有最多数量记录的游泳者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE swimmer (id VARCHAR, name VARCHAR), CREATE TABLE record (swimmer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到至少有2条记录的游泳运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE swimmer (id VARCHAR, name VARCHAR), CREATE TABLE record (swimmer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“胜利”1次以上比赛的游泳运动员的姓名和国籍。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  '胜利' GROUP BY t2.swimmer_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE swimmer (id VARCHAR, name VARCHAR, nationality VARCHAR), CREATE TABLE record (swimmer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有记录的游泳运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record)"
      }
    ],
    "system": "CREATE TABLE swimmer (id VARCHAR, name VARCHAR, swimmer_id VARCHAR), CREATE TABLE record (id VARCHAR, name VARCHAR, swimmer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在记录中同时有“胜利”和“失败”结果的游泳运动员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  '胜利' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  '输'"
      }
    ],
    "system": "CREATE TABLE swimmer (id VARCHAR, name VARCHAR), CREATE TABLE record (swimmer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“澳大利亚”游泳运动员去过的体育场馆的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  '澳大利亚'"
      }
    ],
    "system": "CREATE TABLE swimmer (id VARCHAR, nationality VARCHAR), CREATE TABLE record (event_id VARCHAR, swimmer_id VARCHAR), CREATE TABLE event (id VARCHAR, stadium_id VARCHAR), CREATE TABLE stadium (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些游泳运动员去过的体育场馆的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE record (event_id VARCHAR), CREATE TABLE event (id VARCHAR, stadium_id VARCHAR), CREATE TABLE stadium (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个游泳运动员的所有细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT * FROM swimmer"
      }
    ],
    "system": "CREATE TABLE swimmer (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2005年度开放的体育场的平均容量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(capacity) FROM stadium WHERE opening_year  =  2005"
      }
    ],
    "system": "CREATE TABLE stadium (opening_year VARCHAR, capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少条铁路？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM railway"
      }
    ],
    "system": "CREATE TABLE railway (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序升序排列列出铁路的建设者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Builder FROM railway ORDER BY Builder ASC"
      }
    ],
    "system": "CREATE TABLE railway (Builder VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出铁路的轮子和位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT Wheels ,  LOCATION FROM railway"
      }
    ],
    "system": "CREATE TABLE railway (Wheels VARCHAR, LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些国籍不是“澳大利亚”经理的最高水平是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(LEVEL) FROM manager WHERE Country != \"澳大利亚\""
      }
    ],
    "system": "CREATE TABLE manager (Country VARCHAR, LEVEL INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有经理的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Age) FROM manager"
      }
    ],
    "system": "CREATE TABLE manager (Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按等级升序排列经理的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM manager ORDER BY LEVEL ASC"
      }
    ],
    "system": "CREATE TABLE manager (LEVEL VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列车的名称和到达时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Arrival FROM train"
      }
    ],
    "system": "CREATE TABLE train (Arrival VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最老的经理叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE manager (Age VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示火车的名称和他们所在铁路的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID"
      }
    ],
    "system": "CREATE TABLE railway (Location VARCHAR, Railway_ID VARCHAR), CREATE TABLE train (Name VARCHAR, Railway_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与“和谐号”列车相关的铁路建设商。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  \"和谐号\""
      }
    ],
    "system": "CREATE TABLE railway (Builder VARCHAR, Railway_ID VARCHAR), CREATE TABLE train (Name VARCHAR, Railway_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与超过一辆列车关联的铁路的ID和位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE railway (Location VARCHAR, Railway_ID VARCHAR), CREATE TABLE train (Railway_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示与做多数量列车相关的铁路的ID和建设者。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE railway (Builder VARCHAR, Railway_ID VARCHAR), CREATE TABLE train (Railway_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的铁路建设者，以及使用每个建设者建设的相应数量的铁路。"
      },
      {
        "from": "assistant",
        "value": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder"
      }
    ],
    "system": "CREATE TABLE railway (Builder VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示铁路最常见的建设者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE railway (Builder VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同位置的铁路以及每个位置的相应铁路的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION ,  COUNT(*) FROM railway GROUP BY LOCATION"
      }
    ],
    "system": "CREATE TABLE railway (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有超过一条铁路的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE railway (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有火车的铁路的目标数。"
      },
      {
        "from": "assistant",
        "value": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)"
      }
    ],
    "system": "CREATE TABLE railway (ObjectNumber VARCHAR, Railway_ID VARCHAR), CREATE TABLE train (ObjectNumber VARCHAR, Railway_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示那些既有50岁以上经理又有46岁以下经理的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46"
      }
    ],
    "system": "CREATE TABLE manager (Country VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示管理者的不同国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Country FROM manager"
      }
    ],
    "system": "CREATE TABLE manager (Country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按级别顺序递减显示经理的工作年限。"
      },
      {
        "from": "assistant",
        "value": "SELECT Working_year_starts FROM manager ORDER BY LEVEL DESC"
      }
    ],
    "system": "CREATE TABLE manager (LEVEL VARCHAR, Working_year_starts VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示年龄在50岁以上或46岁以下的管理人员所在的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46"
      }
    ],
    "system": "CREATE TABLE manager (Country VARCHAR, Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“中国”这个国家有多少个地址？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM addresses WHERE country  =  '中国'"
      }
    ],
    "system": "CREATE TABLE addresses (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在地址记录中的所有不同的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT city FROM addresses"
      }
    ],
    "system": "CREATE TABLE addresses (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个省和每个省中的地址数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT state_province_county ,  count(*) FROM addresses GROUP BY state_province_county"
      }
    ],
    "system": "CREATE TABLE addresses (state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有地址信息的客户的姓名和电话。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_address_history (customer_phone VARCHAR, customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示订单量最多的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有至少两个产品的产品类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE products (product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示既具有“完成”状态的订单又具有“部分”状态的订单的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  '完成' INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  '部分'"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_status_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照客户编号的降序显示所有客户的名称、电话和支付方法代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name ,  customer_phone ,  payment_method_code FROM customers ORDER BY customer_number DESC"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, customer_name VARCHAR, payment_method_code VARCHAR, customer_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个产品的产品名称和总订单数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有产品的最小，最大，平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(product_price) ,  max(product_price) ,  avg(product_price) FROM products"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少产品的价格高于平均水平？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个客户地址历史的客户名称、客户地址城市、起始日期和送达日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id"
      }
    ],
    "system": "CREATE TABLE customer_address_history (date_from VARCHAR, customer_id VARCHAR, date_to VARCHAR, address_id VARCHAR), CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示使用“信用卡”付款方式并有2个以上订单的客户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  '信用卡' GROUP BY T1.customer_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, payment_method_code VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "订购数量最多的顾客的姓名和电话是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_phone VARCHAR, customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示价格高于1000或低于500的产品类型和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_type_code ,  product_name FROM products WHERE product_price  >  1000 OR product_price  <  500"
      }
    ],
    "system": "CREATE TABLE products (product_price INTEGER, product_name VARCHAR, product_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出仅为女性使用的宿舍名称（“女性”性别）。"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm WHERE gender  =  'F'"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "仅为“女性”使用的宿舍的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm WHERE gender  =  'F'"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出能容纳超过300名学生的宿舍名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"
      }
    ],
    "system": "CREATE TABLE dorm (dorm_name VARCHAR, student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可以容纳超过300名学生住宿的宿舍名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300"
      }
    ],
    "system": "CREATE TABLE dorm (dorm_name VARCHAR, student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "年龄在25岁以下的女生有多少？（性别是“女性”）"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25"
      }
    ],
    "system": "CREATE TABLE student (sex VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "25岁以下的“女”学生有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25"
      }
    ],
    "system": "CREATE TABLE student (sex VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出20岁以上的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname FROM student WHERE age  >  20"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "20岁以上的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname FROM student WHERE age  >  20"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出年龄在20到25岁之间且住在城市“天津”的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname FROM student WHERE city_code  =  '天津' AND age BETWEEN 20 AND 25"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, age INTEGER, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在\"天津\"市的20至25岁学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname FROM student WHERE city_code  =  '天津' AND age BETWEEN 20 AND 25"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, age INTEGER, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少宿舍？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM dorm"
      }
    ],
    "system": "CREATE TABLE dorm (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数据库中有多少个宿舍？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM dorm"
      }
    ],
    "system": "CREATE TABLE dorm (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不同的宿舍设施的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM dorm_amenity"
      }
    ],
    "system": "CREATE TABLE dorm_amenity (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的宿舍设施？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM dorm_amenity"
      }
    ],
    "system": "CREATE TABLE dorm_amenity (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到所有宿舍的总容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(student_capacity) FROM dorm"
      }
    ],
    "system": "CREATE TABLE dorm (student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有宿舍的学生总人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(student_capacity) FROM dorm"
      }
    ],
    "system": "CREATE TABLE dorm (student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那儿有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student"
      }
    ],
    "system": "CREATE TABLE student (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student"
      }
    ],
    "system": "CREATE TABLE student (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个城市学生的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个城市的平均年龄是什么？那些城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  city_code FROM student GROUP BY city_code"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出具有性别是“X”的学生宿舍的平均容量和总容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR, student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有性别为“X”的宿舍的平均和总容量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(student_capacity) ,  sum(student_capacity) FROM dorm WHERE gender  =  'X'"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR, student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到一些有宿舍设施的宿舍。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dormid) FROM has_amenity"
      }
    ],
    "system": "CREATE TABLE has_amenity (dormid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少宿舍有设施？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dormid) FROM has_amenity"
      }
    ],
    "system": "CREATE TABLE has_amenity (dormid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有设施的宿舍的名字"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有没有设施的宿舍的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出宿舍的不同性别的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT gender) FROM dorm"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "宿舍里有多少不同性别的人？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT gender) FROM dorm"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出名字中包含“慧”字的宿舍中学生的能力和性别."
      },
      {
        "from": "assistant",
        "value": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '慧'"
      }
    ],
    "system": "CREATE TABLE dorm (student_capacity VARCHAR, gender VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中包含“慧”字段的宿舍中学生的能力和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '慧'"
      }
    ],
    "system": "CREATE TABLE dorm (student_capacity VARCHAR, gender VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出容量大于300或小于100的宿舍的名称和性别类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR, dorm_name VARCHAR, student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "容量大于300或小于100的宿舍的名称和类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR, dorm_name VARCHAR, student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到不同专业和城市的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student"
      }
    ],
    "system": "CREATE TABLE student (major VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的专业，每个学生有多少不同的城市编号？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT major) ,  count(DISTINCT city_code) FROM student"
      }
    ],
    "system": "CREATE TABLE student (major VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到既有“客厅”又有“自习室”作为设施的宿舍的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '客厅' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '自习室'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既有“客厅”又有“自习室”的宿舍叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '客厅' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '自习室'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有“客厅”但没有“自习室”作为设施的宿舍的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '客厅' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '自习室'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有“客厅”但没有“自习室”的每间宿舍叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '客厅' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '自习室'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些生活在代号为“武汉”的女性（性别是“女性”）或者年龄在20岁以下的男性（性别是“男”）学生的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  '武汉' UNION SELECT lname FROM student WHERE sex  =  '男' AND age  <  20"
      }
    ],
    "system": "CREATE TABLE student (sex VARCHAR, lname VARCHAR, age INTEGER, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些生活在代号为“武汉”的女性（性别是“女性”）或者年龄在20岁以下的男性（性别是“男”）学生的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  '武汉' UNION SELECT lname FROM student WHERE sex  =  '男' AND age  <  20"
      }
    ],
    "system": "CREATE TABLE student (sex VARCHAR, lname VARCHAR, age INTEGER, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到容量最大的宿舍的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE dorm (student_capacity VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "容量最大的宿舍是什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm ORDER BY student_capacity DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE dorm (student_capacity VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有不同的宿舍设施。"
      },
      {
        "from": "assistant",
        "value": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name"
      }
    ],
    "system": "CREATE TABLE dorm_amenity (amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的宿舍设施名称按字母顺序排列是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT amenity_name FROM dorm_amenity ORDER BY amenity_name"
      }
    ],
    "system": "CREATE TABLE dorm_amenity (amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出大多数学生居住的城市代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多数量的学生居住的城市代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_code FROM student GROUP BY city_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出年龄小于平均年龄的学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, lname VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有年龄小于平均水平的学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, lname VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据编码“香港”列出不在该城市居住的学生的名字和姓氏，并按年龄对结果进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM student WHERE city_code != '香港' ORDER BY age"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, lname VARCHAR, age VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄排序的所有未在“香港”生活的学生的姓氏和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM student WHERE city_code != '香港' ORDER BY age"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, lname VARCHAR, age VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序对结果进行排序列出“礼堂”的所有设施的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  '礼堂' ORDER BY T1.amenity_name"
      }
    ],
    "system": "CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出的“礼堂”的所有设施有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  '礼堂' ORDER BY T1.amenity_name"
      }
    ],
    "system": "CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出宿舍的数量和每个性别的总容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR, student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个宿舍且每个性别的总容量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender"
      }
    ],
    "system": "CREATE TABLE dorm (gender VARCHAR, student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不同性别学生的平均年龄和最高年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE student (sex VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个性别的平均年龄和最高龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE student (sex VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个专业学生的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  major FROM student GROUP BY major"
      }
    ],
    "system": "CREATE TABLE student (major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个专业有多少学生？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  major FROM student GROUP BY major"
      }
    ],
    "system": "CREATE TABLE student (major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到居住在每个城市的学生的数量和平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个城市有多少学生且对应的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  avg(age) ,  city_code FROM student GROUP BY city_code"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个城市男生（性别是“男”）的平均年龄和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  '男' GROUP BY city_code"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, sex VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个城市的平均年龄和男学生有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  '男' GROUP BY city_code"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, sex VARCHAR, city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到拥有一个以上学生的城市其对应的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个城市有多少学生，哪个城市有不止一个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE student (city_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不属于最大专业的学生的姓氏和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, lname VARCHAR, major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是最大的专业的学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM student WHERE major != (SELECT major FROM student GROUP BY major ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, lname VARCHAR, major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个性别中年龄大于平均年龄的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE student (sex VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个性别中大于平均年龄的学生人数有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE student (sex VARCHAR, age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个宿舍学生的平均年龄和宿舍名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个宿舍的平均年龄是多少，每个宿舍的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个可以容纳100多名学生的宿舍的设施数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, student_capacity INTEGER), CREATE TABLE has_amenity (dormid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个宿舍都有多少设施？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, student_capacity INTEGER), CREATE TABLE has_amenity (dormid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到每个宿舍里年龄大于20岁的学生。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name"
      }
    ],
    "system": "CREATE TABLE student (stuid VARCHAR, age INTEGER), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个宿舍有多少学生年龄大于20岁？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T1.age  >  20 GROUP BY T3.dorm_name"
      }
    ],
    "system": "CREATE TABLE student (stuid VARCHAR, age INTEGER), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到住在“大礼堂”的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  '大礼堂'"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大礼堂”所有学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  '大礼堂'"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出住容量最大的宿舍的学生的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在容量最大的宿舍的学生的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)"
      }
    ],
    "system": "CREATE TABLE student (age INTEGER, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (student_capacity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出住在男生宿舍的学生总数（性别是“男”）。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  '男'"
      }
    ],
    "system": "CREATE TABLE student (stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“男”宿舍里的学生总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  '男'"
      }
    ],
    "system": "CREATE TABLE student (stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出居住在“大礼堂”的女学生（性别是“F”）"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  '大礼堂' AND T1.sex  =  'F'"
      }
    ],
    "system": "CREATE TABLE student (stuid VARCHAR, sex VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大礼堂”有多少“女”学生居住？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  '大礼堂' AND T1.sex  =  'F'"
      }
    ],
    "system": "CREATE TABLE student (stuid VARCHAR, sex VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“大礼堂”宿舍设施的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  '大礼堂'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大礼堂”的设施名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  '大礼堂'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“大礼堂”宿舍的名称。根据设施名称对结果进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  '大礼堂' ORDER BY T3.amenity_name"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大礼堂”按字母顺序有哪些设施？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  '大礼堂' ORDER BY T3.amenity_name"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有宿舍中最常见的设施的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "宿舍里最常见的设施是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到住在设施最多的宿舍的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在设施最多的宿舍的所有学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE dorm (dormid VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出设施最少的宿舍的名称和容量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, student_capacity VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最少设施的宿舍的名称和容量是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, student_capacity VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到没有“客厅”设施的宿舍的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '客厅'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“客厅”设施的宿舍的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  '客厅'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR, dorm_name VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出住在有“客厅”设施的宿舍的学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  '客厅')"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在拥有“客厅”设施的宿舍里的所有学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.lname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  '客厅')"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, lname VARCHAR, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到住在没有“客厅”设施的宿舍的学生的名字和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  '客厅')"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, age VARCHAR, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个住在“客厅”设施的宿舍的学生的名字和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  '客厅')"
      }
    ],
    "system": "CREATE TABLE student (fname VARCHAR, age VARCHAR, stuid VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找到姓“帅”的学生住的宿舍的设施的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  '帅'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏为“帅”的学生住在宿舍里有什么设施？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  '帅'"
      }
    ],
    "system": "CREATE TABLE dorm (dormid VARCHAR), CREATE TABLE has_amenity (amenid VARCHAR, dormid VARCHAR), CREATE TABLE dorm_amenity (amenid VARCHAR, amenity_name VARCHAR), CREATE TABLE lives_in (stuid VARCHAR, dormid VARCHAR), CREATE TABLE student (stuid VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少顾客？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计客户的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据电子邮件地址和电话号码排序查找所有客户的电子邮件和电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number"
      }
    ],
    "system": "CREATE TABLE customers (phone_number VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按电子邮件地址和电话号码排序的所有客户的电子邮件和电话号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT email_address ,  phone_number FROM customers ORDER BY email_address ,  phone_number"
      }
    ],
    "system": "CREATE TABLE customers (phone_number VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市的类型代码是“良好信用评级”的客户数量最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT town_city FROM customers WHERE customer_type_code  =  \"良好信用评级\" GROUP BY town_city ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_type_code VARCHAR, town_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回有最少客户的客户类型代码为“良好信用评级”的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT town_city FROM customers WHERE customer_type_code  =  \"良好信用评级\" GROUP BY town_city ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_type_code VARCHAR, town_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有产品的名称以及其收到的投诉数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE complaints (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有不同的产品名称是什么 ，以及每个收到多少投诉？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE complaints (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些对产品投诉最多的那个客户的电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR, email_address VARCHAR), CREATE TABLE complaints (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对产品投诉最多的客户的电子邮件是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR, email_address VARCHAR), CREATE TABLE complaints (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些产品被最少的客户投诉？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE complaints (product_id VARCHAR), CREATE TABLE customers (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回提交最少客户投诉的产品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_name VARCHAR), CREATE TABLE complaints (product_id VARCHAR), CREATE TABLE customers (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近投诉的客户的电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR, phone_number VARCHAR), CREATE TABLE complaints (date_complaint_raised VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最近提出的投诉的客户的电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR, phone_number VARCHAR), CREATE TABLE complaints (date_complaint_raised VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出以前从未提出过投诉的客户的电子邮件和电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR, phone_number VARCHAR, email_address VARCHAR), CREATE TABLE complaints (customer_id VARCHAR, phone_number VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些从未提出投诉的顾客的电子邮件和电话号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR, phone_number VARCHAR, email_address VARCHAR), CREATE TABLE complaints (customer_id VARCHAR, phone_number VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有客户和员工的电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff"
      }
    ],
    "system": "CREATE TABLE customers (phone_number VARCHAR), CREATE TABLE staff (phone_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有客户和所有员工的电话号码是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT phone_number FROM customers UNION SELECT phone_number FROM staff"
      }
    ],
    "system": "CREATE TABLE customers (phone_number VARCHAR), CREATE TABLE staff (phone_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对“巧克力”的描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_description FROM products WHERE product_name  =  \"巧克力\""
      }
    ],
    "system": "CREATE TABLE products (product_description VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回被称为“巧克力”的产品的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_description FROM products WHERE product_name  =  \"巧克力\""
      }
    ],
    "system": "CREATE TABLE products (product_description VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最贵产品的名称和类别。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR, product_price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "价格最高的产品名称和类别代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_name ,  product_category_code FROM products ORDER BY product_price DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_name VARCHAR, product_price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出未收到过投诉的产品的价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_price VARCHAR), CREATE TABLE complaints (product_id VARCHAR, product_price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有投诉的产品的价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT product_price FROM products WHERE product_id NOT IN (SELECT product_id FROM complaints)"
      }
    ],
    "system": "CREATE TABLE products (product_id VARCHAR, product_price VARCHAR), CREATE TABLE complaints (product_id VARCHAR, product_price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种类别产品的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code"
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有每个类别代码的产品的平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(product_price) ,  product_category_code FROM products GROUP BY product_category_code"
      }
    ],
    "system": "CREATE TABLE products (product_category_code VARCHAR, product_price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出处理最便宜产品投诉的工作人员的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, last_name VARCHAR), CREATE TABLE complaints (product_id VARCHAR, staff_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "负责投诉产品价格最低的工作人员的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, last_name VARCHAR), CREATE TABLE complaints (product_id VARCHAR, staff_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_price VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种投诉状态在文件上有超过3条记录？"
      },
      {
        "from": "assistant",
        "value": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE complaints (complaint_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回投诉状态代码有超过3个的相应投诉？"
      },
      {
        "from": "assistant",
        "value": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE complaints (complaint_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找其电子邮件地址包含“westlake”的员工的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT last_name FROM staff WHERE email_address LIKE \"%westlake%\""
      }
    ],
    "system": "CREATE TABLE staff (last_name VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含子字符串“westlake”的电子邮件地址的工作人员的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT last_name FROM staff WHERE email_address LIKE \"%westlake%\""
      }
    ],
    "system": "CREATE TABLE staff (last_name VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户最多的客户类型有多少客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算具有最常见的客户类型的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "处理过第一次投诉的员工的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, last_name VARCHAR), CREATE TABLE complaints (staff_id VARCHAR, date_complaint_raised VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回以最早的日期处理投诉的工作人员的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, last_name VARCHAR), CREATE TABLE complaints (staff_id VARCHAR, date_complaint_raised VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数据库中有多少不同的投诉类型代码？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT complaint_type_code) FROM complaints"
      }
    ],
    "system": "CREATE TABLE complaints (complaint_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同类型投诉代码的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT complaint_type_code) FROM complaints"
      }
    ],
    "system": "CREATE TABLE complaints (complaint_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用电子邮件“vbogisich@qq.org”查找客户地址的第1行和第2行。"
      },
      {
        "from": "assistant",
        "value": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@qq.org\""
      }
    ],
    "system": "CREATE TABLE customers (address_line_2 VARCHAR, address_line_1 VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电子邮件“vbogisich@qq.org”中客户地址的第一行和第二行是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT address_line_1 ,  address_line_2 FROM customers WHERE email_address  =  \"vbogisich@qq.org\""
      }
    ],
    "system": "CREATE TABLE customers (address_line_2 VARCHAR, address_line_1 VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "为每个投诉状态找出具有“产品故障”类型的投诉数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"产品故障\" GROUP BY complaint_status_code"
      }
    ],
    "system": "CREATE TABLE complaints (complaint_status_code VARCHAR, complaint_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于“产品故障”类型代码的投诉，每个不同的状态代码有多少个？"
      },
      {
        "from": "assistant",
        "value": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"产品故障\" GROUP BY complaint_status_code"
      }
    ],
    "system": "CREATE TABLE complaints (complaint_status_code VARCHAR, complaint_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "处理投诉最多的前5名员工的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, first_name VARCHAR), CREATE TABLE complaints (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回处理投诉最多的5名员工的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id GROUP BY t2.staff_id ORDER BY count(*) LIMIT 5"
      }
    ],
    "system": "CREATE TABLE staff (staff_id VARCHAR, first_name VARCHAR), CREATE TABLE complaints (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省的客户最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出拥有最多顾客的省。"
      },
      {
        "from": "assistant",
        "value": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少提交意见？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM submission"
      }
    ],
    "system": "CREATE TABLE submission (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计提交的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM submission"
      }
    ],
    "system": "CREATE TABLE submission (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按分数升序排列提交的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Author FROM submission ORDER BY Scores ASC"
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, Scores VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个提交的作者，并按提交分数的升序列出它们。"
      },
      {
        "from": "assistant",
        "value": "SELECT Author FROM submission ORDER BY Scores ASC"
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, Scores VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提交的作者和他们的学院是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Author ,  College FROM submission"
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个提交，显示作者及其附属学院。"
      },
      {
        "from": "assistant",
        "value": "SELECT Author ,  College FROM submission"
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“浙江”大学或“南京”大学的作者姓名"
      },
      {
        "from": "assistant",
        "value": "SELECT Author FROM submission WHERE College  =  \"浙江\" OR College  =  \"南京\""
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些提交的作者来自“浙江”大学或“南京”大学？"
      },
      {
        "from": "assistant",
        "value": "SELECT Author FROM submission WHERE College  =  \"浙江\" OR College  =  \"南京\""
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提交的平均分数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Scores) FROM submission"
      }
    ],
    "system": "CREATE TABLE submission (Scores INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算提交的平均分数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Scores) FROM submission"
      }
    ],
    "system": "CREATE TABLE submission (Scores INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提交分数最高的作者是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, Scores VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在提交中获得最高分数的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Author FROM submission ORDER BY Scores DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, Scores VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的大学以及每个学大学提交论文的作者数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT College ,  COUNT(*) FROM submission GROUP BY College"
      }
    ],
    "system": "CREATE TABLE submission (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个大学，返回大学名称和从该大学提交的作者计数。"
      },
      {
        "from": "assistant",
        "value": "SELECT College ,  COUNT(*) FROM submission GROUP BY College"
      }
    ],
    "system": "CREATE TABLE submission (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最常见的大学提交的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE submission (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一所大学的提交的作者最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE submission (College VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示那些提交分数大于90的作者和提交分数小于80的作者的大学。"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80"
      }
    ],
    "system": "CREATE TABLE submission (College VARCHAR, Scores INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些大学有提交分数在90以上的作者和80以下的作者？"
      },
      {
        "from": "assistant",
        "value": "SELECT College FROM submission WHERE Scores  >  90 INTERSECT SELECT College FROM submission WHERE Scores  <  80"
      }
    ],
    "system": "CREATE TABLE submission (College VARCHAR, Scores INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示提交的作者及其提交的接受结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID"
      }
    ],
    "system": "CREATE TABLE acceptance (Submission_ID VARCHAR, Result VARCHAR), CREATE TABLE submission (Author VARCHAR, Submission_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个提交，找出其作者和接受结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID"
      }
    ],
    "system": "CREATE TABLE acceptance (Submission_ID VARCHAR, Result VARCHAR), CREATE TABLE submission (Author VARCHAR, Submission_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最高分数的提交结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE acceptance (Submission_ID VARCHAR, Result VARCHAR), CREATE TABLE submission (Submission_ID VARCHAR, Scores VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在录取结果中，录取分数最高。把结果显示给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID ORDER BY T2.Scores DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE acceptance (Submission_ID VARCHAR, Result VARCHAR), CREATE TABLE submission (Submission_ID VARCHAR, Scores VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个作者和他们提交的研习会数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author"
      }
    ],
    "system": "CREATE TABLE acceptance (Submission_ID VARCHAR, workshop_id VARCHAR), CREATE TABLE submission (Author VARCHAR, Submission_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个作者提交了多少个研习会？返回作者姓名和研习会的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author"
      }
    ],
    "system": "CREATE TABLE acceptance (Submission_ID VARCHAR, workshop_id VARCHAR), CREATE TABLE submission (Author VARCHAR, Submission_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示提交给一个以上研习会的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1"
      }
    ],
    "system": "CREATE TABLE acceptance (Submission_ID VARCHAR, workshop_id VARCHAR), CREATE TABLE submission (Author VARCHAR, Submission_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些作者提交了一个以上的研习会？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1"
      }
    ],
    "system": "CREATE TABLE acceptance (Submission_ID VARCHAR, workshop_id VARCHAR), CREATE TABLE submission (Author VARCHAR, Submission_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照场地的升序显示每个研讨会的日期和地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date ,  Venue FROM workshop ORDER BY Venue"
      }
    ],
    "system": "CREATE TABLE workshop (Date VARCHAR, Venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按场地的字母顺序对每个研习会进行排序。返回每个研习会的日期和地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date ,  Venue FROM workshop ORDER BY Venue"
      }
    ],
    "system": "CREATE TABLE workshop (Date VARCHAR, Venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有提交到任何研习会的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)"
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, Submission_ID VARCHAR), CREATE TABLE acceptance (Author VARCHAR, Submission_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些作者没有提交任何研习会？"
      },
      {
        "from": "assistant",
        "value": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)"
      }
    ],
    "system": "CREATE TABLE submission (Author VARCHAR, Submission_ID VARCHAR), CREATE TABLE acceptance (Author VARCHAR, Submission_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出投资者总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM INVESTORS"
      }
    ],
    "system": "CREATE TABLE INVESTORS (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有投资者的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT Investor_details FROM INVESTORS"
      }
    ],
    "system": "CREATE TABLE INVESTORS (Investor_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有不同批次的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT lot_details FROM LOTS"
      }
    ],
    "system": "CREATE TABLE LOTS (lot_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最大交易量。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(amount_of_transaction) FROM TRANSACTIONS"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (amount_of_transaction INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示交易的所有日期和份额数。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_transaction ,  share_count FROM TRANSACTIONS"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (date_of_transaction VARCHAR, share_count VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "交易的总份额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(share_count) FROM TRANSACTIONS"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (share_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有带有“PUR”的交易码的交易ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_id FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\""
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (transaction_id VARCHAR, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示类型代码为“销售中”的所有交易的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_transaction FROM TRANSACTIONS WHERE transaction_type_code  =  \"销售中\""
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (date_of_transaction VARCHAR, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示类型代码为“销售中”的平均交易量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"销售中\""
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (amount_of_transaction INTEGER, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示代码为“PUR”的交易类型的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type_description FROM Ref_Transaction_Types WHERE transaction_type_code\t  =  \"PUR\""
      }
    ],
    "system": "CREATE TABLE Ref_Transaction_Types (transaction_type_description VARCHAR, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示类型代码为“PUR”且份额数大于50的交易的最小数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\" AND share_count  >  50"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (amount_of_transaction INTEGER, share_count INTEGER, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示金额小于10000的交易的最大份额数"
      },
      {
        "from": "assistant",
        "value": "SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (amount_of_transaction INTEGER, share_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示份额数大于100且数量大于1000的交易日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (amount_of_transaction INTEGER, share_count INTEGER, date_of_transaction VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示份额数小于10的交易类型描述和日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10"
      }
    ],
    "system": "CREATE TABLE Ref_Transaction_Types (transaction_type_description VARCHAR, transaction_type_code VARCHAR), CREATE TABLE TRANSACTIONS (share_count INTEGER, date_of_transaction VARCHAR, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有作出任何交易且股票计数超过100的投资者的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100"
      }
    ],
    "system": "CREATE TABLE INVESTORS (investor_id VARCHAR, Investor_details VARCHAR), CREATE TABLE TRANSACTIONS (investor_id VARCHAR, share_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在交易中使用了多少种不同的交易类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT transaction_type_code) FROM TRANSACTIONS"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回批次细节和投资者ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT lot_details ,  investor_id FROM LOTS"
      }
    ],
    "system": "CREATE TABLE LOTS (investor_id VARCHAR, lot_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回属于以细节“l”的投资者的大量批次细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\""
      }
    ],
    "system": "CREATE TABLE INVESTORS (investor_id VARCHAR, Investor_details VARCHAR), CREATE TABLE LOTS (investor_id VARCHAR, lot_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "购买金额大于10000的交易详情是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.purchase_details FROM PURCHASES AS T1 JOIN TRANSACTIONS AS T2 ON T1.purchase_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  >  10000"
      }
    ],
    "system": "CREATE TABLE PURCHASES (purchase_details VARCHAR, purchase_transaction_id VARCHAR), CREATE TABLE TRANSACTIONS (transaction_id VARCHAR, amount_of_transaction INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "金额小于3000的交易的销售细节和日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000"
      }
    ],
    "system": "CREATE TABLE SALES (sales_details VARCHAR, sales_transaction_id VARCHAR), CREATE TABLE TRANSACTIONS (transaction_id VARCHAR, amount_of_transaction INTEGER, date_of_transaction VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与份额数小于50的交易相关的批次的批次细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50"
      }
    ],
    "system": "CREATE TABLE LOTS (lot_id VARCHAR, lot_details VARCHAR), CREATE TABLE TRANSACTIONS_LOTS (transaction_id VARCHAR), CREATE TABLE TRANSACTIONS (transaction_id VARCHAR, share_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与份额数大于100且类型代码为“PUR”的交易相关的批次的批次细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\""
      }
    ],
    "system": "CREATE TABLE LOTS (lot_id VARCHAR, lot_details VARCHAR), CREATE TABLE TRANSACTIONS_LOTS (transaction_id VARCHAR), CREATE TABLE TRANSACTIONS (transaction_id VARCHAR, share_count INTEGER, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同交易类型的平均交易量。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type_code ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY transaction_type_code"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (amount_of_transaction INTEGER, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同交易类型的最大和最小份额数。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (share_count INTEGER, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同投资者的平均交易份额数。"
      },
      {
        "from": "assistant",
        "value": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR, share_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示按平均份额数排序的每个投资者的交易平均份额数。"
      },
      {
        "from": "assistant",
        "value": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR, share_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同投资者的平均交易量。"
      },
      {
        "from": "assistant",
        "value": "SELECT investor_id ,  avg(amount_of_transaction) FROM TRANSACTIONS GROUP BY investor_id"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR, amount_of_transaction INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同批次的平均交易量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (transaction_id VARCHAR), CREATE TABLE Transactions_Lots (lot_id VARCHAR, transaction_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示按平均交易量排序的不同批次的平均交易量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (transaction_id VARCHAR), CREATE TABLE Transactions_Lots (lot_id VARCHAR, transaction_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "如果交易类型代码大于0，则显示不同投资者的交易编码为“销售中”的交易数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"销售中\" GROUP BY investor_id"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同投资者的交易数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS GROUP BY investor_id"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (investor_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最少发生的交易类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最频繁发生的交易类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最频繁发生的交易类型的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Ref_Transaction_Types (transaction_type_description VARCHAR, transaction_type_code VARCHAR), CREATE TABLE TRANSACTIONS (transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有最大交易数量的投资者的ID和投资者细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE INVESTORS (investor_id VARCHAR, Investor_details VARCHAR), CREATE TABLE TRANSACTIONS (investor_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示交易数量前3多的投资人的ID和投资者细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE INVESTORS (investor_id VARCHAR, Investor_details VARCHAR), CREATE TABLE TRANSACTIONS (investor_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两个交易的投资者的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE INVESTORS (investor_id VARCHAR), CREATE TABLE TRANSACTIONS (investor_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两笔交易类型为“销售中”的投资者的ID和投资者的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \"销售中\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE INVESTORS (investor_id VARCHAR, Investor_details VARCHAR), CREATE TABLE TRANSACTIONS (investor_id VARCHAR, transaction_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有100份额或超过100份额的交易日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100"
      }
    ],
    "system": "CREATE TABLE TRANSACTIONS (amount_of_transaction INTEGER, share_count INTEGER, date_of_transaction VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有销售和购买的细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases"
      }
    ],
    "system": "CREATE TABLE sales (purchase_details VARCHAR, sales_details VARCHAR), CREATE TABLE purchases (purchase_details VARCHAR, sales_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是在任何交易中不使用的批次的细节？"
      },
      {
        "from": "assistant",
        "value": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id"
      }
    ],
    "system": "CREATE TABLE Lots (lot_id VARCHAR, lot_details VARCHAR), CREATE TABLE transactions_lots (lot_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少家酒店？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM HOTELS"
      }
    ],
    "system": "CREATE TABLE HOTELS (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出酒店的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM HOTELS"
      }
    ],
    "system": "CREATE TABLE HOTELS (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "饭店的价格范围是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT price_range FROM HOTELS"
      }
    ],
    "system": "CREATE TABLE HOTELS (price_range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "告诉我所有旅馆的价格范围。"
      },
      {
        "from": "assistant",
        "value": "SELECT price_range FROM HOTELS"
      }
    ],
    "system": "CREATE TABLE HOTELS (price_range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有不同的位置名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Location_Name FROM LOCATIONS"
      }
    ],
    "system": "CREATE TABLE LOCATIONS (Location_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是不同的地名？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Location_Name FROM LOCATIONS"
      }
    ],
    "system": "CREATE TABLE LOCATIONS (Location_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有员工的姓名和细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Other_Details FROM Staff"
      }
    ],
    "system": "CREATE TABLE Staff (Name VARCHAR, Other_Details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个员工的姓名和详细情况是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Other_Details FROM Staff"
      }
    ],
    "system": "CREATE TABLE Staff (Name VARCHAR, Other_Details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有访问者的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT Tourist_Details FROM VISITORS"
      }
    ],
    "system": "CREATE TABLE VISITORS (Tourist_Details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个访问者的详细情况是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Tourist_Details FROM VISITORS"
      }
    ],
    "system": "CREATE TABLE VISITORS (Tourist_Details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“5”星级酒店的价格范围。"
      },
      {
        "from": "assistant",
        "value": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\""
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“5”星级酒店的价格范围是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT price_range FROM HOTELS WHERE star_rating_code  =  \"5\""
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有“5”星级评级和允许宠物的酒店的平均价格范围。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range INTEGER, pets_allowed_yn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“5”星级酒店允许宠物的平均价格范围是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range INTEGER, pets_allowed_yn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“国家艺术馆”地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"国家艺术馆\""
      }
    ],
    "system": "CREATE TABLE LOCATIONS (Address VARCHAR, Location_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出名为“国家艺术馆”的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"国家艺术馆\""
      }
    ],
    "system": "CREATE TABLE LOCATIONS (Address VARCHAR, Location_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“国家艺术馆”的具体位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"国家艺术馆\""
      }
    ],
    "system": "CREATE TABLE LOCATIONS (Location_Name VARCHAR, Other_Details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回名为“国家艺术馆”的详细位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT Other_Details FROM LOCATIONS WHERE Location_Name  =  \"国家艺术馆\""
      }
    ],
    "system": "CREATE TABLE LOCATIONS (Location_Name VARCHAR, Other_Details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个位置的名字包含“大厦”这个词？"
      },
      {
        "from": "assistant",
        "value": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%大厦%\""
      }
    ],
    "system": "CREATE TABLE LOCATIONS (Location_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有名字包含“大厦”的地方。"
      },
      {
        "from": "assistant",
        "value": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%大厦%\""
      }
    ],
    "system": "CREATE TABLE LOCATIONS (Location_Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个不同的名字与所有的照片相关？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Name) FROM PHOTOS"
      }
    ],
    "system": "CREATE TABLE PHOTOS (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算与照片相关的不同名称的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT Name) FROM PHOTOS"
      }
    ],
    "system": "CREATE TABLE PHOTOS (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的访问日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Visit_Date FROM VISITS"
      }
    ],
    "system": "CREATE TABLE VISITS (Visit_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有不同的访问日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Visit_Date FROM VISITS"
      }
    ],
    "system": "CREATE TABLE VISITS (Visit_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“公共汽车”可以访问的旅游景点名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"公共汽车\""
      }
    ],
    "system": "CREATE TABLE TOURIST_ATTRACTIONS (Name VARCHAR, How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们乘“公共汽车”能到哪些旅游景点？告诉我景点的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"公共汽车\""
      }
    ],
    "system": "CREATE TABLE TOURIST_ATTRACTIONS (Name VARCHAR, How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“公共汽车”或“步行”可到达的旅游景点的名称和开放时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"公共汽车\" OR How_to_Get_There  =  \"步行\""
      }
    ],
    "system": "CREATE TABLE TOURIST_ATTRACTIONS (How_to_Get_There VARCHAR, Name VARCHAR, Opening_Hours VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找我们乘“公共汽车”或“步行”到达的旅游景点的名称和开放时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"公共汽车\" OR How_to_Get_There  =  \"步行\""
      }
    ],
    "system": "CREATE TABLE TOURIST_ATTRACTIONS (How_to_Get_There VARCHAR, Name VARCHAR, Opening_Hours VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "价格超过10000的酒店星级评级描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range INTEGER), CREATE TABLE Ref_Hotel_Star_Ratings (star_rating_code VARCHAR, star_rating_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我费用超过10000的星级酒店的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range INTEGER), CREATE TABLE Ref_Hotel_Star_Ratings (star_rating_code VARCHAR, star_rating_description VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "博物馆的细节和开放时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID"
      }
    ],
    "system": "CREATE TABLE MUSEUMS (Museum_Details VARCHAR, Museum_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (Opening_Hours VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我每个博物馆的详细时间和开放时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Museum_Details ,  T2.Opening_Hours FROM MUSEUMS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Museum_ID  =  T2.Tourist_Attraction_ID"
      }
    ],
    "system": "CREATE TABLE MUSEUMS (Museum_Details VARCHAR, Museum_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (Opening_Hours VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与照片“游戏1”相关的旅游景点叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"游戏1\""
      }
    ],
    "system": "CREATE TABLE PHOTOS (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (Name VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个旅游景点与照片“游戏1”有关？返回它的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"游戏1\""
      }
    ],
    "system": "CREATE TABLE PHOTOS (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (Name VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在旅游景点“电影城”拍的照片的名称和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"电影城\""
      }
    ],
    "system": "CREATE TABLE PHOTOS (Description VARCHAR, Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (Name VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在旅游景点“电影城”拍摄的照片的名称和描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"电影城\""
      }
    ],
    "system": "CREATE TABLE PHOTOS (Description VARCHAR, Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (Name VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "去皇家旅游景点的细节和到达交通方式是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID"
      }
    ],
    "system": "CREATE TABLE ROYAL_FAMILY (Royal_Family_Details VARCHAR, Royal_Family_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (How_to_Get_There VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些旅游景点与皇室有关？告诉我他们的细节以及我们怎样才能到达那里。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Royal_Family_Details ,  T2.How_to_Get_There FROM ROYAL_FAMILY AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Royal_Family_ID  =  T2.Tourist_Attraction_ID"
      }
    ],
    "system": "CREATE TABLE ROYAL_FAMILY (Royal_Family_Details VARCHAR, Royal_Family_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (How_to_Get_There VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可以用“步行”访问的细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"步行\""
      }
    ],
    "system": "CREATE TABLE SHOPS (Shop_ID VARCHAR, Shop_Details VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (How_to_Get_There VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“步行”可以到达的商店的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"步行\""
      }
    ],
    "system": "CREATE TABLE SHOPS (Shop_ID VARCHAR, Shop_Details VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (How_to_Get_There VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "负责这个名为“故宫博物院”的景点的工作人员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"故宫博物院\""
      }
    ],
    "system": "CREATE TABLE STAFF (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (Name VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我负责这个名字叫“故宫博物院”的景点的工作人员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM STAFF AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"故宫博物院\""
      }
    ],
    "system": "CREATE TABLE STAFF (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (Name VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可以通过“步行”或“公共汽车”访问的市场的细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"步行\" OR  T2.How_to_Get_There  =  \"公共汽车\""
      }
    ],
    "system": "CREATE TABLE Street_Markets (Market_Details VARCHAR, Market_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (How_to_Get_There VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有可以“步行”或“公共汽车”访问的市场的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Market_Details FROM Street_Markets AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Market_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"步行\" OR  T2.How_to_Get_There  =  \"公共汽车\""
      }
    ],
    "system": "CREATE TABLE Street_Markets (Market_Details VARCHAR, Market_ID VARCHAR), CREATE TABLE TOURIST_ATTRACTIONS (How_to_Get_There VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "访问者细节是“维华”的访问日期和访问者细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"维华\""
      }
    ],
    "system": "CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR), CREATE TABLE VISITS (Visit_Details VARCHAR, Visit_Date VARCHAR, Tourist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出访问日期和访客细节是“维华”的游客"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"维华\""
      }
    ],
    "system": "CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR), CREATE TABLE VISITS (Visit_Details VARCHAR, Visit_Date VARCHAR, Tourist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些旅游景点是访客细节为“维华”参观的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"维华\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITS (Tourist_ID VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示细节是“维华”的访客参观的景点。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"维华\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITS (Tourist_ID VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“维华”或“安然”的游客的参观的景点名称和参观日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"维华\" OR T2.Tourist_Details  =  \"安然\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR), CREATE TABLE VISITS (Visit_Date VARCHAR, Tourist_ID VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个旅游景点，返回其名称和名字是“维华”或“安然”的游客的参观的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"维华\" OR T2.Tourist_Details  =  \"安然\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR), CREATE TABLE VISITS (Visit_Date VARCHAR, Tourist_ID VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个星级酒店的平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个星级酒店的平均价格范围是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT star_rating_code ,  avg(price_range) FROM HOTELS GROUP BY star_rating_code"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的宠物政策的酒店的平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn"
      }
    ],
    "system": "CREATE TABLE HOTELS (price_range INTEGER, pets_allowed_yn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按他们的宠物政策分组的旅馆的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT pets_allowed_yn ,  avg(price_range) FROM HOTELS GROUP BY pets_allowed_yn"
      }
    ],
    "system": "CREATE TABLE HOTELS (price_range INTEGER, pets_allowed_yn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "价格从低到高进行排序显示每个酒店的ID和星级。"
      },
      {
        "from": "assistant",
        "value": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range VARCHAR, hotel_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个酒店的ID和星级评定，并按价格递增顺序进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT hotel_id ,  star_rating_code FROM HOTELS ORDER BY price_range ASC"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, price_range VARCHAR, hotel_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示最贵的3个酒店的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE HOTELS (other_hotel_details VARCHAR, price_range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "三家最贵的酒店有什么细节？"
      },
      {
        "from": "assistant",
        "value": "SELECT other_hotel_details FROM HOTELS ORDER BY price_range DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE HOTELS (other_hotel_details VARCHAR, price_range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示3家最便宜的酒店的细节和星级。"
      },
      {
        "from": "assistant",
        "value": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, other_hotel_details VARCHAR, price_range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "三家价格范围最低的旅馆的细节和星级标准是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE HOTELS (star_rating_code VARCHAR, other_hotel_details VARCHAR, price_range VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示大多数人选择旅游景点的交通方式。"
      },
      {
        "from": "assistant",
        "value": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "去旅游景点最常用哪种交通方式？"
      },
      {
        "from": "assistant",
        "value": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最多数旅游景点所属的景点类型的描述和代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Ref_Attraction_Types (Attraction_Type_Code VARCHAR, Attraction_Type_Description VARCHAR), CREATE TABLE Tourist_Attractions (Attraction_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多数旅游景点属于哪个景点类型？告诉我它的景点类型描述和代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Ref_Attraction_Types (Attraction_Type_Code VARCHAR, Attraction_Type_Description VARCHAR), CREATE TABLE Tourist_Attractions (Attraction_Type_Code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同的到达景点的方法和可以以相应方式访问的景点的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有可能到达景点的方法，以及这些方法可访问的景点数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT How_to_Get_There ,  COUNT(*) FROM Tourist_Attractions GROUP BY How_to_Get_There"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同旅游景点的名称、ID和相应的访问次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个旅游景点的名称、ID和相应的参观次数是多少?"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少两次参观的旅游景点的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪两个旅游景点至少要游览两次？给我他们的名字和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最多游览一次的旅游景点的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多去一次的旅游景点的名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1"
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITS (Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“步行”可以到达或者地址在 “石象路7号” 的旅游景点叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"石象路7号\" OR T2.How_to_Get_There  =  \"步行\""
      }
    ],
    "system": "CREATE TABLE Locations (Address VARCHAR, Location_ID VARCHAR), CREATE TABLE Tourist_Attractions (Location_ID VARCHAR, Name VARCHAR, How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出旅游景点的名字，既可以通过“步行”，或者地址在 “石象路7号”。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"石象路7号\" OR T2.How_to_Get_There  =  \"步行\""
      }
    ],
    "system": "CREATE TABLE Locations (Address VARCHAR, Location_ID VARCHAR), CREATE TABLE Tourist_Attractions (Location_ID VARCHAR, Name VARCHAR, How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些以停车或购物为特色的旅游景点叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  \"park\" UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  \"shopping\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, tourist_attraction_id VARCHAR), CREATE TABLE Tourist_Attraction_Features (Feature_ID VARCHAR, tourist_attraction_id VARCHAR), CREATE TABLE Features (Feature_ID VARCHAR, feature_Details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有停车或购物作为特色细节的旅游景点。景点名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  \"park\" UNION SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN Tourist_Attraction_Features AS T2 ON T1.tourist_attraction_id  =  T2.tourist_attraction_id JOIN Features AS T3 ON T2.Feature_ID  =  T3.Feature_ID WHERE T3.feature_Details  =  \"shopping\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, tourist_attraction_id VARCHAR), CREATE TABLE Tourist_Attraction_Features (Feature_ID VARCHAR, tourist_attraction_id VARCHAR), CREATE TABLE Features (Feature_ID VARCHAR, feature_Details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“公共汽车”能到达或地址在 “长江路292号” 的旅游景点叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"长江路292号\" OR T2.How_to_Get_There  =  \"公共汽车\""
      }
    ],
    "system": "CREATE TABLE Locations (Address VARCHAR, Location_ID VARCHAR), CREATE TABLE Tourist_Attractions (Location_ID VARCHAR, Name VARCHAR, How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出旅游景点的名称，可以乘坐“公共汽车”或地址在 “长江路292号” 。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"长江路292号\" OR T2.How_to_Get_There  =  \"公共汽车\""
      }
    ],
    "system": "CREATE TABLE Locations (Address VARCHAR, Location_ID VARCHAR), CREATE TABLE Tourist_Attractions (Location_ID VARCHAR, Name VARCHAR, How_to_Get_There VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“维华”和 “慧兰” 参观的旅游景点名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"维华\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"慧兰\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR), CREATE TABLE VISITS (Tourist_ID VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "游客“维华”和“慧兰”参观哪些景点？告诉我景点的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"维华\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"慧兰\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR), CREATE TABLE VISITS (Tourist_ID VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“张颖”参观但 “李强” 没有参观的旅游景点叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"李强\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"张颖\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR), CREATE TABLE VISITS (Tourist_ID VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出叫“张颖”的游客但 “李强” 没去的旅游景点的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"李强\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"张颖\""
      }
    ],
    "system": "CREATE TABLE Tourist_Attractions (Name VARCHAR, Tourist_Attraction_ID VARCHAR), CREATE TABLE VISITORS (Tourist_Details VARCHAR, Tourist_ID VARCHAR), CREATE TABLE VISITS (Tourist_ID VARCHAR, Tourist_Attraction_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少游客没有去参观？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )"
      }
    ],
    "system": "CREATE TABLE Visitors (Tourist_ID VARCHAR), CREATE TABLE Visits (Tourist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计没有参观任何地方的游客人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )"
      }
    ],
    "system": "CREATE TABLE Visitors (Tourist_ID VARCHAR), CREATE TABLE Visits (Tourist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少视频游戏存在？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Video_games"
      }
    ],
    "system": "CREATE TABLE Video_games (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "你有多少个电子游戏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Video_games"
      }
    ],
    "system": "CREATE TABLE Video_games (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少种电子游戏类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT gtype) FROM Video_games"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同游戏类型的计数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT gtype) FROM Video_games"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有视频游戏类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT gtype FROM Video_games"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电子游戏有什么不同的类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT gtype FROM Video_games"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照他们名字的顺序显示所有的电子游戏和他们的类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT gname ,  gtype FROM Video_games ORDER BY gname"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR, gname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的电子游戏的名称和字母顺序的类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT gname ,  gtype FROM Video_games ORDER BY gname"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR, gname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有“收集卡片”类型的视频游戏。"
      },
      {
        "from": "assistant",
        "value": "SELECT gname FROM Video_games WHERE gtype  =  \"收集卡片\""
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR, gname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“收集卡片”类型的电子游戏的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT gname FROM Video_games WHERE gtype  =  \"收集卡片\""
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR, gname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“使命召唤”的类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT gtype FROM Video_games WHERE gname  =  \"使命召唤\""
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR, gname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“使命召唤”是什么类型的游戏？"
      },
      {
        "from": "assistant",
        "value": "SELECT gtype FROM Video_games WHERE gname  =  \"使命召唤\""
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR, gname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少视频游戏是“大型多人在线游戏”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Video_games WHERE gtype  =  \"大型多人在线游戏\""
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算“大型多人在线游戏”类型的游戏数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Video_games WHERE gtype  =  \"大型多人在线游戏\""
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有视频游戏类型和每种类型的视频游戏的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有什么类型的电子游戏和每种类型有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种游戏类型有最多的游戏？"
      },
      {
        "from": "assistant",
        "value": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么类型的游戏最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种游戏类型的游戏数量最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么类型的游戏最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Video_games (gtype VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有住在“慧园”的学生的 ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE city_code  =  \"慧园\""
      }
    ],
    "system": "CREATE TABLE Student (city_code VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "生活在“慧园”中的所有学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE city_code  =  \"慧园\""
      }
    ],
    "system": "CREATE TABLE Student (city_code VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有导师是1121号的学生的ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE Advisor  =  1121"
      }
    ],
    "system": "CREATE TABLE Student (Advisor VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有1121号导师的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE Advisor  =  1121"
      }
    ],
    "system": "CREATE TABLE Student (Advisor VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示主修课程编号是600的学生的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM Student WHERE Major  =  600"
      }
    ],
    "system": "CREATE TABLE Student (Major VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有主修课程编号是600课程的学生的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname FROM Student WHERE Major  =  600"
      }
    ],
    "system": "CREATE TABLE Student (Major VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同专业的平均年龄、最小年龄和最大年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个专业的平均年龄、最小年龄和最大年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major"
      }
    ],
    "system": "CREATE TABLE Student (age INTEGER, major VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有至少有两个学生的导师。"
      },
      {
        "from": "assistant",
        "value": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是导师？"
      },
      {
        "from": "assistant",
        "value": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少运动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT sportname) FROM Sportsinfo"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (sportname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们提供多少种不同类型的运动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT sportname) FROM Sportsinfo"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (sportname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生参加体育活动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT StuID) FROM Sportsinfo"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的学生参与体育运动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT StuID) FROM Sportsinfo"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有获得奖学金的学生的ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  \"Y\""
      }
    ],
    "system": "CREATE TABLE Sportsinfo (onscholarship VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有获得奖学金的运动生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Sportsinfo WHERE onscholarship  =  \"Y\""
      }
    ],
    "system": "CREATE TABLE Sportsinfo (onscholarship VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有获得奖学金的学生的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  \"Y\""
      }
    ],
    "system": "CREATE TABLE Sportsinfo (onscholarship VARCHAR, StuID VARCHAR), CREATE TABLE Student (Lname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有奖学金学生的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  \"Y\""
      }
    ],
    "system": "CREATE TABLE Sportsinfo (onscholarship VARCHAR, StuID VARCHAR), CREATE TABLE Student (Lname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学生玩多少种游戏？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(gamesplayed) FROM Sportsinfo"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (gamesplayed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "游戏的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(gamesplayed) FROM Sportsinfo"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (gamesplayed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有有奖学金学生的“足球”比赛共有多少场比赛？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"足球\" AND onscholarship  =  \"Y\""
      }
    ],
    "system": "CREATE TABLE Sportsinfo (onscholarship VARCHAR, gamesplayed INTEGER, sportname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有奖学金学生的所有“足球”比赛的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"足球\" AND onscholarship  =  \"Y\""
      }
    ],
    "system": "CREATE TABLE Sportsinfo (onscholarship VARCHAR, gamesplayed INTEGER, sportname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有体育名称和学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (sportname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每项运动有多少学生玩？"
      },
      {
        "from": "assistant",
        "value": "SELECT sportname ,  count(*) FROM Sportsinfo GROUP BY sportname"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (sportname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有学生ID与运动的数量和游戏的总数"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (gamesplayed INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学生的ID和他们参加了多少运动和游戏？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (gamesplayed INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有参加运动项目每周超过10小时的学生的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (hoursperweek INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每周参加所有运动项目上超过10个小时的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (hoursperweek INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "运动次数最多的学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR), CREATE TABLE Student (Lname VARCHAR, StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "运动最多次数的学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR), CREATE TABLE Student (Lname VARCHAR, StuID VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪项运动获得奖学金的学生参加最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  \"Y\" GROUP BY sportname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (onscholarship VARCHAR, sportname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有奖学金的学生最多参加的运动是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  \"Y\" GROUP BY sportname ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (onscholarship VARCHAR, sportname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有任何运动的学生ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo"
      }
    ],
    "system": "CREATE TABLE Student (StuID VARCHAR), CREATE TABLE Sportsinfo (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不参加体育运动的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo"
      }
    ],
    "system": "CREATE TABLE Student (StuID VARCHAR), CREATE TABLE Sportsinfo (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有奖学金且主修编号是600课程的学生ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  \"Y\""
      }
    ],
    "system": "CREATE TABLE Student (onscholarship VARCHAR, major VARCHAR, StuID VARCHAR), CREATE TABLE Sportsinfo (onscholarship VARCHAR, major VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "主修编号是600课程且有奖学金的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE major  =  600 INTERSECT SELECT StuID FROM Sportsinfo WHERE onscholarship  =  \"Y\""
      }
    ],
    "system": "CREATE TABLE Student (onscholarship VARCHAR, major VARCHAR, StuID VARCHAR), CREATE TABLE Sportsinfo (onscholarship VARCHAR, major VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示是女性和踢“足球”的学生ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE sex  =  \"F\" INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"足球\""
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, sportname VARCHAR, StuID VARCHAR), CREATE TABLE Sportsinfo (sex VARCHAR, sportname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有女生踢“足球”的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE sex  =  \"F\" INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"足球\""
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, sportname VARCHAR, StuID VARCHAR), CREATE TABLE Sportsinfo (sex VARCHAR, sportname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有不踢“足球”的男学生ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE sex  =  \"M\" EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"足球\""
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, sportname VARCHAR, StuID VARCHAR), CREATE TABLE Sportsinfo (sex VARCHAR, sportname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不踢“足球”的所有男生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student WHERE sex  =  \"M\" EXCEPT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"足球\""
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, sportname VARCHAR, StuID VARCHAR), CREATE TABLE Sportsinfo (sex VARCHAR, sportname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每周的总小时数和学生“韩”“江城”玩游戏的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"江城\" AND T2.Lname  =  \"韩\""
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR), CREATE TABLE Student (Fname VARCHAR, Lname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“韩”“江城”每次工作的总小时数和玩游戏的次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"江城\" AND T2.Lname  =  \"韩\""
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR), CREATE TABLE Student (Fname VARCHAR, Lname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每周的总小时数和20岁以下学生玩游戏的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR), CREATE TABLE Student (age INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每周的总小时数和20岁以下的学生游戏次数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR), CREATE TABLE Student (age INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少学生玩电子游戏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT StuID) FROM Plays_games"
      }
    ],
    "system": "CREATE TABLE Plays_games (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的学生玩游戏？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT StuID) FROM Plays_games"
      }
    ],
    "system": "CREATE TABLE Plays_games (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不玩电子游戏的学生的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games"
      }
    ],
    "system": "CREATE TABLE Student (StuID VARCHAR), CREATE TABLE Plays_games (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有不是电子游戏玩家的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games"
      }
    ],
    "system": "CREATE TABLE Student (StuID VARCHAR), CREATE TABLE Plays_games (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示玩电子游戏和运动的学生ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR), CREATE TABLE Plays_games (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "玩电子游戏和体育运动的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games"
      }
    ],
    "system": "CREATE TABLE Sportsinfo (StuID VARCHAR), CREATE TABLE Plays_games (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有游戏的ID和玩的小时数。"
      },
      {
        "from": "assistant",
        "value": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid"
      }
    ],
    "system": "CREATE TABLE Plays_games (hours_played INTEGER, gameid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个游戏的ID和每个游戏玩的总小时数？"
      },
      {
        "from": "assistant",
        "value": "SELECT gameid ,  sum(hours_played) FROM Plays_games GROUP BY gameid"
      }
    ],
    "system": "CREATE TABLE Plays_games (hours_played INTEGER, gameid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有学生ID和玩的小时数。"
      },
      {
        "from": "assistant",
        "value": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid"
      }
    ],
    "system": "CREATE TABLE Plays_games (hours_played INTEGER, Stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有学生的ID和玩的小时数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid"
      }
    ],
    "system": "CREATE TABLE Plays_games (hours_played INTEGER, Stuid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示玩最多小时数的游戏名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Plays_games (gameid VARCHAR), CREATE TABLE Video_games (gameid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "玩的最多的游戏名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Plays_games (gameid VARCHAR), CREATE TABLE Video_games (gameid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有至少玩1000小时的游戏名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000"
      }
    ],
    "system": "CREATE TABLE Plays_games (gameid VARCHAR), CREATE TABLE Video_games (gameid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "已经玩了至少玩1000个小时的所有游戏的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000"
      }
    ],
    "system": "CREATE TABLE Plays_games (gameid VARCHAR), CREATE TABLE Video_games (gameid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示 “张”“晴” 所玩的所有游戏名称"
      },
      {
        "from": "assistant",
        "value": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"张\" AND T3.Fname  =  \"晴\""
      }
    ],
    "system": "CREATE TABLE Plays_games (Stuid VARCHAR, gameid VARCHAR), CREATE TABLE Video_games (gameid VARCHAR), CREATE TABLE Student (Lname VARCHAR, Stuid VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“张”“晴” 玩的所有游戏的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"张\" AND T3.Fname  =  \"晴\""
      }
    ],
    "system": "CREATE TABLE Plays_games (Stuid VARCHAR, gameid VARCHAR), CREATE TABLE Video_games (gameid VARCHAR), CREATE TABLE Student (Lname VARCHAR, Stuid VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出踢“足球”或“曲棍球”的学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"足球\" OR T1.SportName  =  \"曲棍球\""
      }
    ],
    "system": "CREATE TABLE SportsInfo (SportName VARCHAR, StuID VARCHAR), CREATE TABLE Student (fname VARCHAR, lname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有踢“足球”或“曲棍球”的学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"足球\" OR T1.SportName  =  \"曲棍球\""
      }
    ],
    "system": "CREATE TABLE SportsInfo (SportName VARCHAR, StuID VARCHAR), CREATE TABLE Student (fname VARCHAR, lname VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出同时踢“足球”和“曲棍球”的学生的名字和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"足球\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"曲棍球\")"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, age VARCHAR, SportName VARCHAR, StuID VARCHAR), CREATE TABLE Sportsinfo (fname VARCHAR, age VARCHAR, SportName VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有同时踢“足球”和“曲棍球”的学生的名字和年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"足球\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"曲棍球\")"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, age VARCHAR, SportName VARCHAR, StuID VARCHAR), CREATE TABLE Sportsinfo (fname VARCHAR, age VARCHAR, SportName VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出同时玩“使命召唤”和“绝地求生”游戏的学生的姓氏和性别。"
      },
      {
        "from": "assistant",
        "value": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"使命召唤\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"绝地求生\")"
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, lname VARCHAR, StuID VARCHAR), CREATE TABLE Plays_games (GameID VARCHAR, StuID VARCHAR), CREATE TABLE Video_games (GameID VARCHAR, Gname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有同时演奏“使命召唤”和“绝地求生”的学生的姓氏和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"使命召唤\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"绝地求生\")"
      }
    ],
    "system": "CREATE TABLE Student (sex VARCHAR, lname VARCHAR, StuID VARCHAR), CREATE TABLE Plays_games (GameID VARCHAR, StuID VARCHAR), CREATE TABLE Video_games (GameID VARCHAR, Gname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有客户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有顾客的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少顾客？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回不同客户的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个订单所订购的物品的平均数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(order_quantity) FROM order_items"
      }
    ],
    "system": "CREATE TABLE order_items (order_quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个订单的平均订单数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(order_quantity) FROM order_items"
      }
    ],
    "system": "CREATE TABLE order_items (order_quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用支付方式为“现金”的客户姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers WHERE payment_method  =  \"现金\""
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户使用“现金”支付方式？返回客户姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers WHERE payment_method  =  \"现金\""
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出ID在10到20之间的客户的成为客户的日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20"
      }
    ],
    "system": "CREATE TABLE customers (customer_id INTEGER, date_became_customer VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID介于10和20之间的客户成为客户的日期是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_became_customer FROM customers WHERE customer_id BETWEEN 10 AND 20"
      }
    ],
    "system": "CREATE TABLE customers (customer_id INTEGER, date_became_customer VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户使用最多种是什么付款方式？"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最常用的支付方式。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用最流行的支付方式的客户姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找使用最常用支付方式的客户姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的付款方式是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT payment_method FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回客户使用的所有不同的付款方式。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT payment_method FROM customers"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有产品的细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_details FROM products"
      }
    ],
    "system": "CREATE TABLE products (product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有产品的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_details FROM products"
      }
    ],
    "system": "CREATE TABLE products (product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有名为“少奇”的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%少奇%\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个客户的名字包含“少奇”？找出全名。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%少奇%\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找详细信息中包含“拿铁”或“美式咖啡”的产品的细节"
      },
      {
        "from": "assistant",
        "value": "SELECT product_details FROM products WHERE product_details LIKE \"%拿铁%\" OR product_details LIKE \"%美式咖啡%\""
      }
    ],
    "system": "CREATE TABLE products (product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个产品的细节包含单词“拿铁”或“美式咖啡”？返回完整的细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT product_details FROM products WHERE product_details LIKE \"%拿铁%\" OR product_details LIKE \"%美式咖啡%\""
      }
    ],
    "system": "CREATE TABLE products (product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为“王俊元”的客户的地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"王俊元\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_content VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回名为“王俊元”的客户的地址内容。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"王俊元\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_content VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“西安”的城市有多少顾客？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"西安\""
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出居住在这个叫做“西安”的城市的顾客的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.city  =  \"西安\""
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出住在“河北”的客户的名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"河北\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“河北”省的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"河北\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有顾客居住的城市的列表。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)"
      }
    ],
    "system": "CREATE TABLE addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有顾客居住的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)"
      }
    ],
    "system": "CREATE TABLE addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市的顾客最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最多顾客居住的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE customer_addresses (address_id VARCHAR, customer_id VARCHAR), CREATE TABLE addresses (address_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "检索所有城市的列表。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT city FROM addresses"
      }
    ],
    "system": "CREATE TABLE addresses (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有不同的城市"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT city FROM addresses"
      }
    ],
    "system": "CREATE TABLE addresses (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出邮政编码是255的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM addresses WHERE zip_postcode  =  255"
      }
    ],
    "system": "CREATE TABLE addresses (zip_postcode VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "邮政编码是255是哪个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM addresses WHERE zip_postcode  =  255"
      }
    ],
    "system": "CREATE TABLE addresses (zip_postcode VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出以“4”开头的邮政编码所有城市的省和市。"
      },
      {
        "from": "assistant",
        "value": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"%4%\""
      }
    ],
    "system": "CREATE TABLE addresses (country VARCHAR, state_province_county VARCHAR, zip_postcode VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有以“4”开头的邮政编码城市的省和市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"%4%\""
      }
    ],
    "system": "CREATE TABLE addresses (country VARCHAR, state_province_county VARCHAR, zip_postcode VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出有超过4个地址的国家名单。"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4"
      }
    ],
    "system": "CREATE TABLE addresses (country VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家有列出超过四个不同的地址？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4"
      }
    ],
    "system": "CREATE TABLE addresses (country VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有少于5次使用的联系人信道代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5"
      }
    ],
    "system": "CREATE TABLE customer_contact_channels (channel_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些联系信道代码使用少于5次？"
      },
      {
        "from": "assistant",
        "value": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5"
      }
    ],
    "system": "CREATE TABLE customer_contact_channels (channel_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个联系渠道已经被叫“杨超越”所使用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"杨超越\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_contact_channels (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出名为“杨超越”的客户使用的联系渠道代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"杨超越\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_contact_channels (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“杨超越”使用的最新联系人频道的激活日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"杨超越\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_contact_channels (active_to_date INTEGER, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回由名为“杨超越”的客户使用的最新联系渠道的激活日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"杨超越\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_contact_channels (active_to_date INTEGER, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "数据库中联系通道的平均时间跨度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels"
      }
    ],
    "system": "CREATE TABLE customer_contact_channels (active_from_date VARCHAR, active_to_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算联系通道的平均有效时间跨度。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(active_to_date - active_from_date) FROM customer_contact_channels"
      }
    ],
    "system": "CREATE TABLE customer_contact_channels (active_from_date VARCHAR, active_to_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长时间处于活动状态的客户联系渠道的信道代码和联系号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE customer_contact_channels (active_from_date VARCHAR, channel_code VARCHAR, active_to_date VARCHAR, contact_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回活动持续时间最长的客户联系渠道的信道代码和联系号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE customer_contact_channels (active_from_date VARCHAR, channel_code VARCHAR, active_to_date VARCHAR, contact_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出使用电子邮件作为联系渠道的客户的姓名和活动日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  \"Email\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_contact_channels (active_from_date VARCHAR, channel_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "联系渠道代码是电子邮件的客户的姓名和活动日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  \"Email\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_contact_channels (active_from_date VARCHAR, channel_code VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "订单数量最多的客户叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出订单最大订货量的客户。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "购买了最多商品的顾客的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我订购了最多的物品总数的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "购买数量最少的物品的顾客的付款方式是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我订货量最少的客户所使用的付款方式。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“路一鸣”总共买了多少种产品？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"路一鸣\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出迄今为止“路一鸣”购买的不同产品的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"路一鸣\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“路一鸣”购买的产品总量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"路一鸣\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我顾客“路一鸣”购买的产品的总数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t3.order_quantity) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"路一鸣\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户至少有一个订单状态是“取消”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"取消\""
      }
    ],
    "system": "CREATE TABLE customer_orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有至少一个“取消”状态的订单的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT customer_id) FROM customer_orders WHERE order_status  =  \"取消\""
      }
    ],
    "system": "CREATE TABLE customer_orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "多少订单有“第二次”的细节？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"第二次\""
      }
    ],
    "system": "CREATE TABLE customer_orders (order_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "告诉我把“第二次”作为订单细节的订单的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM customer_orders WHERE order_details  =  \"第二次\""
      }
    ],
    "system": "CREATE TABLE customer_orders (order_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出拥有“运送”订单状态的客户姓名和日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"运送\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_date VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有订单状态是“运送”的订单的客户姓名和日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"运送\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_date VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有订单状态为“取消”的商品总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"取消\""
      }
    ],
    "system": "CREATE TABLE customer_orders (order_id VARCHAR, order_status VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有订单状态为“取消”的商品总数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"取消\""
      }
    ],
    "system": "CREATE TABLE customer_orders (order_id VARCHAR, order_status VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“2018～03-17 07:13:53”之前订购的产品总量。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018～03-17 07:13:53\""
      }
    ],
    "system": "CREATE TABLE customer_orders (order_date INTEGER, order_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“2018～03-17 07:13:53”之前购买的产品的总量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018～03-17 07:13:53\""
      }
    ],
    "system": "CREATE TABLE customer_orders (order_date INTEGER, order_id VARCHAR), CREATE TABLE order_items (order_quantity INTEGER, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁做完最新的订单？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_date VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最近订购的客户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_date VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种产品订购次数最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE order_items (product_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最经常订购的产品是什么？告诉我产品的细节"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE order_items (product_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出总订单数量最大的产品的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE order_items (product_id VARCHAR, order_quantity INTEGER), CREATE TABLE products (product_id VARCHAR, product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "买的最多产品的名字和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.product_details ,  t2.product_id FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY sum(t1.order_quantity) LIMIT 1"
      }
    ],
    "system": "CREATE TABLE order_items (product_id VARCHAR, order_quantity INTEGER), CREATE TABLE products (product_id VARCHAR, product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“云南”“大理”或在“银川”“宁夏”的所有的地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT address_content FROM addresses WHERE city  =  \"大理\" AND state_province_county  =  \"云南\" UNION SELECT address_content FROM addresses WHERE city  =  \"银川\" AND state_province_county  =  \"宁夏\""
      }
    ],
    "system": "CREATE TABLE addresses (address_content VARCHAR, state_province_county VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有在“云南”“大理”或在“银川”“宁夏”的地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT address_content FROM addresses WHERE city  =  \"大理\" AND state_province_county  =  \"云南\" UNION SELECT address_content FROM addresses WHERE city  =  \"银川\" AND state_province_county  =  \"宁夏\""
      }
    ],
    "system": "CREATE TABLE addresses (address_content VARCHAR, state_province_county VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有“现金”支付的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers WHERE payment_method != \"现金\""
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不使用“现金”作为支付方式的客户的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers WHERE payment_method != \"现金\""
      }
    ],
    "system": "CREATE TABLE customers (payment_method VARCHAR, customer_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出从未订购过“拿铁”产品的顾客的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  \"拿铁\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从来没有订购过“拿铁”产品的顾客的姓名是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  \"拿铁\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出从未订购过的客户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从来没有订购过的客户的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出既订购了“拿铁”产品又订购了“美式咖啡”产品的顾客的名字"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  \"拿铁\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  \"美式咖啡\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既订购了“拿铁”产品又订购了“美式咖啡”产品的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  \"拿铁\" INTERSECT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id JOIN products AS t4 ON t3.product_id  =  t4.product_id WHERE t4.product_details  =  \"美式咖啡\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE customer_orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少艺术家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计艺术家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有音乐艺术家的年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT Age FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有音乐艺术家的年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Age FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有艺术家的平均年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Age) FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有艺术家的平均年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Age) FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Age INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "艺术家“徐悲鸿”著名的称号是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Famous_Title FROM artist WHERE Artist  =  \"徐悲鸿\""
      }
    ],
    "system": "CREATE TABLE artist (Artist VARCHAR, Famous_Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回著名艺术家的名字叫做“徐悲鸿”的称号。"
      },
      {
        "from": "assistant",
        "value": "SELECT Famous_Title FROM artist WHERE Artist  =  \"徐悲鸿\""
      }
    ],
    "system": "CREATE TABLE artist (Artist VARCHAR, Famous_Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是不同的著名的发行日期？"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(Famous_Release_date) FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Famous_Release_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给所有艺术家不同的著名的发行日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT distinct(Famous_Release_date) FROM artist"
      }
    ],
    "system": "CREATE TABLE artist (Famous_Release_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回仪式的日期和所有音乐节的结果"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_of_ceremony ,  RESULT FROM music_festival"
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR, Date_of_ceremony VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "仪式的日期和所有音乐节的结果是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_of_ceremony ,  RESULT FROM music_festival"
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR, Date_of_ceremony VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "结果是“已获奖”的音乐节的类别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Category FROM music_festival WHERE RESULT  =  \"已获奖\""
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR, Category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回结果是“已获奖”的音乐节的类别。"
      },
      {
        "from": "assistant",
        "value": "SELECT Category FROM music_festival WHERE RESULT  =  \"已获奖\""
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR, Category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有专辑的最大和最小登顶周是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume"
      }
    ],
    "system": "CREATE TABLE volume (Weeks_on_Top INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出所有专辑的最大和最小登顶周数。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume"
      }
    ],
    "system": "CREATE TABLE volume (Weeks_on_Top INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "音源超过1周的登顶歌曲是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1"
      }
    ],
    "system": "CREATE TABLE volume (Weeks_on_Top INTEGER, Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出超过一周登顶的被收录在专辑的歌曲。"
      },
      {
        "from": "assistant",
        "value": "SELECT Song FROM volume WHERE Weeks_on_Top  >  1"
      }
    ],
    "system": "CREATE TABLE volume (Weeks_on_Top INTEGER, Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请按升序字母顺序列出所有专辑的歌曲。"
      },
      {
        "from": "assistant",
        "value": "SELECT Song FROM volume ORDER BY Song"
      }
    ],
    "system": "CREATE TABLE volume (Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "专辑的歌曲按升序排列是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Song FROM volume ORDER BY Song"
      }
    ],
    "system": "CREATE TABLE volume (Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "专辑有多少不同的艺术家？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
      }
    ],
    "system": "CREATE TABLE volume (Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算拥有专辑的不同艺术家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
      }
    ],
    "system": "CREATE TABLE volume (Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示超过两周登顶的专辑典礼日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2"
      }
    ],
    "system": "CREATE TABLE music_festival (Volume VARCHAR, Date_of_ceremony VARCHAR), CREATE TABLE volume (Weeks_on_Top INTEGER, Volume_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在音乐节上，超过两周登顶的专辑典礼日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Date_of_ceremony FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T2.Weeks_on_Top  >  2"
      }
    ],
    "system": "CREATE TABLE music_festival (Volume VARCHAR, Date_of_ceremony VARCHAR), CREATE TABLE volume (Weeks_on_Top INTEGER, Volume_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示在音乐节上有“提名”的歌曲。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"提名\""
      }
    ],
    "system": "CREATE TABLE music_festival (Volume VARCHAR, Result VARCHAR), CREATE TABLE volume (Volume_ID VARCHAR, Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在音乐节上有“提名”的歌曲有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"提名\""
      }
    ],
    "system": "CREATE TABLE music_festival (Volume VARCHAR, Result VARCHAR), CREATE TABLE volume (Volume_ID VARCHAR, Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与艺术家“张敬轩”相关的专辑的发行日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"张敬轩\""
      }
    ],
    "system": "CREATE TABLE artist (Artist_ID VARCHAR, Artist VARCHAR), CREATE TABLE volume (Artist_ID VARCHAR, Issue_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回由名字是“张敬轩”的艺术家的专辑的发行日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"张敬轩\""
      }
    ],
    "system": "CREATE TABLE artist (Artist_ID VARCHAR, Artist VARCHAR), CREATE TABLE volume (Artist_ID VARCHAR, Issue_Date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "专辑中32岁或以上的艺术家相关的歌曲是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, Artist_ID VARCHAR), CREATE TABLE volume (Artist_ID VARCHAR, Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回专辑中由至少32岁的艺术家创作的歌曲名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  >=  32"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, Artist_ID VARCHAR), CREATE TABLE volume (Artist_ID VARCHAR, Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "25岁或更小的艺术家专辑登顶的平均周数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, Artist_ID VARCHAR), CREATE TABLE volume (Weeks_on_Top INTEGER, Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最大25岁的艺术家专辑登顶的平均周数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, Artist_ID VARCHAR), CREATE TABLE volume (Weeks_on_Top INTEGER, Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与登顶超过2周的专辑有关艺术家的著名作品是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2"
      }
    ],
    "system": "CREATE TABLE artist (Artist_ID VARCHAR, Famous_Title VARCHAR), CREATE TABLE volume (Weeks_on_Top INTEGER, Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回登顶超过2周的专辑有关艺术家的著名作品。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2"
      }
    ],
    "system": "CREATE TABLE artist (Artist_ID VARCHAR, Famous_Title VARCHAR), CREATE TABLE volume (Weeks_on_Top INTEGER, Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请按年龄降序列出艺术家的年龄和著名作品名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC"
      }
    ],
    "system": "CREATE TABLE artist (Age VARCHAR, Famous_Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄顺序排列的每个艺术家的著名作品和年龄是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC"
      }
    ],
    "system": "CREATE TABLE artist (Age VARCHAR, Famous_Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "年龄最大的艺术家的著名发行日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE artist (Age VARCHAR, Famous_Release_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回年龄最大的艺术家的著名发行日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE artist (Age VARCHAR, Famous_Release_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示音乐节的类别和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category"
      }
    ],
    "system": "CREATE TABLE music_festival (Category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个种类音乐节的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Category ,  COUNT(*) FROM music_festival GROUP BY Category"
      }
    ],
    "system": "CREATE TABLE music_festival (Category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "音乐节最常见的结果是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在音乐节最频繁的结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示计数超过1的音乐节的类别。"
      },
      {
        "from": "assistant",
        "value": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE music_festival (Category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "超过1个的音乐节有哪些类别？"
      },
      {
        "from": "assistant",
        "value": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE music_festival (Category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "专辑中登顶最多周数的歌曲是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE volume (Weeks_on_Top VARCHAR, Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回专辑中登顶最多周数的歌曲。"
      },
      {
        "from": "assistant",
        "value": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE volume (Weeks_on_Top VARCHAR, Song VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些没有任何专辑的艺术家的著名作品。"
      },
      {
        "from": "assistant",
        "value": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)"
      }
    ],
    "system": "CREATE TABLE artist (Artist_ID VARCHAR, Famous_Title VARCHAR), CREATE TABLE volume (Artist_ID VARCHAR, Famous_Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有任何专辑的艺术家的著名作品是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Famous_Title FROM artist WHERE Artist_ID NOT IN(SELECT Artist_ID FROM volume)"
      }
    ],
    "system": "CREATE TABLE artist (Artist_ID VARCHAR, Famous_Title VARCHAR), CREATE TABLE volume (Artist_ID VARCHAR, Famous_Title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展现艺术家的著名头衔，两卷的顶部持续超过2周，两卷的顶部持续不到2周。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2"
      }
    ],
    "system": "CREATE TABLE artist (Artist_ID VARCHAR, Famous_Title VARCHAR), CREATE TABLE volume (Weeks_on_Top INTEGER, Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是艺术家的著名头衔，他们不仅花了超过2周的卷顶部，而且花了不到2周的卷顶部？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2 INTERSECT SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  <  2"
      }
    ],
    "system": "CREATE TABLE artist (Artist_ID VARCHAR, Famous_Title VARCHAR), CREATE TABLE volume (Weeks_on_Top INTEGER, Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“金曲”类别和“已获奖”类别音乐节相对应的仪式日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"金曲奖\" AND RESULT  =  \"已获奖\""
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR, Date_of_ceremony VARCHAR, Category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回与“金曲”类别和“已获奖”类别音乐节相对应的仪式日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"金曲奖\" AND RESULT  =  \"已获奖\""
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR, Date_of_ceremony VARCHAR, Category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最短登顶周数专辑的发行日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE volume (Issue_Date VARCHAR, Weeks_on_Top VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最短登顶周数专辑的发行日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE volume (Issue_Date VARCHAR, Weeks_on_Top VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的艺术家有专辑？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
      }
    ],
    "system": "CREATE TABLE volume (Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计有专辑的不同艺术家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT(DISTINCT Artist_ID) FROM volume"
      }
    ],
    "system": "CREATE TABLE volume (Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请显示音乐节的结果和以此计数的音乐节的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按次序递减，有多少个音乐节有结果？"
      },
      {
        "from": "assistant",
        "value": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC"
      }
    ],
    "system": "CREATE TABLE music_festival (RESULT VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "23岁或更年轻的艺术家相关的专辑的发行日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, Artist_ID VARCHAR), CREATE TABLE volume (Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回23岁或更年轻的艺术家专辑的发行日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23"
      }
    ],
    "system": "CREATE TABLE artist (age INTEGER, Artist_ID VARCHAR), CREATE TABLE volume (Artist_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少过山车？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM roller_coaster"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按长度递增的顺序列出过山车的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM roller_coaster ORDER BY LENGTH ASC"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Name VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "过山车的长度和高度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH ,  Height FROM roller_coaster"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Height VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出那些语言不是“德语”的国家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM country WHERE Languages != \"德语\""
      }
    ],
    "system": "CREATE TABLE country (Name VARCHAR, Languages VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示长度超过3300或高度超过100的过山车的状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Status VARCHAR, LENGTH INTEGER, Height INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长过山车的速度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Speed VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "过山车的平均速度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Speed) FROM roller_coaster"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Speed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不同状态和每一个状态过山车的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT Status ,  COUNT(*) FROM roller_coaster GROUP BY Status"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请展示最普遍的过山车的状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT Status FROM roller_coaster GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出两个过山车共享的状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Status VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有最快的速度过山车的公园。"
      },
      {
        "from": "assistant",
        "value": "SELECT Park FROM roller_coaster ORDER BY Speed DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE roller_coaster (Park VARCHAR, Speed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示过山车的名字和他们所在的国家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,  T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID"
      }
    ],
    "system": "CREATE TABLE country (Country_ID VARCHAR, Name VARCHAR), CREATE TABLE roller_coaster (Country_ID VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有超过一辆过山车的国家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1"
      }
    ],
    "system": "CREATE TABLE country (Country_ID VARCHAR, Name VARCHAR), CREATE TABLE roller_coaster (Country_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示具有最高过山车的国家的名称和人口。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE country (Country_ID VARCHAR, population VARCHAR, Name VARCHAR), CREATE TABLE roller_coaster (Country_ID VARCHAR, Height VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示国家名称和每个国家的过山车的平均速度。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name"
      }
    ],
    "system": "CREATE TABLE country (Country_ID VARCHAR, Name VARCHAR), CREATE TABLE roller_coaster (Country_ID VARCHAR, Speed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少国家没有长度超过3000的过山车？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )"
      }
    ],
    "system": "CREATE TABLE country (country_id VARCHAR, LENGTH INTEGER), CREATE TABLE roller_coaster (country_id VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有更快速的过山车的国家名称，区域和人口是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55"
      }
    ],
    "system": "CREATE TABLE country (Country_ID VARCHAR, population VARCHAR, area VARCHAR, name VARCHAR), CREATE TABLE roller_coaster (Country_ID VARCHAR, speed INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同船长等级？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT rank) FROM captain"
      }
    ],
    "system": "CREATE TABLE captain (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算不同船长等级的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT rank) FROM captain"
      }
    ],
    "system": "CREATE TABLE captain (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个级别有多少船长？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  rank FROM captain GROUP BY rank"
      }
    ],
    "system": "CREATE TABLE captain (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算每个等级的船长的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  rank FROM captain GROUP BY rank"
      }
    ],
    "system": "CREATE TABLE captain (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个等级有多少个50岁以下的船长？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank"
      }
    ],
    "system": "CREATE TABLE captain (age INTEGER, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算每个等级中50岁以下的船长人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank"
      }
    ],
    "system": "CREATE TABLE captain (age INTEGER, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把船长的姓名按年龄从老到年轻分类。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM captain ORDER BY age DESC"
      }
    ],
    "system": "CREATE TABLE captain (age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄下降排序的船长的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM captain ORDER BY age DESC"
      }
    ],
    "system": "CREATE TABLE captain (age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有船长的姓名、级别和等级。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  CLASS ,  rank FROM captain"
      }
    ],
    "system": "CREATE TABLE captain (CLASS VARCHAR, name VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有船长的姓名、级别和等级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  CLASS ,  rank FROM captain"
      }
    ],
    "system": "CREATE TABLE captain (CLASS VARCHAR, name VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "队长中哪一个等级最常见？"
      },
      {
        "from": "assistant",
        "value": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE captain (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回船长数量最少的等级。"
      },
      {
        "from": "assistant",
        "value": "SELECT rank FROM captain GROUP BY rank ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE captain (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个班有两个以上的队长？"
      },
      {
        "from": "assistant",
        "value": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE captain (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出拥有两个以上船长的班级。"
      },
      {
        "from": "assistant",
        "value": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE captain (CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出等级是“少尉”或“中卫”的船长的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM captain WHERE rank  =  \"少尉\" OR rank  =  \"中尉\""
      }
    ],
    "system": "CREATE TABLE captain (rank VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "等级是“少尉”或“中卫”的船长名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM captain WHERE rank  =  \"少尉\" OR rank  =  \"中尉\""
      }
    ],
    "system": "CREATE TABLE captain (rank VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同级别的船长平均年龄和最小年龄是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS"
      }
    ],
    "system": "CREATE TABLE captain (age INTEGER, CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个班队长的平均年龄和最小年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS"
      }
    ],
    "system": "CREATE TABLE captain (age INTEGER, CLASS VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“切割机”类和“武装纵帆船”类的船长的级别。"
      },
      {
        "from": "assistant",
        "value": "SELECT rank FROM captain WHERE CLASS  =  \"切割机\" INTERSECT SELECT rank FROM captain WHERE CLASS  =  \"武装纵帆船\""
      }
    ],
    "system": "CREATE TABLE captain (CLASS VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“切割机”和“武装纵帆船”类的船长的级别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rank FROM captain WHERE CLASS  =  \"切割机\" INTERSECT SELECT rank FROM captain WHERE CLASS  =  \"武装纵帆船\""
      }
    ],
    "system": "CREATE TABLE captain (CLASS VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有在“第三级船的线路类”的船长的级别。"
      },
      {
        "from": "assistant",
        "value": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  \"第三级船的线路类\""
      }
    ],
    "system": "CREATE TABLE captain (CLASS VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有在“第三级船的线路类”的船长的级别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  \"第三级船的线路类\""
      }
    ],
    "system": "CREATE TABLE captain (CLASS VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最年轻的船长叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM captain ORDER BY age LIMIT 1"
      }
    ],
    "system": "CREATE TABLE captain (age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最年轻的船长的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM captain ORDER BY age LIMIT 1"
      }
    ],
    "system": "CREATE TABLE captain (age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少艘船？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ship"
      }
    ],
    "system": "CREATE TABLE ship (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算船的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM ship"
      }
    ],
    "system": "CREATE TABLE ship (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最近一年建造的船的名称、类型和标志。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (built_year VARCHAR, name VARCHAR, flag VARCHAR, TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近一年建造的船的名称、类型和标志是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (built_year VARCHAR, name VARCHAR, flag VARCHAR, TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以标志为单位，返回每种标志的船舶数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  flag FROM ship GROUP BY flag"
      }
    ],
    "system": "CREATE TABLE ship (flag VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同的船的标志是真么，每种标志的船有多少艘？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  flag FROM ship GROUP BY flag"
      }
    ],
    "system": "CREATE TABLE ship (flag VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种标志在船上使用最广？"
      },
      {
        "from": "assistant",
        "value": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (flag VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有船只中最常见的标志。"
      },
      {
        "from": "assistant",
        "value": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (flag VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按建造年份和类别的顺序列出所有的船名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM ship ORDER BY built_year ,  CLASS"
      }
    ],
    "system": "CREATE TABLE ship (built_year VARCHAR, CLASS VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按建造年份和类别的顺序列出所有船的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM ship ORDER BY built_year ,  CLASS"
      }
    ],
    "system": "CREATE TABLE ship (built_year VARCHAR, CLASS VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出使用“巴拿马”和“马耳他”标志的船型。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM ship WHERE flag  =  \"巴拿马\" INTERSECT SELECT TYPE FROM ship WHERE flag  =  \"马耳他\""
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR, flag VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既使用“巴拿马”又使用“马耳他”标志的船型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM ship WHERE flag  =  \"巴拿马\" INTERSECT SELECT TYPE FROM ship WHERE flag  =  \"马耳他\""
      }
    ],
    "system": "CREATE TABLE ship (TYPE VARCHAR, flag VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "多数船是在哪一年建造的？"
      },
      {
        "from": "assistant",
        "value": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (built_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "多数船建造的年份是哪一年？"
      },
      {
        "from": "assistant",
        "value": "SELECT built_year FROM ship GROUP BY built_year ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (built_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出拥有不止一个船长的船的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE ship (ship_id VARCHAR, name VARCHAR), CREATE TABLE captain (ship_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有不止一个船长的船的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE ship (ship_id VARCHAR, name VARCHAR), CREATE TABLE captain (ship_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些没有船长的船的名字和级别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)"
      }
    ],
    "system": "CREATE TABLE ship (CLASS VARCHAR, name VARCHAR, ship_id VARCHAR), CREATE TABLE captain (CLASS VARCHAR, name VARCHAR, ship_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回没有船长的船的名字和类别."
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)"
      }
    ],
    "system": "CREATE TABLE ship (CLASS VARCHAR, name VARCHAR, ship_id VARCHAR), CREATE TABLE captain (CLASS VARCHAR, name VARCHAR, ship_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最年轻船长指挥的那艘船的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (ship_id VARCHAR, name VARCHAR), CREATE TABLE captain (ship_id VARCHAR, age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最年轻的船长指挥的那艘船叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1"
      }
    ],
    "system": "CREATE TABLE ship (ship_id VARCHAR, name VARCHAR), CREATE TABLE captain (ship_id VARCHAR, age VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有“中尉”级别的船长指挥的船名和标志。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  \"中尉\")"
      }
    ],
    "system": "CREATE TABLE ship (rank VARCHAR, ship_id VARCHAR, name VARCHAR, flag VARCHAR), CREATE TABLE captain (rank VARCHAR, ship_id VARCHAR, name VARCHAR, flag VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有“中尉”级别的船长指挥的船名和标志是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  \"中尉\")"
      }
    ],
    "system": "CREATE TABLE ship (rank VARCHAR, ship_id VARCHAR, name VARCHAR, flag VARCHAR), CREATE TABLE captain (rank VARCHAR, ship_id VARCHAR, name VARCHAR, flag VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出既由“少尉”级别的船长也由“中尉”级别的船长驾驶的船名。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  \"少尉\" INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  \"中尉\""
      }
    ],
    "system": "CREATE TABLE ship (ship_id VARCHAR, name VARCHAR), CREATE TABLE captain (ship_id VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既由“少尉”级别的船长也由“中尉”级别的船长驾驶的船名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  \"少尉\" INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  \"中尉\""
      }
    ],
    "system": "CREATE TABLE ship (ship_id VARCHAR, name VARCHAR), CREATE TABLE captain (ship_id VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近一年举办活动的城市的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE hosting_city (host_city VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最近几年举办过一些活动的城市。这个城市的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE hosting_city (host_city VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出举办“1994年世界杯资格赛”的城市比赛ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT match_id FROM MATCH WHERE competition = \"1994年世界杯资格赛\""
      }
    ],
    "system": "CREATE TABLE MATCH (match_id VARCHAR, competition VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“1994年世界杯资格赛”的比赛ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT match_id FROM MATCH WHERE competition = \"1994年世界杯资格赛\""
      }
    ],
    "system": "CREATE TABLE MATCH (match_id VARCHAR, competition VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在2010后曾经是主办城市的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR, year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市在2010后成为主办城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR, year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市举办过最多的活动？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出主办最多活动的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY T2.host_city ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南京 (江苏)”主办的“1994年世界杯资格赛”的比赛地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"南京 (江苏)\" AND T3.competition = \"1994年世界杯资格赛\""
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR, match_id VARCHAR), CREATE TABLE MATCH (match_id VARCHAR, competition VARCHAR, venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "寻出由“南京 (江苏)”主办的“1994年世界杯资格赛”的比赛地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"南京 (江苏)\" AND T3.competition = \"1994年世界杯资格赛\""
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR, match_id VARCHAR), CREATE TABLE MATCH (match_id VARCHAR, competition VARCHAR, venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我一月“上海”的天气。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"上海\""
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Jan VARCHAR, city_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一月“上海”城市的气温是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"上海\""
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Jan VARCHAR, city_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“台州 (浙江)”作为主办城市的年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"台州 (浙江)\""
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE hosting_city (year VARCHAR, host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "城市“台州 (浙江)”在哪一年担任主办城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"台州 (浙江)\""
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE hosting_city (year VARCHAR, host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪三个城市地区人口最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE city (regional_population VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "地区人口的三个城市城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE city (regional_population VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市的GDP最低？请列出城市名称及其GDP 。"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (GDP VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "GDP最小的城市是什么？返回城市及其GDP 。"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  GDP FROM city ORDER BY GDP LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (GDP VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "二月哪个城市的气温最高？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (city_id VARCHAR, Feb VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在二月，哪个城市的气温最高？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (city_id VARCHAR, Feb VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一张3月份气温低于7月份或高于10月份的城市名单。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Mar INTEGER, Jul INTEGER, city_id VARCHAR, Oct INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "3月份哪些城市的气温低于7月份或高于10月份？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Mar INTEGER, Jul INTEGER, city_id VARCHAR, Oct INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一张3月份气温低于7月份且也曾作为主办城市的城市名单。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Mar INTEGER, Jul INTEGER, city_id VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市3月份的温度比7月份低，并且曾经是主办城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Mar INTEGER, Jul INTEGER, city_id VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一张3月份气温低于12月份并且从未成为主办城市的城市名单。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Mar INTEGER, city_id VARCHAR, Dec INTEGER), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市3月份的温度比12月份低，且从未作为主办城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Mar INTEGER, city_id VARCHAR, Dec INTEGER), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一张2月份气温高于6月份的城市名单或曾经是主办城市的城市名单。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Feb INTEGER, city_id VARCHAR, Jun INTEGER), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市2月份的温度比6月份高，或者曾经是主办城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR, city VARCHAR), CREATE TABLE temperature (Feb INTEGER, city_id VARCHAR, Jun INTEGER), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请给我一份地区人口超过10000000的城市名单。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM city WHERE regional_population  >  10000000"
      }
    ],
    "system": "CREATE TABLE city (city VARCHAR, regional_population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市的人口超过10000000？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM city WHERE regional_population  >  10000000"
      }
    ],
    "system": "CREATE TABLE city (city VARCHAR, regional_population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请给我一张地区人口超过80万或低于50万的城市名单。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000"
      }
    ],
    "system": "CREATE TABLE city (city VARCHAR, regional_population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市的人口超过8000000或低于5000000？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000"
      }
    ],
    "system": "CREATE TABLE city (city VARCHAR, regional_population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在不同的比赛中比赛的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition"
      }
    ],
    "system": "CREATE TABLE MATCH (Competition VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一场比赛，计算比赛的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition"
      }
    ],
    "system": "CREATE TABLE MATCH (Competition VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从最近的比赛开始，按照比赛日期的顺序列出所有比赛的场地。"
      },
      {
        "from": "assistant",
        "value": "SELECT venue FROM MATCH ORDER BY date DESC"
      }
    ],
    "system": "CREATE TABLE MATCH (date VARCHAR, venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有比赛的场地是什么？按匹配日期的降序对它们排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT venue FROM MATCH ORDER BY date DESC"
      }
    ],
    "system": "CREATE TABLE MATCH (date VARCHAR, venue VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的城市的GDP是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (Regional_Population VARCHAR, gdp VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出人口最多的城市的GDP。"
      },
      {
        "from": "assistant",
        "value": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE city (Regional_Population VARCHAR, gdp VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不止一次作为主办城市的GDP和人口数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些城市曾经不止一次作为主办城市？返回其GDP和人口。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE city (city_id VARCHAR), CREATE TABLE hosting_city (host_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按姓氏的字母顺序列出每个人的名字、中间名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name"
      }
    ],
    "system": "CREATE TABLE individuals (individual_middle_name VARCHAR, individual_first_name VARCHAR, individual_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按姓氏排序的所有人的名字、中间名和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name"
      }
    ],
    "system": "CREATE TABLE individuals (individual_middle_name VARCHAR, individual_first_name VARCHAR, individual_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有类型的表单。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT form_type_code FROM forms"
      }
    ],
    "system": "CREATE TABLE forms (form_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有什么不同形式的表单？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT form_type_code FROM forms"
      }
    ],
    "system": "CREATE TABLE forms (form_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最流行的组织形式的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE forms (form_name VARCHAR, form_id VARCHAR), CREATE TABLE party_forms (form_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最常见组织形式的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE forms (form_name VARCHAR, form_id VARCHAR), CREATE TABLE party_forms (form_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "通过电子邮件“enrico09@example.com”查找对方的支付方式和组织电话。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\""
      }
    ],
    "system": "CREATE TABLE parties (party_email VARCHAR, payment_method_code VARCHAR, party_phone VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电子邮件“enrico09@example.com”的支付方式码和组织电话是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\""
      }
    ],
    "system": "CREATE TABLE parties (party_email VARCHAR, payment_method_code VARCHAR, party_phone VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找处最流行的组织形式的组织电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE parties (party_email VARCHAR, party_id VARCHAR), CREATE TABLE party_forms (form_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用最常用的组织形式的聚会电子邮件是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)"
      }
    ],
    "system": "CREATE TABLE parties (party_email VARCHAR, party_id VARCHAR), CREATE TABLE party_forms (form_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出根据建立日期顺序的所有组织名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT organization_name FROM organizations ORDER BY date_formed ASC"
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR, date_formed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据建立日期升序的所有组织名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT organization_name FROM organizations ORDER BY date_formed ASC"
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR, date_formed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最年轻的组织的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR, date_formed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近成立的组织的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR, date_formed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“民进党”组织最新联系人的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"民进党\" ORDER BY t2.date_contact_to DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR, organization_id VARCHAR), CREATE TABLE organization_contact_individuals (organization_id VARCHAR, individual_id VARCHAR, date_contact_to VARCHAR), CREATE TABLE individuals (individual_id VARCHAR, individual_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“民进党”组织最新联系人的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"民进党\" ORDER BY t2.date_contact_to DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR, organization_id VARCHAR), CREATE TABLE organization_contact_individuals (organization_id VARCHAR, individual_id VARCHAR, date_contact_to VARCHAR), CREATE TABLE individuals (individual_id VARCHAR, individual_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出该组织中具有最高的UK Vat号码的第一联系人的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE organizations (uk_vat_number INTEGER), CREATE TABLE organization_contact_individuals (organization_id VARCHAR, individual_id VARCHAR, date_contact_to VARCHAR), CREATE TABLE individuals (individual_id VARCHAR, individual_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "该组织中具有最高的UK Vat号码的第一联系人的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.uk_vat_number  =  (SELECT max(uk_vat_number) FROM organizations) ORDER BY t2.date_contact_to ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE organizations (uk_vat_number INTEGER), CREATE TABLE organization_contact_individuals (organization_id VARCHAR, individual_id VARCHAR, date_contact_to VARCHAR), CREATE TABLE individuals (individual_id VARCHAR, individual_last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少服务？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM services"
      }
    ],
    "system": "CREATE TABLE services (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计服务的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM services"
      }
    ],
    "system": "CREATE TABLE services (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出从未使用过的服务的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id"
      }
    ],
    "system": "CREATE TABLE services (service_name VARCHAR, service_id VARCHAR), CREATE TABLE party_services (service_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些从未使用过的服务的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id"
      }
    ],
    "system": "CREATE TABLE services (service_name VARCHAR, service_id VARCHAR), CREATE TABLE party_services (service_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有城市和省的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses"
      }
    ],
    "system": "CREATE TABLE addresses (state_province_county VARCHAR, town_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有的城市和省的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses"
      }
    ],
    "system": "CREATE TABLE addresses (state_province_county VARCHAR, town_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“河北”省有多少个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"河北\""
      }
    ],
    "system": "CREATE TABLE addresses (state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计“河北”省的城市数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM addresses WHERE state_province_county  =  \"河北\""
      }
    ],
    "system": "CREATE TABLE addresses (state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出超过3方使用的支付方法代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE parties (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "超过3方使用的支付方法代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE parties (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找其名称包含“组织”的组织名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%组织%\""
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含“组织”一词的组织名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%组织%\""
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "组织使用了多少种不同的支付方式？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT payment_method_code) FROM parties"
      }
    ],
    "system": "CREATE TABLE parties (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算组织使用的不同支付方法代码的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT payment_method_code) FROM parties"
      }
    ],
    "system": "CREATE TABLE parties (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用服务次数最多的组织的电子邮件是哪一个？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE parties (party_email VARCHAR, party_id VARCHAR), CREATE TABLE party_services (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回使用服务次数最多的组织的电子邮件。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE parties (party_email VARCHAR, party_id VARCHAR), CREATE TABLE party_services (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "地址“石龙山街18号”可能在哪个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%石龙山街18号%\""
      }
    ],
    "system": "CREATE TABLE addresses (state_province_county VARCHAR, line_1_number_building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出地址“石龙山街18号”的所在省。"
      },
      {
        "from": "assistant",
        "value": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%石龙山街18号%\""
      }
    ],
    "system": "CREATE TABLE addresses (state_province_county VARCHAR, line_1_number_building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "联系人数最多的组织的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR, organization_id VARCHAR), CREATE TABLE organization_contact_individuals (organization_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回联系人数最多的组织的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.organization_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id GROUP BY t1.organization_name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE organizations (organization_name VARCHAR, organization_id VARCHAR), CREATE TABLE organization_contact_individuals (organization_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出已经与组织进行个人联系的联系人的姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id"
      }
    ],
    "system": "CREATE TABLE individuals (individual_id VARCHAR, individual_last_name VARCHAR), CREATE TABLE organization_contact_individuals (individual_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "进行个人联系的联系人的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.individual_last_name FROM individuals AS t1 JOIN organization_contact_individuals AS t2 ON t1.individual_id  =  t2.individual_id"
      }
    ],
    "system": "CREATE TABLE individuals (individual_id VARCHAR, individual_last_name VARCHAR), CREATE TABLE organization_contact_individuals (individual_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那儿有多少司机？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM driver"
      }
    ],
    "system": "CREATE TABLE driver (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有司机的姓名、家乡和年龄。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  home_city ,  age FROM driver"
      }
    ],
    "system": "CREATE TABLE driver (age VARCHAR, name VARCHAR, home_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示组织和每个组织的司机数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT party ,  count(*) FROM driver GROUP BY party"
      }
    ],
    "system": "CREATE TABLE driver (party VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年龄递减顺序显示驾驶员姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM driver ORDER BY age DESC"
      }
    ],
    "system": "CREATE TABLE driver (age VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有不同的家乡城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT home_city FROM driver"
      }
    ],
    "system": "CREATE TABLE driver (home_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有最多数量司机的家乡城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE driver (home_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示40岁以上的来自“苏州”的司机的组织。"
      },
      {
        "from": "assistant",
        "value": "SELECT party FROM driver WHERE home_city  =  \"苏州\" AND age  >  40"
      }
    ],
    "system": "CREATE TABLE driver (age INTEGER, party VARCHAR, home_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少有两个40岁以上的司机的家乡城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE driver (age INTEGER, home_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示除了超过40岁以上的司机的所有家乡城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age  >  40"
      }
    ],
    "system": "CREATE TABLE driver (age INTEGER, home_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有校车的司机名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)"
      }
    ],
    "system": "CREATE TABLE driver (name VARCHAR, driver_id VARCHAR), CREATE TABLE school_bus (name VARCHAR, driver_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示有两所学校的学校类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE FROM school GROUP BY TYPE HAVING count(*)  =  2"
      }
    ],
    "system": "CREATE TABLE school (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有校车的学校名称和司机姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id"
      }
    ],
    "system": "CREATE TABLE school_bus (school_id VARCHAR, driver_id VARCHAR), CREATE TABLE school (school VARCHAR, school_id VARCHAR), CREATE TABLE driver (name VARCHAR, driver_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在校车上工作的最大、最小和平均年是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(years_working) ,  min(years_working) ,  avg(years_working) FROM school_bus"
      }
    ],
    "system": "CREATE TABLE school_bus (years_working INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有校车的学校名称和学校类型。"
      },
      {
        "from": "assistant",
        "value": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)"
      }
    ],
    "system": "CREATE TABLE school (school VARCHAR, school_id VARCHAR, TYPE VARCHAR), CREATE TABLE school_bus (school VARCHAR, school_id VARCHAR, TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示学校的类型和每种类型的公共汽车数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.type ,  count(*) FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id GROUP BY T2.type"
      }
    ],
    "system": "CREATE TABLE school_bus (school_id VARCHAR), CREATE TABLE school (type VARCHAR, school_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少司机来自“苏州”或年龄是40岁以下？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM driver WHERE home_city  =  \"苏州\" OR age  <  40"
      }
    ],
    "system": "CREATE TABLE driver (age INTEGER, home_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“苏州”且40岁以下司机的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM driver WHERE home_city  =  \"苏州\" AND age  <  40"
      }
    ],
    "system": "CREATE TABLE driver (age INTEGER, name VARCHAR, home_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出驾驶公共汽车的工作历史最悠久的司机的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE driver (name VARCHAR, driver_id VARCHAR), CREATE TABLE school_bus (driver_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少航班的速度大于200？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM flight WHERE velocity  >  200"
      }
    ],
    "system": "CREATE TABLE flight (velocity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有按高度排序的航班的车辆航班号、日期和飞行员。"
      },
      {
        "from": "assistant",
        "value": "SELECT vehicle_flight_number ,  date ,  pilot FROM flight ORDER BY altitude ASC"
      }
    ],
    "system": "CREATE TABLE flight (altitude VARCHAR, pilot VARCHAR, date VARCHAR, vehicle_flight_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按名称的字母顺序列出ID、国家、城市和机场的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT id ,  country ,  city ,  name FROM airport ORDER BY name"
      }
    ],
    "system": "CREATE TABLE airport (country VARCHAR, city VARCHAR, id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大的集团股权的公司是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(group_equity_shareholding) FROM operate_company"
      }
    ],
    "system": "CREATE TABLE operate_company (group_equity_shareholding INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "叫“刘明”的飞行员的速度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(velocity) FROM flight WHERE pilot  =  \"刘明\""
      }
    ],
    "system": "CREATE TABLE flight (pilot VARCHAR, velocity INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "曾经经营过航班的公司的名称和类型是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id"
      }
    ],
    "system": "CREATE TABLE operate_company (type VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE flight (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不在“冰岛”这个国家的机场名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM airport WHERE country != \"冰岛\""
      }
    ],
    "system": "CREATE TABLE airport (country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "运营速度小于200的公司有哪些独特的类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200"
      }
    ],
    "system": "CREATE TABLE operate_company (type VARCHAR, id VARCHAR), CREATE TABLE flight (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "经营多个航班的公司的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE operate_company (name VARCHAR, id VARCHAR), CREATE TABLE flight (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "航班最多的机场的ID、名称和IATA代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airport (name VARCHAR, id VARCHAR, IATA VARCHAR), CREATE TABLE flight (airport_id VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“中国”或“宝安机场”飞行的不同的飞行员的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  \"中国\" OR T1.name  =  \"宝安机场\""
      }
    ],
    "system": "CREATE TABLE airport (country VARCHAR, name VARCHAR, id VARCHAR), CREATE TABLE flight (airport_id VARCHAR, pilot VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是最常见的公司类型，每种有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE operate_company (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少机场没有飞行员“杨雄”驾驶的飞机？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  \"杨雄\" );"
      }
    ],
    "system": "CREATE TABLE airport (airport_id VARCHAR, pilot VARCHAR, id VARCHAR), CREATE TABLE flight (airport_id VARCHAR, pilot VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出主要提供“货物”服务的公司以及从事“餐饮服务”活动的公司的飞行员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  \"货物\" INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  \"餐饮服务\""
      }
    ],
    "system": "CREATE TABLE operate_company (principal_activities VARCHAR, id VARCHAR), CREATE TABLE flight (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些机场名称包含“国际”一词？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM airport WHERE name LIKE \"%国际%\""
      }
    ],
    "system": "CREATE TABLE airport (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个机场有多少家公司经营航空公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id"
      }
    ],
    "system": "CREATE TABLE operate_company (id VARCHAR), CREATE TABLE flight (Id VARCHAR), CREATE TABLE airport (id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个国家有多少个机场？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  country FROM airport GROUP BY country"
      }
    ],
    "system": "CREATE TABLE airport (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家拥有超过2个机场？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE airport (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个飞行员负责最多的航班？"
      },
      {
        "from": "assistant",
        "value": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE flight (pilot VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少个账户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算帐号的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有帐户ID和帐户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id ,  account_details FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (account_details VARCHAR, account_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有账户的ID和详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT account_id ,  account_details FROM Accounts"
      }
    ],
    "system": "CREATE TABLE Accounts (account_details VARCHAR, account_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少结算单？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Statements"
      }
    ],
    "system": "CREATE TABLE Statements (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算结算单的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Statements"
      }
    ],
    "system": "CREATE TABLE Statements (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有的结算单ID和结算单细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT STATEMENT_ID ,  statement_details FROM Statements"
      }
    ],
    "system": "CREATE TABLE Statements (STATEMENT_ID VARCHAR, statement_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有结算单的ID和细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT STATEMENT_ID ,  statement_details FROM Statements"
      }
    ],
    "system": "CREATE TABLE Statements (STATEMENT_ID VARCHAR, statement_details VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示结算单ID、结算单详细信息、帐户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id"
      }
    ],
    "system": "CREATE TABLE Accounts (account_details VARCHAR, statement_id VARCHAR), CREATE TABLE Statements (statement_details VARCHAR, statement_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于所有帐户的结算单ID、结算单详细信息、帐户详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.statement_id ,  T2.statement_details ,  T1.account_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id"
      }
    ],
    "system": "CREATE TABLE Accounts (account_details VARCHAR, statement_id VARCHAR), CREATE TABLE Statements (statement_details VARCHAR, statement_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有结算单的ID和每个结算单的帐户数。"
      },
      {
        "from": "assistant",
        "value": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID"
      }
    ],
    "system": "CREATE TABLE Accounts (STATEMENT_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "帐户上有哪些不同的结算单的ID和每个结算单的帐户数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT STATEMENT_ID ,  count(*) FROM Accounts GROUP BY STATEMENT_ID"
      }
    ],
    "system": "CREATE TABLE Accounts (STATEMENT_ID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示最多数量的帐户的结算单 ID 和结算单的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Accounts (statement_id VARCHAR), CREATE TABLE Statements (statement_details VARCHAR, statement_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多数量的帐户的结算单 ID 和结算单的详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Accounts (statement_id VARCHAR), CREATE TABLE Statements (statement_details VARCHAR, statement_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示文件的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Documents"
      }
    ],
    "system": "CREATE TABLE Documents (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算文件数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Documents"
      }
    ],
    "system": "CREATE TABLE Documents (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出具有名称是“齐军的简历”或名称是“御书”的文档的文档类型代码、文档名称和文档描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  \"齐军的简历\" OR document_name  =  \"御书\""
      }
    ],
    "system": "CREATE TABLE Documents (document_name VARCHAR, document_description VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名称是“齐军的简历”或名称是“御书”的文档的文档类型代码、文档名称和文档描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  \"齐军的简历\" OR document_name  =  \"御书\""
      }
    ],
    "system": "CREATE TABLE Documents (document_name VARCHAR, document_description VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有文档的ID和名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id ,  document_name FROM Documents"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个文件的ID和名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id ,  document_name FROM Documents"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找文档类型代码是“BK”的所有文档的名称和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\""
      }
    ],
    "system": "CREATE TABLE Documents (document_name VARCHAR, document_type_code VARCHAR, document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档类型代码是“BK”的所有文档的名称和ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name ,  document_id FROM Documents WHERE document_type_code  =  \"BK\""
      }
    ],
    "system": "CREATE TABLE Documents (document_name VARCHAR, document_type_code VARCHAR, document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个产品ID，文档类型代码为“BK”的有多少文档？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算对于每个产品ID，文档类型代码为“BK”的文档的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  project_id FROM Documents WHERE document_type_code  =  \"BK\" GROUP BY project_id"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示包含“图数据库项目”的细节的所有在项目文件的文件名称和文件日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  \"图数据库项目\""
      }
    ],
    "system": "CREATE TABLE Documents (project_id VARCHAR), CREATE TABLE projects (project_details VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含“图数据库项目”的细节的所有在项目文件的文件名称和文件日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  \"图数据库项目\""
      }
    ],
    "system": "CREATE TABLE Documents (project_id VARCHAR), CREATE TABLE projects (project_details VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示项目ID和每个项目中的文档数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id"
      }
    ],
    "system": "CREATE TABLE Documents (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个项目ID对应多少文件？"
      },
      {
        "from": "assistant",
        "value": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id"
      }
    ],
    "system": "CREATE TABLE Documents (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最少文档的项目的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Documents (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有最少文档的项目ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Documents (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示至少2个文档的项目ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Documents (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有2个或多个相应文档的项目ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Documents (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出文档类型代码和每个代码中的文档数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种类型有多少份文件？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code ,  count(*) FROM Documents GROUP BY document_type_code"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最多数量文件的文档类型代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回最常见的文档类型的代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示少于3个文档的文档类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "少于3个文档的文档类型代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code FROM Documents GROUP BY document_type_code HAVING count(*)  <  3"
      }
    ],
    "system": "CREATE TABLE Documents (document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示文档细节和有“个人计划”细节描述的对应的文档名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  \"个人计划\""
      }
    ],
    "system": "CREATE TABLE Statements (statement_details VARCHAR, statement_id VARCHAR), CREATE TABLE Documents (document_name VARCHAR, document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "详细信息是“私有项目”的语句的细节是什么，相应的文档的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  \"私有项目\""
      }
    ],
    "system": "CREATE TABLE Statements (statement_details VARCHAR, statement_id VARCHAR), CREATE TABLE Documents (document_name VARCHAR, document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有文档类型代码、文档类型名称、文档类型描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types"
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_description VARCHAR, document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同文档类型的代码、名称和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types"
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_description VARCHAR, document_type_code VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "文档类型命名为“电影”的文档类型描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"电影\""
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_description VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回文档类型名称是“电影”的描述。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_type_description FROM Ref_document_types WHERE document_type_name  =  \"电影\""
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_description VARCHAR, document_type_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个文档的类型名称、类型说明和创建日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code"
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_description VARCHAR, document_type_code VARCHAR, document_type_name VARCHAR), CREATE TABLE Documents (document_type_code VARCHAR, Document_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每个文档的类型名称、类型说明和创建日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.document_type_name ,  T1.document_type_description ,  T2.Document_date FROM Ref_document_types AS T1 JOIN Documents AS T2 ON T1.document_type_code  =  T2.document_type_code"
      }
    ],
    "system": "CREATE TABLE Ref_document_types (document_type_description VARCHAR, document_type_code VARCHAR, document_type_name VARCHAR), CREATE TABLE Documents (document_type_code VARCHAR, Document_date VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示项目的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Projects"
      }
    ],
    "system": "CREATE TABLE Projects (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少项目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Projects"
      }
    ],
    "system": "CREATE TABLE Projects (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有项目的ID和详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT project_id ,  project_details FROM Projects"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个项目的ID和细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT project_id ,  project_details FROM Projects"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "项目至少有两个文档的项目ID和详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Documents (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回至少有两个文档的项目ID和详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2"
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Documents (project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含文件“御书”的项目的细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"御书\""
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Documents (document_name VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出包含文件名是“御书”的项目细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"御书\""
      }
    ],
    "system": "CREATE TABLE Projects (project_details VARCHAR, project_id VARCHAR), CREATE TABLE Documents (document_name VARCHAR, project_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少种预算类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_budget_codes"
      }
    ],
    "system": "CREATE TABLE Ref_budget_codes (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算预算代码的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Ref_budget_codes"
      }
    ],
    "system": "CREATE TABLE Ref_budget_codes (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有预算类型代码和说明。"
      },
      {
        "from": "assistant",
        "value": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes"
      }
    ],
    "system": "CREATE TABLE Ref_budget_codes (budget_type_description VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个预算类型的类型代码和描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT budget_type_code ,  budget_type_description FROM Ref_budget_codes"
      }
    ],
    "system": "CREATE TABLE Ref_budget_codes (budget_type_description VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "代码是“org”的预算类型描述是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"org\""
      }
    ],
    "system": "CREATE TABLE Ref_budget_codes (budget_type_description VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有代码“org”的预算类型的说明。"
      },
      {
        "from": "assistant",
        "value": "SELECT budget_type_description FROM Ref_budget_codes WHERE budget_type_code  =  \"org\""
      }
    ],
    "system": "CREATE TABLE Ref_budget_codes (budget_type_description VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少文件有费用？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Documents_with_expenses"
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算有费用的文件数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Documents_with_expenses"
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "预算类型代码是“SF”的文档ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  \"SF\""
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (document_id VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出预算类型代码是“SF”的文档ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  \"SF\""
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (document_id VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示预算类型代码和描述以及相应的文档ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code"
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (document_id VARCHAR, budget_type_code VARCHAR), CREATE TABLE Ref_budget_codes (budget_type_description VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回带有费用的文件的预算类型代码、预算类型说明和文件ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.budget_type_code ,  T2.budget_type_description ,  T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_budget_codes AS T2 ON T1.budget_type_code  =  T2.budget_type_code"
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (document_id VARCHAR, budget_type_code VARCHAR), CREATE TABLE Ref_budget_codes (budget_type_description VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示预算描述类型为“政府”的所有文件的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"政府\""
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (document_id VARCHAR, Budget_Type_code VARCHAR), CREATE TABLE Ref_Budget_Codes (budget_type_Description VARCHAR, Budget_Type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出预算描述类型为“政府”的所有文件的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"政府\""
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (document_id VARCHAR, Budget_Type_code VARCHAR), CREATE TABLE Ref_Budget_Codes (budget_type_Description VARCHAR, Budget_Type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每种预算类型的预算类型编码和文件数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code"
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是不同的预算类型代码，以及每种有多少文件？"
      },
      {
        "from": "assistant",
        "value": "SELECT budget_type_code ,  count(*) FROM Documents_with_expenses GROUP BY budget_type_code"
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有最多文件的预算类型代码是什么。"
      },
      {
        "from": "assistant",
        "value": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出具有费用的文档中最常见的预算类型代码。"
      },
      {
        "from": "assistant",
        "value": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Documents_with_expenses (budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有费用预算的文件的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR), CREATE TABLE Documents_with_expenses (document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回没有费用的文档的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id FROM Documents EXCEPT SELECT document_id FROM Documents_with_expenses"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR), CREATE TABLE Documents_with_expenses (document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在没有费用预算的情况下类型是“CV”中的所有文档ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_type_code VARCHAR), CREATE TABLE Documents_with_expenses (document_id VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在没有费用预算的情况下类型为“CV”中的所有文档ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT document_id FROM Documents WHERE document_type_code  =  \"CV\" EXCEPT SELECT document_id FROM Documents_with_expenses"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_type_code VARCHAR), CREATE TABLE Documents_with_expenses (document_id VARCHAR, document_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "带有文字“年”的任何费用预算的文件的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE \"%年%\""
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_name VARCHAR), CREATE TABLE Documents_with_expenses (document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出带有文字“年”的任何费用预算的文件的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE \"%年%\""
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_name VARCHAR), CREATE TABLE Documents_with_expenses (document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少文件没有任何费用？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR), CREATE TABLE Documents_with_expenses (document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算没有费用的文件的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )"
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR), CREATE TABLE Documents_with_expenses (document_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "既有“GV”型又有“SF”型费用的文档日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  \"GV\" INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  \"SF\""
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_date VARCHAR), CREATE TABLE Documents_with_Expenses (document_id VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出预算类型代码既是“GV”又是“SF”的文档的创建日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  \"GV\" INTERSECT SELECT T1.document_date FROM Documents AS T1 JOIN Documents_with_Expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T2.budget_type_code  =  \"SF\""
      }
    ],
    "system": "CREATE TABLE Documents (document_id VARCHAR, document_date VARCHAR), CREATE TABLE Documents_with_Expenses (document_id VARCHAR, budget_type_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是具有最大值或包含字符“5”的帐户详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\""
      }
    ],
    "system": "CREATE TABLE Accounts (Account_details INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回具有最大值或包含字符“5”的帐户详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\""
      }
    ],
    "system": "CREATE TABLE Accounts (Account_details INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出科学家总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM scientists"
      }
    ],
    "system": "CREATE TABLE scientists (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那边有多少科学家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM scientists"
      }
    ],
    "system": "CREATE TABLE scientists (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有项目的总时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(hours) FROM projects"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有项目的总时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(hours) FROM projects"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少不同的科学家被指派给任何项目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT scientist) FROM assignedto"
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计分配给任何项目的不同科学家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT scientist) FROM assignedto"
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找不同项目的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT name) FROM projects"
      }
    ],
    "system": "CREATE TABLE projects (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个不同的项目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT name) FROM projects"
      }
    ],
    "system": "CREATE TABLE projects (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有项目的平均小时数。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(hours) FROM projects"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有项目的平均小时数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(hours) FROM projects"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出项目持续时间最长的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE projects (name VARCHAR, hours VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长的项目名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE projects (name VARCHAR, hours VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出比所有项目的平均工作时间更长的所有项目的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比所有项目的平均工作时间更长的项目的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出拥有最多科学家的项目的名称和时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE projects (name VARCHAR, hours VARCHAR, code VARCHAR), CREATE TABLE assignedto (project VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多科学家的项目的名称和时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.hours FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T2.project ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE projects (name VARCHAR, hours VARCHAR, code VARCHAR), CREATE TABLE assignedto (project VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出被指派的科学家中名字包含“曹”的项目的名字."
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE \"%曹%\""
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (name VARCHAR, code VARCHAR), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被指派的科学家中名字包含“曹”的项目的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE \"%曹%\""
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (name VARCHAR, code VARCHAR), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找科学家“李文军”或“张智名”被分配到的项目的总时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  \"李文军\" OR T3.name  =  \"张智名\""
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (hours INTEGER, code VARCHAR), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以科学家“李文军”或“张智名”被分配到的项目的时间合集是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  \"李文军\" OR T3.name  =  \"张智名\""
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (hours INTEGER, code VARCHAR), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找需要100到300小时工作的项目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "需要100到300小时的项目名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM projects WHERE hours BETWEEN 100 AND 300"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找一个同时从事名为“东电西输”的项目和一个名为“南水北调”的项目的科学家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  \"东电西输\" INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  \"南水北调\""
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (name VARCHAR, code VARCHAR), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从事“东电西输”和“南水北调”项目的科学家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  \"东电西输\" INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  \"南水北调\""
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (name VARCHAR, code VARCHAR), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有按字母顺序排序的科学家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM scientists ORDER BY name"
      }
    ],
    "system": "CREATE TABLE scientists (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的所有的科学家名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM scientists ORDER BY name"
      }
    ],
    "system": "CREATE TABLE scientists (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个项目名称涉及的科学家数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE projects (name VARCHAR, code VARCHAR), CREATE TABLE assignedto (project VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有项目的名称是什么，每个项目分配了多少科学家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE projects (name VARCHAR, code VARCHAR), CREATE TABLE assignedto (project VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出需要300小时以上的项目的科学家人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER, name VARCHAR, code VARCHAR), CREATE TABLE assignedto (project VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "需要300小时以上的项目的名称是什么？每个项目分配多少科学家？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE projects (hours INTEGER, name VARCHAR, code VARCHAR), CREATE TABLE assignedto (project VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个科学家正在从事的项目数量和科学家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE scientists (name VARCHAR, ssn VARCHAR), CREATE TABLE assignedto (scientist VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这些科学家的名字是什么，他们各自有多少个项目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE scientists (name VARCHAR, ssn VARCHAR), CREATE TABLE assignedto (scientist VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些被分配到最长时间项目的科学家的名字和SSN。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (hours INTEGER), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR, ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从事项目的时间最长的SSN和科学家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.ssn ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (hours INTEGER), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR, ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出被指派给任何项目的科学家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn"
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR), CREATE TABLE scientists (name VARCHAR, ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被指派给任何项目的科学家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn"
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR), CREATE TABLE scientists (name VARCHAR, ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "选择尚未被指派的项目名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)"
      }
    ],
    "system": "CREATE TABLE Projects (Code VARCHAR, Name VARCHAR, Project VARCHAR), CREATE TABLE AssignedTo (Code VARCHAR, Name VARCHAR, Project VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有被指派的项目名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)"
      }
    ],
    "system": "CREATE TABLE Projects (Code VARCHAR, Name VARCHAR, Project VARCHAR), CREATE TABLE AssignedTo (Code VARCHAR, Name VARCHAR, Project VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有被指派给任何项目的科学家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"
      }
    ],
    "system": "CREATE TABLE scientists (Name VARCHAR, scientist VARCHAR, ssn VARCHAR), CREATE TABLE AssignedTo (Name VARCHAR, scientist VARCHAR, ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有被指定项目的科学家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"
      }
    ],
    "system": "CREATE TABLE scientists (Name VARCHAR, scientist VARCHAR, ssn VARCHAR), CREATE TABLE AssignedTo (Name VARCHAR, scientist VARCHAR, ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出没有分配给任何项目的科学家的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"
      }
    ],
    "system": "CREATE TABLE scientists (scientist VARCHAR, ssn VARCHAR), CREATE TABLE AssignedTo (scientist VARCHAR, ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少科学家没有分配给他们的项目？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)"
      }
    ],
    "system": "CREATE TABLE scientists (scientist VARCHAR, ssn VARCHAR), CREATE TABLE AssignedTo (scientist VARCHAR, ssn VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些没有从事最长工作时间项目的科学家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"
      }
    ],
    "system": "CREATE TABLE scientists (SSN VARCHAR, name VARCHAR), CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (hours INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有从事最长工作时间项目的科学家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)"
      }
    ],
    "system": "CREATE TABLE scientists (SSN VARCHAR, name VARCHAR), CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (hours INTEGER, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照项目名称的字母顺序而后按科学家姓名排序，列出所有科学家的姓名，他们的项目名称，以及科学家在每个项目上工作的时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name"
      }
    ],
    "system": "CREATE TABLE Scientists (SSN VARCHAR, Name VARCHAR), CREATE TABLE AssignedTo (Project VARCHAR, Scientist VARCHAR), CREATE TABLE Projects (Code VARCHAR, Name VARCHAR, Hours VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照项目名称的字母顺序而后按科学家姓名排序，所有科学家的姓名，他们的项目名称，以及科学家在每个项目上工作的时间是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name"
      }
    ],
    "system": "CREATE TABLE Scientists (SSN VARCHAR, Name VARCHAR), CREATE TABLE AssignedTo (Project VARCHAR, Scientist VARCHAR), CREATE TABLE Projects (Code VARCHAR, Name VARCHAR, Hours VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出需要最少时间完成的项目的名称以及从事该项目的科学家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)"
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (hours INTEGER), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "需要最少的小时数的项目名称，以及被指派给它的科学家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)"
      }
    ],
    "system": "CREATE TABLE assignedto (scientist VARCHAR, project VARCHAR), CREATE TABLE projects (hours INTEGER), CREATE TABLE scientists (SSN VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高等级葡萄酒的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, Score VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出最高得分的葡萄酒的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE ORDER BY Score LIMIT 1"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, Score VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个酒厂的葡萄酒得分最高？"
      },
      {
        "from": "assistant",
        "value": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR, SCORE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高的葡萄酒是在什么酿造厂被制造的？"
      },
      {
        "from": "assistant",
        "value": "SELECT Winery FROM WINE ORDER BY SCORE LIMIT 1"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR, SCORE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“2008”年所有葡萄酒的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“2008”年所有葡萄酒的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE WHERE YEAR  =  \"2008\""
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有葡萄酒的葡萄和葡萄产地。"
      },
      {
        "from": "assistant",
        "value": "SELECT Grape ,  Appelation FROM WINE"
      }
    ],
    "system": "CREATE TABLE WINE (Appelation VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种葡萄酒的葡萄和葡萄产地是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Grape ,  Appelation FROM WINE"
      }
    ],
    "system": "CREATE TABLE WINE (Appelation VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有葡萄酒的名称和得分。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Score FROM WINE"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, Score VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有葡萄酒的名称和得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name ,  Score FROM WINE"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, Score VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有的葡萄产地的地区和县。"
      },
      {
        "from": "assistant",
        "value": "SELECT Area ,  County FROM APPELLATIONS"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有应用的地区和县是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Area ,  County FROM APPELLATIONS"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年前生产的葡萄酒的价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT Price FROM WINE WHERE YEAR  <  2010"
      }
    ],
    "system": "CREATE TABLE WINE (Price VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2010之前生产的葡萄酒的价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT Price FROM WINE WHERE YEAR  <  2010"
      }
    ],
    "system": "CREATE TABLE WINE (Price VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有得分高于90的不同葡萄酒的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE WHERE score  >  90"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "分数高于90的葡萄酒名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE WHERE score  >  90"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, score INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有由“红”葡萄酿造的不同葡萄酒的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\""
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (Name VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“红”酒酿造的葡萄酒叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\""
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (Name VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有在“西北部”地区有葡萄产地的葡萄酒的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"西北部\""
      }
    ],
    "system": "CREATE TABLE APPELLATIONs (Area VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Name VARCHAR, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“西北部”地区有葡萄产地的葡萄酒有哪些不同的名称？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.Name FROM APPELLATIONs AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"西北部\""
      }
    ],
    "system": "CREATE TABLE APPELLATIONs (Area VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Name VARCHAR, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“王朝葡萄酒厂”生产多少葡萄酒？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM WINE WHERE Winery  =  \"王朝葡萄酒厂\""
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计“王朝葡萄酒厂”生产的葡萄酒数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM WINE WHERE Winery  =  \"王朝葡萄酒厂\""
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“通化”有多少葡萄产地？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"通化\""
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计“通化”的葡萄产地数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM APPELLATIONS WHERE County  =  \"通化\""
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我葡萄产地是“张掖”产的葡萄酒的平均价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"张掖\""
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Appelation VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "葡萄产地是“张掖”生产的葡萄酒平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"张掖\""
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Appelation VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“白”葡萄酿造的葡萄酒的名称和分数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"白\""
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (Name VARCHAR, Score VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "说出“白”葡萄酿造的葡萄酒的名称和分数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"白\""
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (Name VARCHAR, Score VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出葡萄产地是“东南”地区并在2005年之前生产的葡萄酒的最高价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"东南\" AND T2.year  <  2005"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (Area VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Appelation VARCHAR, year INTEGER, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "葡萄产地是“东南”地区并在2005年之前生产的葡萄酒的最高价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"东南\" AND T2.year  <  2005"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (Area VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Appelation VARCHAR, year INTEGER, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出那些“白”葡萄被用来酿造得分高于90的葡萄酒的葡萄。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"白\" AND T2.score  >  90"
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (score INTEGER, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出用“白”葡萄用来生产且在90分以上的葡萄酒。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"白\" AND T2.score  >  90"
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (score INTEGER, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些葡萄酒的价格高于50且是由“红”葡萄酿造的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"红\" AND T2.price  >  50"
      }
    ],
    "system": "CREATE TABLE Grapes (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (price INTEGER, Name VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“红”酒酿造的且价格在50以上葡萄酒的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"红\" AND T2.price  >  50"
      }
    ],
    "system": "CREATE TABLE Grapes (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (price INTEGER, Name VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些酒价格低于50而且生产地是 “宁夏”？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"宁夏\" AND T2.price  <  50"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (price INTEGER, Name VARCHAR, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出酒价格低于50而且生产地是“宁夏”的酒的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Name FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"宁夏\" AND T2.price  <  50"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (price INTEGER, Name VARCHAR, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同葡萄的葡萄酒数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape"
      }
    ],
    "system": "CREATE TABLE WINE (Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个葡萄有多少葡萄酒？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  Grape FROM WINE GROUP BY Grape"
      }
    ],
    "system": "CREATE TABLE WINE (Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不同年份葡萄酒的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR"
      }
    ],
    "system": "CREATE TABLE WINE (Price INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每种年份的葡萄酒的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Price) ,  YEAR FROM WINE GROUP BY YEAR"
      }
    ],
    "system": "CREATE TABLE WINE (Price INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有价格高于“长城葡萄酒厂”的葡萄酒的不同名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"长城葡萄酒厂\")"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR, Name VARCHAR, Price INTEGER), CREATE TABLE wine (Winery VARCHAR, Name VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有价格高于“长城葡萄酒厂”的葡萄酒的不同名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"长城葡萄酒厂\")"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR, Name VARCHAR, Price INTEGER), CREATE TABLE wine (Winery VARCHAR, Name VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有不同葡萄酒的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Name FROM WINE ORDER BY Name"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排列的葡萄酒的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Name FROM WINE ORDER BY Name"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有按价格排序的不同葡萄酒的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Name FROM WINE ORDER BY price"
      }
    ],
    "system": "CREATE TABLE WINE (price VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按升序排列的葡萄酒的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Name FROM WINE ORDER BY price"
      }
    ],
    "system": "CREATE TABLE WINE (price VARCHAR, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2010年之前，葡萄酒产量最高的葡萄产地是哪个地区？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (Appelation VARCHAR, Area VARCHAR), CREATE TABLE WINE (year INTEGER, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2010之前生产葡萄酒最多的葡萄产地是什么地区？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (Appelation VARCHAR, Area VARCHAR), CREATE TABLE WINE (year INTEGER, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "葡萄酒产品平均价格最高的葡萄的颜色是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出葡萄酒平均价格最高的葡萄的颜色。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, Grape VARCHAR), CREATE TABLE WINE (Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在2000年之前或2010年之后生产的葡萄酒的不同名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010"
      }
    ],
    "system": "CREATE TABLE WINE (YEAR INTEGER, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出2000年或2010年后葡萄酒的独特名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010"
      }
    ],
    "system": "CREATE TABLE WINE (YEAR INTEGER, Name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出价格在50到100之间不同的葡萄酒酿造厂。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些葡萄酒酿造厂生产的葡萄酒成本在50到100之间？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT Winery FROM WINE WHERE Price BETWEEN 50 AND 100"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2009年由“仙粉黛”葡萄酿造的葡萄酒的平均价格和情况是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"仙粉黛\""
      }
    ],
    "system": "CREATE TABLE WINE (Cases INTEGER, Grape VARCHAR, YEAR VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出2009年由“仙粉黛”葡萄酿造的葡萄酒的平均价格和情况。"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG(Price) ,  AVG(Cases) FROM WINE WHERE YEAR  =  2009 AND Grape  =  \"仙粉黛\""
      }
    ],
    "system": "CREATE TABLE WINE (Cases INTEGER, Grape VARCHAR, YEAR VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "葡萄产地是“张家口”的葡萄酒的最高价格和最高得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"张家口\""
      }
    ],
    "system": "CREATE TABLE WINE (Score INTEGER, Appelation VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出葡萄产地是“张家口”的葡萄酒的最高价格和分数。"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Price) ,  max(Score) FROM WINE WHERE Appelation  =  \"张家口\""
      }
    ],
    "system": "CREATE TABLE WINE (Score INTEGER, Appelation VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每年葡萄酒的最高价格和最高得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR"
      }
    ],
    "system": "CREATE TABLE WINE (Score INTEGER, Price INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每年葡萄酒的最高价格和最高得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR"
      }
    ],
    "system": "CREATE TABLE WINE (Score INTEGER, Price INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个葡萄产地的酒类的平均价格和得分是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation"
      }
    ],
    "system": "CREATE TABLE WINE (Score INTEGER, Price INTEGER, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一歌葡萄产地葡萄酒的平均价格和得分是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation"
      }
    ],
    "system": "CREATE TABLE WINE (Score INTEGER, Price INTEGER, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出拥有至少四种葡萄酒的酿酒厂。"
      },
      {
        "from": "assistant",
        "value": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些葡萄酒厂至少生产四种葡萄酒？"
      },
      {
        "from": "assistant",
        "value": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在所有葡萄产地中所有拥有最多三种葡萄酒的国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在所有葡萄产地中所有拥有最多三种葡萄酒的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "生产年份早于所有“张裕葡萄酒厂”的生产年份的葡萄酒名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"张裕葡萄酒厂\")"
      }
    ],
    "system": "CREATE TABLE WINE (YEAR INTEGER, Name VARCHAR, Winery VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“张裕葡萄酒厂”生产的所有的葡萄酒之前生产的葡萄酒的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"张裕葡萄酒厂\")"
      }
    ],
    "system": "CREATE TABLE WINE (YEAR INTEGER, Name VARCHAR, Winery VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "比2006年生产的所有葡萄酒都贵的葡萄酒的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, YEAR VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出比2006年生产的所有葡萄酒都贵的葡萄酒的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, YEAR VARCHAR, Price INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出前3名中“白”葡萄酿造的葡萄酒最多的酒庄。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"白\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, GRAPE VARCHAR), CREATE TABLE WINE (Winery VARCHAR, GRAPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪3家酒庄生产的“白”葡萄酒最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"白\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE GRAPES (Color VARCHAR, GRAPE VARCHAR), CREATE TABLE WINE (Winery VARCHAR, GRAPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按年份排序的价格高于100的葡萄酒的葡萄、酒厂和年份。"
      },
      {
        "from": "assistant",
        "value": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR, Price INTEGER, YEAR VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年份排序的价格高于100的葡萄酒的葡萄、酒厂和年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR"
      }
    ],
    "system": "CREATE TABLE WINE (Winery VARCHAR, Price INTEGER, YEAR VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出按名字排序的分数大于93的葡萄，葡萄产地和酒的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, Score INTEGER, Appelation VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按名字排序的分数大于93的葡萄，葡萄产地和酒的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name"
      }
    ],
    "system": "CREATE TABLE WINE (Name VARCHAR, Score INTEGER, Appelation VARCHAR, Grape VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在2008年之后生产但葡萄产地不在“西北部”的葡萄酒的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"西北部\""
      }
    ],
    "system": "CREATE TABLE WINE (Area VARCHAR, YEAR INTEGER, Appelation VARCHAR), CREATE TABLE APPELLATIONS (Area VARCHAR, YEAR INTEGER, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2008年之后生产但葡萄产地不在“西北部”的葡萄酒的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"西北部\""
      }
    ],
    "system": "CREATE TABLE WINE (Area VARCHAR, YEAR INTEGER, Appelation VARCHAR), CREATE TABLE APPELLATIONS (Area VARCHAR, YEAR INTEGER, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不在“烟台”生产的葡萄酒的评价价格。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"烟台\")"
      }
    ],
    "system": "CREATE TABLE wine (price INTEGER, Appelation VARCHAR), CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不在“烟台”生产的葡萄酒的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"烟台\")"
      }
    ],
    "system": "CREATE TABLE wine (price INTEGER, Appelation VARCHAR), CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出生产分数高于90且生产最多的葡萄酒的县。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Score INTEGER, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个县生产的葡萄酒得分高于90的最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T2.Score  >  90 GROUP BY T1.County ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE APPELLATIONS (County VARCHAR, Appelation VARCHAR), CREATE TABLE WINE (Score INTEGER, Appelation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少个火车站？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM station"
      }
    ],
    "system": "CREATE TABLE station (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有车站的名称、位置和站台数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION ,  number_of_platforms FROM station"
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR, name VARCHAR, number_of_platforms VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "火车站的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT LOCATION FROM station"
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不在“广州”的所有火车站的名称和乘客总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  total_passengers FROM station WHERE LOCATION != \"广州\""
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR, name VARCHAR, total_passengers VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示乘客总数前三名的火车站的名称和主要服务。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3"
      }
    ],
    "system": "CREATE TABLE station (total_passengers VARCHAR, name VARCHAR, main_services VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广州”或“深圳”火车站的平均和最大旅客人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(total_passengers) ,  max(total_passengers) FROM station WHERE LOCATION  =  \"广州\" OR LOCATION  =  \"深圳\""
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR, total_passengers INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有位置以及每个位置所有火车站的站台和乘客的总数。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION"
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR, total_passengers INTEGER, number_of_platforms INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有有至少15个站台和25个以上乘客的火车站。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25"
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR, total_passengers INTEGER, number_of_platforms INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有没有至少15个站台的火车站的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15"
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR, number_of_platforms INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示大多数火车站的位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有火车的名称、时间和服务。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  TIME ,  service FROM train"
      }
    ],
    "system": "CREATE TABLE train (service VARCHAR, TIME VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示火车的数量"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM train"
      }
    ],
    "system": "CREATE TABLE train (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按时间顺序显示所有列车的名称和服务。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  service FROM train ORDER BY TIME"
      }
    ],
    "system": "CREATE TABLE train (service VARCHAR, TIME VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每个车站的火车站的名称和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  count(*) FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id"
      }
    ],
    "system": "CREATE TABLE train_station (station_id VARCHAR), CREATE TABLE station (station_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示每列火车的列车名称和车站名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id"
      }
    ],
    "system": "CREATE TABLE train_station (station_id VARCHAR, train_id VARCHAR), CREATE TABLE station (station_id VARCHAR, name VARCHAR), CREATE TABLE train (name VARCHAR, train_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按火车时刻按降序显示“广州”火车站的所有火车名称和时间。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  \"广州\" ORDER BY T3.time DESC"
      }
    ],
    "system": "CREATE TABLE train_station (station_id VARCHAR, train_id VARCHAR), CREATE TABLE station (station_id VARCHAR, location VARCHAR), CREATE TABLE train (time VARCHAR, name VARCHAR, train_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以最大的列车数显示车站名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE train_station (station_id VARCHAR), CREATE TABLE station (station_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用至少两列火车显示车站名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE train_station (station_id VARCHAR), CREATE TABLE station (station_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示只有1个站的所有位置。"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示没有任何火车的车站名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM station WHERE station_id NOT IN (SELECT station_id FROM train_station)"
      }
    ],
    "system": "CREATE TABLE station (station_id VARCHAR, name VARCHAR), CREATE TABLE train_station (station_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提供“和谐号”和“复兴号”列车的车站的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"和谐号\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"复兴号\""
      }
    ],
    "system": "CREATE TABLE train_station (station_id VARCHAR, train_id VARCHAR), CREATE TABLE station (station_id VARCHAR, name VARCHAR), CREATE TABLE train (Name VARCHAR, train_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不经过“广州”任何车站的列车的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.name FROM train_station AS T1 JOIN train AS T2 ON T1.train_id  =  T2.train_id WHERE T1.station_id NOT IN (SELECT T4.station_id FROM train_station AS T3 JOIN station AS T4 ON T3.station_id  =  T4.station_id WHERE t4.location  =  \"广州\")"
      }
    ],
    "system": "CREATE TABLE train_station (station_id VARCHAR), CREATE TABLE train (name VARCHAR, train_id VARCHAR), CREATE TABLE station (station_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按其每年出入和交换量排序列出所有车站的名称和地点。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  LOCATION FROM station ORDER BY Annual_entry_exit ,  Annual_interchanges"
      }
    ],
    "system": "CREATE TABLE station (LOCATION VARCHAR, Annual_entry_exit VARCHAR, Annual_interchanges VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有车辆的ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT vehicle_id FROM Vehicles;"
      }
    ],
    "system": "CREATE TABLE Vehicles (vehicle_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有车辆的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT vehicle_id FROM Vehicles;"
      }
    ],
    "system": "CREATE TABLE Vehicles (vehicle_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少辆车？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Vehicles;"
      }
    ],
    "system": "CREATE TABLE Vehicles (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少车辆存在？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Vehicles;"
      }
    ],
    "system": "CREATE TABLE Vehicles (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示ID是1的车辆细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"
      }
    ],
    "system": "CREATE TABLE Vehicles (vehicle_details VARCHAR, vehicle_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ID是1的车辆细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id = 1;"
      }
    ],
    "system": "CREATE TABLE Vehicles (vehicle_details VARCHAR, vehicle_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有员工的名字、中间名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  middle_name ,  last_name FROM Staff;"
      }
    ],
    "system": "CREATE TABLE Staff (middle_name VARCHAR, last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有员工的名字、中间名和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  middle_name ,  last_name FROM Staff;"
      }
    ],
    "system": "CREATE TABLE Staff (middle_name VARCHAR, last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是 “子君” ，姓氏是“温” 的工作人员的生日是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_birth FROM Staff WHERE first_name = \"子君\" AND last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Staff (last_name VARCHAR, date_of_birth VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名为 “温子君” 的工作人员的出生日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_birth FROM Staff WHERE first_name = \"子君\" AND last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Staff (last_name VARCHAR, date_of_birth VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是 “子君” ，姓氏是“温” 的员工什么时候加入公司的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_joined_staff FROM Staff WHERE first_name = \"子君\" AND last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, date_joined_staff VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "叫 “温”“子君” 的员工什么时候加入公司的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_joined_staff FROM Staff WHERE first_name = \"子君\" AND last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, date_joined_staff VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是 “子君” ，姓氏是“温” 的员工什么时候离开公司的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_left_staff FROM Staff WHERE first_name = \"子君\" AND last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Staff (last_name VARCHAR, date_left_staff VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "职员 “温”“子君” 什么时候离开公司的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_left_staff FROM Staff WHERE first_name = \"子君\" AND last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Staff (last_name VARCHAR, date_left_staff VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少员工名字是 “天宇” ？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";"
      }
    ],
    "system": "CREATE TABLE Staff (first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少员工的名字是 “天宇” ？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Staff WHERE first_name = \"Ludie\";"
      }
    ],
    "system": "CREATE TABLE Staff (first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是 “子君” ，姓氏是“温” 的员工的昵称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT nickname FROM Staff WHERE first_name = \"子君\" AND last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Staff (nickname VARCHAR, last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这个叫 “温”“子君” 的员工的昵称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT nickname FROM Staff WHERE first_name = \"子君\" AND last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Staff (nickname VARCHAR, last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Staff;"
      }
    ],
    "system": "CREATE TABLE Staff (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Staff;"
      }
    ],
    "system": "CREATE TABLE Staff (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市有名字是“子君”，姓氏是“温”的员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“温”“子君” 住在哪个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工名字是“子君” ，姓氏是“温”在哪些国家和省？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Addresses (country VARCHAR, state_province_county VARCHAR, address_id VARCHAR), CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“温”“子君”住在哪个国家和省？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Addresses (country VARCHAR, state_province_county VARCHAR, address_id VARCHAR), CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以“文祥”为名字，“赵”为姓氏的客户上课总时间是多长时间？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"文祥\" AND T2.last_name = \"赵\";"
      }
    ],
    "system": "CREATE TABLE Lessons (lesson_time INTEGER, customer_id VARCHAR), CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "叫“赵”“文祥”的客户总共花了多长时间上课？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"文祥\" AND T2.last_name = \"赵\";"
      }
    ],
    "system": "CREATE TABLE Lessons (lesson_time INTEGER, customer_id VARCHAR), CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“子君” ，姓氏是“温”的员工的邮政编码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, zip_postcode VARCHAR), CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个叫“温”“子君”的员工的邮政编码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, zip_postcode VARCHAR), CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“海南”省有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Addresses WHERE state_province_county = \"海南\";"
      }
    ],
    "system": "CREATE TABLE Addresses (state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“海南”有多少员工？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Addresses WHERE state_province_county = \"海南\";"
      }
    ],
    "system": "CREATE TABLE Addresses (state_province_county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出住在“青岛”的工作人员的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"青岛\";"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“青岛”的所有员工的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"青岛\";"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE Staff (last_name VARCHAR, first_name VARCHAR, staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市住的员工最多？列出城市名称和员工人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE Staff (staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "员工最多住在哪个城市，有多少人住在那里？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR), CREATE TABLE Staff (staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出2到4名员工居住在那里的省。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, state_province_county VARCHAR), CREATE TABLE Staff (staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有2到4名员工居住在那里的省的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;"
      }
    ],
    "system": "CREATE TABLE Addresses (address_id VARCHAR, state_province_county VARCHAR), CREATE TABLE Staff (staff_address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有客户的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM Customers;"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有客户的名字和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM Customers;"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出名字叫“诚”的客户的电子邮件的名字和生日。"
      },
      {
        "from": "assistant",
        "value": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"诚\""
      }
    ],
    "system": "CREATE TABLE Customers (date_of_birth VARCHAR, first_name VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字叫“诚”的客户的电子邮件的名字和生日是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT email_address ,  date_of_birth FROM Customers WHERE first_name = \"诚\""
      }
    ],
    "system": "CREATE TABLE Customers (date_of_birth VARCHAR, first_name VARCHAR, email_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出余额超过2000元的客户的电话号码和电子邮件地址。"
      },
      {
        "from": "assistant",
        "value": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;"
      }
    ],
    "system": "CREATE TABLE Customers (email_address VARCHAR, phone_number VARCHAR, amount_outstanding INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有余额超过2000的客户的电话号码和电子邮件地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT phone_number ,  email_address FROM Customers WHERE amount_outstanding  >  2000;"
      }
    ],
    "system": "CREATE TABLE Customers (email_address VARCHAR, phone_number VARCHAR, amount_outstanding INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏为“齐”或名字为“彬斌”的客户的状态码、手机号码和电子邮件地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"彬斌\" OR last_name  =  \"齐\""
      }
    ],
    "system": "CREATE TABLE Customers (cell_mobile_phone_number VARCHAR, customer_status_code VARCHAR, first_name VARCHAR, email_address VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "姓氏为“齐”或名字为“彬斌”的客户的状态码、电话号码和电子邮件地址是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"彬斌\" OR last_name  =  \"齐\""
      }
    ],
    "system": "CREATE TABLE Customers (cell_mobile_phone_number VARCHAR, customer_status_code VARCHAR, first_name VARCHAR, email_address VARCHAR, last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被归类为“优秀顾客”状态的客户的生日是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  \"优秀顾客\""
      }
    ],
    "system": "CREATE TABLE Customers (customer_status_code VARCHAR, date_of_birth VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "状态代码为“优秀顾客”的每个客户的出生日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_of_birth FROM Customers WHERE customer_status_code  =  \"优秀顾客\""
      }
    ],
    "system": "CREATE TABLE Customers (customer_status_code VARCHAR, date_of_birth VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“诚”和姓氏是“钟”的顾客是什么时候成为顾客的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_became_customer FROM Customers WHERE first_name = \"诚\" AND last_name = \"钟\";"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, date_became_customer VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“钟”“诚”什么时候开始成为顾客的？"
      },
      {
        "from": "assistant",
        "value": "SELECT date_became_customer FROM Customers WHERE first_name = \"诚\" AND last_name = \"钟\";"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, date_became_customer VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "总共有多少客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers;"
      }
    ],
    "system": "CREATE TABLE Customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少顾客？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers;"
      }
    ],
    "system": "CREATE TABLE Customers (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有客户状态代码和具有每个状态代码的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;"
      }
    ],
    "system": "CREATE TABLE Customers (customer_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个客户状态代码，有多少客户被这样分类？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_status_code , count(*) FROM Customers GROUP BY customer_status_code;"
      }
    ],
    "system": "CREATE TABLE Customers (customer_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪种客户状态代码的客户数最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Customers (customer_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户数量最少的状态代码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Customers (customer_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以“文祥”和“赵”为姓的客户“完成”学习了多少课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"文祥\" AND T2.last_name = \"赵\" AND T1.lesson_status_code = \"完成\";"
      }
    ],
    "system": "CREATE TABLE Lessons (lesson_status_code VARCHAR, customer_id VARCHAR), CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户“赵”“文祥”“完成”了多少课程？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"文祥\" AND T2.last_name = \"赵\" AND T1.lesson_status_code = \"完成\";"
      }
    ],
    "system": "CREATE TABLE Lessons (lesson_status_code VARCHAR, customer_id VARCHAR), CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户的最大、最小和平均金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;"
      }
    ],
    "system": "CREATE TABLE Customers (amount_outstanding INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于所有客户来说，最大金额、最小金额和平均金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(amount_outstanding) ,  min(amount_outstanding) ,  avg(amount_outstanding) FROM Customers;"
      }
    ],
    "system": "CREATE TABLE Customers (amount_outstanding INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出金额在1000至3000之间的客户的姓名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR, amount_outstanding INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1000到3000美元之间的所有客户的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name ,  last_name FROM Customers WHERE amount_outstanding BETWEEN 1000 AND 3000;"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR, amount_outstanding INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出居住在“福州”市的客户的姓名和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"福州\";"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, customer_address_id VARCHAR, first_name VARCHAR), CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "住在“福州”市的所有客户的姓氏和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"福州\";"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, customer_address_id VARCHAR, first_name VARCHAR), CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“诚”和姓氏是“钟”的顾客住在哪个国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"诚\" AND T1.last_name = \"钟\""
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, customer_address_id VARCHAR, first_name VARCHAR), CREATE TABLE Addresses (country VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户“钟”“诚”居住的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"诚\" AND T1.last_name = \"钟\""
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, customer_address_id VARCHAR, first_name VARCHAR), CREATE TABLE Addresses (country VARCHAR, address_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“诚”和姓氏是“钟”的顾客的邮政编码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"诚\" AND T1.last_name = \"钟\""
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, customer_address_id VARCHAR, first_name VARCHAR), CREATE TABLE Addresses (address_id VARCHAR, zip_postcode VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户“钟”“诚”的邮政编码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"诚\" AND T1.last_name = \"钟\""
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR, customer_address_id VARCHAR, first_name VARCHAR), CREATE TABLE Addresses (address_id VARCHAR, zip_postcode VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市有最多的客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Customers (customer_address_id VARCHAR), CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么城市拥有最多的客户？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE Customers (customer_address_id VARCHAR), CREATE TABLE Addresses (address_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是“诚”和姓氏是“钟”的顾客总共付了多少钱？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"诚\" AND T2.last_name = \"钟\""
      }
    ],
    "system": "CREATE TABLE Customer_Payments (amount_payment INTEGER, customer_id VARCHAR), CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "顾客“钟”“诚”支付的总金额是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"诚\" AND T2.last_name = \"钟\""
      }
    ],
    "system": "CREATE TABLE Customer_Payments (amount_payment INTEGER, customer_id VARCHAR), CREATE TABLE Customers (last_name VARCHAR, first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出没有支付历史记录的客户数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );"
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR), CREATE TABLE Customer_Payments (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少客户没有付款记录？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Customer_Payments );"
      }
    ],
    "system": "CREATE TABLE Customers (customer_id VARCHAR), CREATE TABLE Customer_Payments (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出超过2次付款的客户的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;"
      }
    ],
    "system": "CREATE TABLE Customer_Payments (customer_id VARCHAR), CREATE TABLE Customers (last_name VARCHAR, customer_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有超过2次付款的客户的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;"
      }
    ],
    "system": "CREATE TABLE Customer_Payments (customer_id VARCHAR), CREATE TABLE Customers (last_name VARCHAR, customer_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有付款方式和每种付款方式的付款次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;"
      }
    ],
    "system": "CREATE TABLE Customer_Payments (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每种支付方式，支付了多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;"
      }
    ],
    "system": "CREATE TABLE Customer_Payments (payment_method_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“取消”的课有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"取消\";"
      }
    ],
    "system": "CREATE TABLE Lessons (lesson_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少课被“取消”了？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"取消\";"
      }
    ],
    "system": "CREATE TABLE Lessons (lesson_status_code VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出名字是 “子君” ，姓氏是“温” ，昵称包含字“子”的职工教的课程ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\" AND nickname LIKE \"%子%\";"
      }
    ],
    "system": "CREATE TABLE Lessons (staff_id VARCHAR, lesson_id VARCHAR), CREATE TABLE Staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "昵称包含字“子”的职员“温”“子君” ，她教的所有职员的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\" AND nickname LIKE \"%子%\";"
      }
    ],
    "system": "CREATE TABLE Lessons (staff_id VARCHAR, lesson_id VARCHAR), CREATE TABLE Staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中有“安”字的教职员教了多少课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%安%\""
      }
    ],
    "system": "CREATE TABLE Lessons (staff_id VARCHAR), CREATE TABLE Staff (staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字中有“安”字的教职员教了多少课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%安%\""
      }
    ],
    "system": "CREATE TABLE Lessons (staff_id VARCHAR), CREATE TABLE Staff (staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以“子君”为名字，“温”为姓氏的员工教的总课时有多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Lessons (staff_id VARCHAR), CREATE TABLE Staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“温”“子君”教授的所有课程的总时间是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Lessons (staff_id VARCHAR), CREATE TABLE Staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字是 “子君” ，姓氏是“温” 的员工平均授课价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Lessons (staff_id VARCHAR), CREATE TABLE Staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": " “温”“子君” 教授的课的平均价格是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(price) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"子君\" AND T2.last_name = \"温\";"
      }
    ],
    "system": "CREATE TABLE Lessons (staff_id VARCHAR), CREATE TABLE Staff (last_name VARCHAR, staff_id VARCHAR, first_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字叫“瑞”的客户上了多少课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"瑞\""
      }
    ],
    "system": "CREATE TABLE Lessons (customer_id VARCHAR), CREATE TABLE Customers (first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字叫“瑞”的客户上了多少课？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"瑞\""
      }
    ],
    "system": "CREATE TABLE Lessons (customer_id VARCHAR), CREATE TABLE Customers (first_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户和员工都使用哪些姓氏？"
      },
      {
        "from": "assistant",
        "value": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR), CREATE TABLE Staff (last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "客户和员工使用的姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff"
      }
    ],
    "system": "CREATE TABLE Customers (last_name VARCHAR), CREATE TABLE Staff (last_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有给授课的员工的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id"
      }
    ],
    "system": "CREATE TABLE Staff (staff_id VARCHAR, first_name VARCHAR), CREATE TABLE Lessons (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不教任何课程的员工的第一个名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id"
      }
    ],
    "system": "CREATE TABLE Staff (staff_id VARCHAR, first_name VARCHAR), CREATE TABLE Lessons (staff_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在大部分时间里，车辆使用的ID和详细信息是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Vehicles (vehicle_details VARCHAR, vehicle_id VARCHAR), CREATE TABLE Lessons (vehicle_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少教员？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Faculty"
      }
    ],
    "system": "CREATE TABLE Faculty (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "全体教员的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Faculty"
      }
    ],
    "system": "CREATE TABLE Faculty (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有什么等级的教员？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT rank FROM Faculty"
      }
    ],
    "system": "CREATE TABLE Faculty (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不同等级的教员。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT rank FROM Faculty"
      }
    ],
    "system": "CREATE TABLE Faculty (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有有教学室的不同建筑。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT building FROM Faculty"
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么建筑有教学办公室？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT building FROM Faculty"
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有教员的等级、名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT rank ,  Fname ,  Lname FROM Faculty"
      }
    ],
    "system": "CREATE TABLE Faculty (Lname VARCHAR, rank VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教员的职称、名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rank ,  Fname ,  Lname FROM Faculty"
      }
    ],
    "system": "CREATE TABLE Faculty (Lname VARCHAR, rank VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有“女”教员的姓名、姓氏和电话号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  \"女\""
      }
    ],
    "system": "CREATE TABLE Faculty (phone VARCHAR, Sex VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“女”教员的名字、姓氏和电话号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT Fname ,  Lname ,  phone FROM Faculty WHERE Sex  =  \"女\""
      }
    ],
    "system": "CREATE TABLE Faculty (phone VARCHAR, Sex VARCHAR, Lname VARCHAR, Fname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有“男”性教师的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT FacID FROM Faculty WHERE Sex  =  \"男\""
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“男”性教职员工的教师ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT FacID FROM Faculty WHERE Sex  =  \"男\""
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少“女”“教授”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Faculty WHERE Sex  =  \"女\" AND Rank  =  \"教授\""
      }
    ],
    "system": "CREATE TABLE Faculty (Rank VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计一下我们有多少“女”“教授”。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Faculty WHERE Sex  =  \"女\" AND Rank  =  \"教授\""
      }
    ],
    "system": "CREATE TABLE Faculty (Rank VARCHAR, Sex VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示教师名为“王”“睿”的电话，房间，和建筑。"
      },
      {
        "from": "assistant",
        "value": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"睿\" AND Lname  =  \"王\""
      }
    ],
    "system": "CREATE TABLE Faculty (room VARCHAR, Fname VARCHAR, Lname VARCHAR, phone VARCHAR, building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教师“王”“睿”的电话、房间和建筑是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"睿\" AND Lname  =  \"王\""
      }
    ],
    "system": "CREATE TABLE Faculty (room VARCHAR, Fname VARCHAR, Lname VARCHAR, phone VARCHAR, building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“逸夫”楼有多少“教授”？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Faculty WHERE Rank  =  \"教授\" AND building  =  \"逸夫\""
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR, Rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计在“逸夫”楼拥有办公室的“教授”的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Faculty WHERE Rank  =  \"教授\" AND building  =  \"逸夫\""
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR, Rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有“教员”的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"教员\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, Rank VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有“教员”的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT fname ,  lname FROM Faculty WHERE Rank  =  \"教员\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, Rank VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有的建筑物以及建筑物的教职员数。"
      },
      {
        "from": "assistant",
        "value": "SELECT building ,  count(*) FROM Faculty GROUP BY building"
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个建筑有多少教员？以建筑物的名称列出结果。"
      },
      {
        "from": "assistant",
        "value": "SELECT building ,  count(*) FROM Faculty GROUP BY building"
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一栋楼的教员最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出拥有最多教员的建筑。"
      },
      {
        "from": "assistant",
        "value": "SELECT building FROM Faculty GROUP BY building ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示所有至少有10位“教授”的建筑。"
      },
      {
        "from": "assistant",
        "value": "SELECT building FROM Faculty WHERE rank  =  \"教授\" GROUP BY building HAVING count(*)  >=  10"
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在哪栋楼里至少有十位“教授”？"
      },
      {
        "from": "assistant",
        "value": "SELECT building FROM Faculty WHERE rank  =  \"教授\" GROUP BY building HAVING count(*)  >=  10"
      }
    ],
    "system": "CREATE TABLE Faculty (building VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每一个教职员工等级，显示该等级有教职员工的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank"
      }
    ],
    "system": "CREATE TABLE Faculty (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们每个教员等级有多少教员？"
      },
      {
        "from": "assistant",
        "value": "SELECT rank ,  count(*) FROM Faculty GROUP BY rank"
      }
    ],
    "system": "CREATE TABLE Faculty (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有等级和各等级的男女教师人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex"
      }
    ],
    "system": "CREATE TABLE Faculty (sex VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们每个年级有多少教员和性别？"
      },
      {
        "from": "assistant",
        "value": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex"
      }
    ],
    "system": "CREATE TABLE Faculty (sex VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个教职员工人数最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Faculty (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最少人数的教员级别。"
      },
      {
        "from": "assistant",
        "value": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Faculty (rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示男女“助理教授”的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"助理教授\" GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE Faculty (sex VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少男女“助理教授”？"
      },
      {
        "from": "assistant",
        "value": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"助理教授\" GROUP BY sex"
      }
    ],
    "system": "CREATE TABLE Faculty (sex VARCHAR, rank VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“张”“晴”的导师的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"晴\" AND T2.lname  =  \"张\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR), CREATE TABLE Student (fname VARCHAR, advisor VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是“张”“晴”的导师？给我名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"晴\" AND T2.lname  =  \"张\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR), CREATE TABLE Student (fname VARCHAR, advisor VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示导师是“教授”的学生的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\""
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR, rank VARCHAR), CREATE TABLE Student (advisor VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些学生有“教授”作为他们的导师？找出他们的学生ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\""
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR, rank VARCHAR), CREATE TABLE Student (advisor VARCHAR, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“李”“斌”指导的所有学生的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"斌\" AND T1.lname  =  \"李\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR), CREATE TABLE Student (fname VARCHAR, advisor VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李”“斌”指导哪些学生？给我他们的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"斌\" AND T1.lname  =  \"李\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR), CREATE TABLE Student (fname VARCHAR, advisor VARCHAR, lname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示教员的教员ID和他或她指导的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR), CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个教员的教员ID和每个教员的学生人数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR), CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有教员等级和每个等级指导的学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR, rank VARCHAR), CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一位教职工等级有多少指导学生？列出等级和学生人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR, rank VARCHAR), CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多学生的教师的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR), CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请给出我给指导最多学生的老师的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR), CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "为所有有至少2名学生的教职工的ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR), CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个教职工指导两个以上的学生？给我他们的教职工ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR), CREATE TABLE Student (advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不指导任何学生的教职工的ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR, advisor VARCHAR), CREATE TABLE Student (FacID VARCHAR, advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不指导任何学生的教职工的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT FacID FROM Faculty EXCEPT SELECT advisor FROM Student"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR, advisor VARCHAR), CREATE TABLE Student (FacID VARCHAR, advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有什么活动？"
      },
      {
        "from": "assistant",
        "value": "SELECT activity_name FROM Activity"
      }
    ],
    "system": "CREATE TABLE Activity (activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出我们所有的活动。"
      },
      {
        "from": "assistant",
        "value": "SELECT activity_name FROM Activity"
      }
    ],
    "system": "CREATE TABLE Activity (activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们有多少活动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Activity"
      }
    ],
    "system": "CREATE TABLE Activity (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出可用的活动数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Activity"
      }
    ],
    "system": "CREATE TABLE Activity (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少教职工参加一项活动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"
      }
    ],
    "system": "CREATE TABLE Faculty_participates_in (FacID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我参加活动的教职工人数"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in"
      }
    ],
    "system": "CREATE TABLE Faculty_participates_in (FacID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不参与任何活动的教职工的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR), CREATE TABLE Faculty_participates_in (FacID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些教职工不参与任何活动？找出他们的教职工ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in"
      }
    ],
    "system": "CREATE TABLE Faculty (FacID VARCHAR), CREATE TABLE Faculty_participates_in (FacID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请出示所有参加活动且指导学生的教职员工的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student"
      }
    ],
    "system": "CREATE TABLE Faculty_participates_in (FacID VARCHAR, advisor VARCHAR), CREATE TABLE Student (FacID VARCHAR, advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些是既参加活动又指导学生的教职工的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT FacID FROM Faculty_participates_in INTERSECT SELECT advisor FROM Student"
      }
    ],
    "system": "CREATE TABLE Faculty_participates_in (FacID VARCHAR, advisor VARCHAR), CREATE TABLE Student (FacID VARCHAR, advisor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“马”“文杰”参加了多少活动？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"文杰\" AND T1.lname  =  \"马\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (facID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“马”“文杰”参与的活动数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID WHERE T1.fname  =  \"文杰\" AND T1.lname  =  \"马\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (facID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“马”“文杰”参与的所有活动的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"文杰\" AND T1.lname  =  \"马\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (actid VARCHAR, facID VARCHAR), CREATE TABLE Activity (actid VARCHAR, activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“马”“文杰”参与的活动的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"文杰\" AND T1.lname  =  \"马\""
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (actid VARCHAR, facID VARCHAR), CREATE TABLE Activity (actid VARCHAR, activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有参加某项活动的教职员工的名字和姓氏，以及他们参加的活动数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID"
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (facID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加至少一项活动的教职员工的名字和姓氏是什么？对于他们中的每一个人，也显示他们参加的活动的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID"
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (facID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有活动名称和参与每个活动的教职工人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID"
      }
    ],
    "system": "CREATE TABLE Activity (activity_name VARCHAR, actID VARCHAR), CREATE TABLE Faculty_participates_in (actID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少教职工参加每一项活动？返回活动名称和教职工人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID"
      }
    ],
    "system": "CREATE TABLE Activity (activity_name VARCHAR, actID VARCHAR), CREATE TABLE Faculty_participates_in (actID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加最多活动的教职工的姓名是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (facID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出参与最多数量的活动的教员的名字和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Faculty (fname VARCHAR, FacID VARCHAR, lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (facID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "教职工参与最多的活动名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Activity (activity_name VARCHAR, actID VARCHAR), CREATE TABLE Faculty_participates_in (actID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些活动是教职工最多参加的活动？查出活动名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Activity (activity_name VARCHAR, actID VARCHAR), CREATE TABLE Faculty_participates_in (actID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示不参与任何活动的学生的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in"
      }
    ],
    "system": "CREATE TABLE Student (StuID VARCHAR), CREATE TABLE Participates_in (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "没有参与任何活动的学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in"
      }
    ],
    "system": "CREATE TABLE Student (StuID VARCHAR), CREATE TABLE Participates_in (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有20岁以下参加活动的学生ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20"
      }
    ],
    "system": "CREATE TABLE Participates_in (age INTEGER, StuID VARCHAR), CREATE TABLE Student (age INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加至少一项活动的20岁以下学生的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT StuID FROM Participates_in INTERSECT SELECT StuID FROM Student WHERE age  <  20"
      }
    ],
    "system": "CREATE TABLE Participates_in (age INTEGER, StuID VARCHAR), CREATE TABLE Student (age INTEGER, StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加最多活动的学生的名字和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, lname VARCHAR, StuID VARCHAR), CREATE TABLE Participates_in (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "告诉我参加最多数量活动的学生的姓氏和姓氏。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.fname ,  T1.lname FROM Student AS T1 JOIN Participates_in AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Student (fname VARCHAR, lname VARCHAR, StuID VARCHAR), CREATE TABLE Participates_in (StuID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "参加最多数量活动的学生的姓氏和姓氏是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Activity (activity_name VARCHAR, actID VARCHAR), CREATE TABLE Participates_in (actID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出学生参与人数最多的活动的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE Activity (activity_name VARCHAR, actID VARCHAR), CREATE TABLE Participates_in (actID VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出正在玩“独木舟”或“皮划艇”的教职员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"独木舟\" OR T3.activity_name  =  \"皮划艇\""
      }
    ],
    "system": "CREATE TABLE Faculty (lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (actid VARCHAR, facID VARCHAR), CREATE TABLE activity (activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个教职员在玩“独木舟”或“皮划艇”？告诉我他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"独木舟\" OR T3.activity_name  =  \"皮划艇\""
      }
    ],
    "system": "CREATE TABLE Faculty (lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (actid VARCHAR, facID VARCHAR), CREATE TABLE activity (activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出不玩“独木舟”或“皮划艇”的“教授”的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT lname FROM faculty WHERE rank  =  \"Professor\" EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"独木舟\" OR T3.activity_name  =  \"皮划艇\""
      }
    ],
    "system": "CREATE TABLE faculty (lname VARCHAR, rank VARCHAR), CREATE TABLE Faculty (lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (actid VARCHAR, facID VARCHAR), CREATE TABLE activity (activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不把“独木舟”或“皮划艇”作为活动的“教授”的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lname FROM faculty WHERE rank  =  \"Professor\" EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"独木舟\" OR T3.activity_name  =  \"皮划艇\""
      }
    ],
    "system": "CREATE TABLE faculty (lname VARCHAR, rank VARCHAR), CREATE TABLE Faculty (lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (actid VARCHAR, facID VARCHAR), CREATE TABLE activity (activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出参加“独木舟”和“皮划艇”运动的教职员的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"独木舟\" INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"皮划艇\""
      }
    ],
    "system": "CREATE TABLE Faculty (lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (actid VARCHAR, facID VARCHAR), CREATE TABLE activity (activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些同时玩“独木舟”和“皮划艇”的教职员叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"独木舟\" INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  \"皮划艇\""
      }
    ],
    "system": "CREATE TABLE Faculty (lname VARCHAR, facID VARCHAR), CREATE TABLE Faculty_participates_in (actid VARCHAR, facID VARCHAR), CREATE TABLE activity (activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出参加“独木舟”和“皮划艇”运动的学生的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  \"独木舟\" INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  \"皮划艇\""
      }
    ],
    "system": "CREATE TABLE participates_in (stuid VARCHAR), CREATE TABLE activity (actid VARCHAR, activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些学生参加“独木舟”和“皮划艇”作为他们的活动？告诉我他们的学生ID 。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  \"独木舟\" INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  \"皮划艇\""
      }
    ],
    "system": "CREATE TABLE participates_in (stuid VARCHAR), CREATE TABLE activity (actid VARCHAR, activity_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“沈阳”市机场的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM airports WHERE city  =  \"沈阳\""
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“沈阳”市的机场名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM airports WHERE city  =  \"沈阳\""
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“广州”市机场的名称、城市、国家和海拔高度。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  \"广州\""
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR, name VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广州”市每个机场的名称、城市、国家和海拔高度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  city ,  country ,  elevation FROM airports WHERE city  =  \"广州\""
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR, name VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少家航空公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airlines"
      }
    ],
    "system": "CREATE TABLE airlines (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "航空公司的总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airlines"
      }
    ],
    "system": "CREATE TABLE airlines (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“俄罗斯”有多少家航空公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airlines WHERE country  =  \"俄罗斯\""
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“俄罗斯”航空公司的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airlines WHERE country  =  \"俄罗斯\""
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“冰岛”所有机场的最大海拔是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(elevation) FROM airports WHERE country  =  \"冰岛\""
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“冰岛”国家机场的最高海拔是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(elevation) FROM airports WHERE country  =  \"冰岛\""
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找位于“古巴”或“阿根廷”的机场名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM airports WHERE country  =  \"古巴\" OR country  =  \"阿根廷\""
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“古巴”或“阿根廷”所有机场的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM airports WHERE country  =  \"古巴\" OR country  =  \"阿根廷\""
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出以“东方”开始的航空公司所在的国家的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM airlines WHERE name LIKE \"%东方%\""
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有以“东方”开始的航空公司的所在国家的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM airlines WHERE name LIKE \"%东方%\""
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查出海拔在-50到50之间的机场名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50"
      }
    ],
    "system": "CREATE TABLE airports (name VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "海拔在-50到50之间的机场名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM airports WHERE elevation BETWEEN -50 AND 50"
      }
    ],
    "system": "CREATE TABLE airports (name VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个国家是海拔最高的机场的所在地？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "海拔最高的机场是在哪个国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出包括“国际”一词的机场名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airports WHERE name LIKE \"%国际%\""
      }
    ],
    "system": "CREATE TABLE airports (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少机场名称中有“国际”这个词？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airports WHERE name LIKE \"%国际%\""
      }
    ],
    "system": "CREATE TABLE airports (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“格陵兰岛”有多少个不同的城市有机场？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT city) FROM airports WHERE country  =  \"格陵兰岛\""
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“格陵兰岛”有多少城市的机场？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT city) FROM airports WHERE country  =  \"格陵兰岛\""
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“山东航空公司”运营的航线数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  \"山东航空公司\""
      }
    ],
    "system": "CREATE TABLE airlines (alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东航空公司”有多少条航线？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  \"山东航空公司\""
      }
    ],
    "system": "CREATE TABLE airlines (alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出目的机场在“加拿大”的航线数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  \"加拿大\""
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR), CREATE TABLE routes (dst_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少条航线是以“加拿大”机场为终点的？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  \"加拿大\""
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR), CREATE TABLE routes (dst_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最低海拔机场的名称，城市和国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR, name VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最低海拔机场的名称，城市和国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR, name VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最高海拔机场的名称，城市和国家。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR, name VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高海拔机场的名称，城市和国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR, name VARCHAR, elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出以最多航线为目的地的机场的名称和城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, city VARCHAR, name VARCHAR), CREATE TABLE routes (dst_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以最多航线为目的地的机场的名称和城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, city VARCHAR, name VARCHAR), CREATE TABLE routes (dst_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出航线数量最多的前10名航空公司的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10"
      }
    ],
    "system": "CREATE TABLE airlines (alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于航线数量最多的前10名航空公司，他们的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10"
      }
    ],
    "system": "CREATE TABLE airlines (alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最多航班路线来源的机场的名称和城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, city VARCHAR, name VARCHAR), CREATE TABLE routes (src_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从最多航线起始的机场的名称和城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, city VARCHAR, name VARCHAR), CREATE TABLE routes (src_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“山东航空公司”目的地的不同机场的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  \"山东航空公司\""
      }
    ],
    "system": "CREATE TABLE airlines (alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东航空公司”目的地的不同机场的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  \"山东航空公司\""
      }
    ],
    "system": "CREATE TABLE airlines (alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家拥有最多的航空公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "国内航空公司数量最多的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM airlines GROUP BY country ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些国家拥有最多数量的起始状态是“Y”的航空公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM airlines WHERE active  =  \"Y\" GROUP BY country ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR, active VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多数量的起始状态是“Y”的航空公司的国家是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT country FROM airlines WHERE active  =  \"Y\" GROUP BY country ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR, active VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按照航空公司数量的降序列出所有国家及其航空公司数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按降序列出每个国家经营有多少家航空公司？"
      },
      {
        "from": "assistant",
        "value": "SELECT country ,  count(*) FROM airlines GROUP BY country ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个国家有多少个机场？按照机场数量降序来排列。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个国家由最多到最少的机场数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  country FROM airports GROUP BY country ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“中国”每个城市有多少个机场？通过机场数量降序来排列城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  city FROM airports WHERE country  =  \"中国\" GROUP BY city ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“中国”每座城市由最多到最少有多少个机场？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  city FROM airports WHERE country  =  \"中国\" GROUP BY city ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“中国”超过3个机场的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM airports WHERE country  =  \"中国\" GROUP BY city HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“中国”有超过3个机场的城市数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM airports WHERE country  =  \"中国\" GROUP BY city HAVING count(*)  >  3"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个城市有超过3个机场？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)"
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有超过3个机场的城市的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)"
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出拥有一个以上机场的城市城市的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有超过一个机场的所有城市的名字是什么？他们有多少个机场？"
      },
      {
        "from": "assistant",
        "value": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1"
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按机场数量列出拥有2个以上机场的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)"
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按机场数量列出拥有2个以上机场的城市有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)"
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个起始机场的航线号码和机场名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, name VARCHAR), CREATE TABLE routes (src_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一个机场名称，多少条航线在该机场出发？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name"
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, name VARCHAR), CREATE TABLE routes (src_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出按路线数量降序排序的每个源机场的路线数量和机场名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, name VARCHAR), CREATE TABLE routes (src_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个机场名称，从最多到最少排序的机场有多少条航线？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name ORDER BY count(*) DESC"
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, name VARCHAR), CREATE TABLE routes (src_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个国家的所有机场的平均海拔高度。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(elevation) ,  country FROM airports GROUP BY country"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个国家，该国机场的平均海拔是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(elevation) ,  country FROM airports GROUP BY country"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有两个机场的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有两个机场的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2"
      }
    ],
    "system": "CREATE TABLE airports (city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个国家和航空公司的名字，有多少条路线？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name"
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR, alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个国家和每一个国家对应的航空公司的航线总数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name"
      }
    ],
    "system": "CREATE TABLE airlines (country VARCHAR, alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出目的地机场在“意大利”的航线的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  \"意大利\""
      }
    ],
    "system": "CREATE TABLE routes (dst_apid VARCHAR), CREATE TABLE airports (country VARCHAR, apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以“意大利”机场为目的地的路线有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  \"意大利\""
      }
    ],
    "system": "CREATE TABLE routes (dst_apid VARCHAR), CREATE TABLE airports (country VARCHAR, apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回由名为“山东航空公司”运营的以“意大利”机场为目的地的航线数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  \"Italy\" AND T3.name  =  \"American Airlines\""
      }
    ],
    "system": "CREATE TABLE routes (dst_apid VARCHAR, alid VARCHAR), CREATE TABLE airports (country VARCHAR, apid VARCHAR), CREATE TABLE airlines (alid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东航空公司”运营的以“意大利”机场为目的地的航线数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  \"Italy\" AND T3.name  =  \"American Airlines\""
      }
    ],
    "system": "CREATE TABLE routes (dst_apid VARCHAR, alid VARCHAR), CREATE TABLE airports (country VARCHAR, apid VARCHAR), CREATE TABLE airlines (alid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出目的地是“首都国际机场”的航线数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  \"首都国际机场\""
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, name VARCHAR), CREATE TABLE routes (dst_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以“首都国际机场”为的终点路线是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  \"首都国际机场\""
      }
    ],
    "system": "CREATE TABLE airports (apid VARCHAR, name VARCHAR), CREATE TABLE routes (dst_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出从“中国”到“加拿大”的路线数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  \"加拿大\") AND src_apid IN (SELECT apid FROM airports WHERE country  =  \"中国\")"
      }
    ],
    "system": "CREATE TABLE routes (src_apid VARCHAR, apid VARCHAR, dst_apid VARCHAR, country VARCHAR), CREATE TABLE airports (src_apid VARCHAR, apid VARCHAR, dst_apid VARCHAR, country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "从“中国”到“加拿大”有多少条路线？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  \"加拿大\") AND src_apid IN (SELECT apid FROM airports WHERE country  =  \"中国\")"
      }
    ],
    "system": "CREATE TABLE routes (src_apid VARCHAR, apid VARCHAR, dst_apid VARCHAR, country VARCHAR), CREATE TABLE airports (src_apid VARCHAR, apid VARCHAR, dst_apid VARCHAR, country VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找其源机场和目的地机场在“中国”的路线ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  \"中国\") AND src_apid IN (SELECT apid FROM airports WHERE country  =  \"中国\")"
      }
    ],
    "system": "CREATE TABLE routes (dst_apid VARCHAR, src_apid VARCHAR, rid VARCHAR, country VARCHAR, apid VARCHAR), CREATE TABLE airports (dst_apid VARCHAR, src_apid VARCHAR, rid VARCHAR, country VARCHAR, apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "源机场和目的地机场在“中国”的路线ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  \"中国\") AND src_apid IN (SELECT apid FROM airports WHERE country  =  \"中国\")"
      }
    ],
    "system": "CREATE TABLE routes (dst_apid VARCHAR, src_apid VARCHAR, rid VARCHAR, country VARCHAR, apid VARCHAR), CREATE TABLE airports (dst_apid VARCHAR, src_apid VARCHAR, rid VARCHAR, country VARCHAR, apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找航线数量最多的航空公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airlines (alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "航线最多的航空公司叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airlines (alid VARCHAR, name VARCHAR), CREATE TABLE routes (alid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“中国”航线数量最多的最繁忙的来源机场。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  \"中国\" GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, apid VARCHAR, name VARCHAR), CREATE TABLE routes (src_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“中国”起步的航线最多的机场叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  \"中国\" GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, apid VARCHAR, name VARCHAR), CREATE TABLE routes (src_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最繁忙在“中国”航线数量最多的目的地机场。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  \"中国\" GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, apid VARCHAR, name VARCHAR), CREATE TABLE routes (dst_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“中国”起步的航线最多的目的地机场叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  \"中国\" GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE airports (country VARCHAR, apid VARCHAR, name VARCHAR), CREATE TABLE routes (dst_apid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最新订单的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, date_order_placed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最近订购的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, date_order_placed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最旧订单的订单ID和客户ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, customer_id VARCHAR, date_order_placed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出与最旧订单关联的订单ID和客户ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, customer_id VARCHAR, date_order_placed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出发货追踪号码是“3452”的订单的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\""
      }
    ],
    "system": "CREATE TABLE shipments (order_id VARCHAR, shipment_tracking_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个订单的出货跟踪号码是“3452”？把订单的ID给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\""
      }
    ],
    "system": "CREATE TABLE shipments (order_id VARCHAR, shipment_tracking_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出产品ID为11的所有订单项目的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_item_id FROM order_items WHERE product_id = 11"
      }
    ],
    "system": "CREATE TABLE order_items (product_id VARCHAR, order_item_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有产品ID为11的订单项目。订单项目ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT order_item_id FROM order_items WHERE product_id = 11"
      }
    ],
    "system": "CREATE TABLE order_items (product_id VARCHAR, order_item_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有订单状态为“打包”的不同客户的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"打包\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户有“包装”状态的订单？给我客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"包装\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有拥有“在路上”状态订单的不同客户的详细信息。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"在路上\""
      }
    ],
    "system": "CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些客户的订单状态是“在路上”？给我客户的详细资料？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"在路上\""
      }
    ],
    "system": "CREATE TABLE customers (customer_details VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "订单最多的客户叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个客户的订单最多？查找客户名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最多订单的客户的客户ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出订单最多的客户的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请给我一张属于“兰兰”客户的ID和订单状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"兰兰\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_id VARCHAR, order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个订单是属于名字叫“兰兰”的客户的？给我订单ID和状态。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"兰兰\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_id VARCHAR, order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找属于“兰兰”客户的订单日期。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"兰兰\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (customer_id VARCHAR, date_order_placed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "名字叫“兰兰”客户的订单日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"兰兰\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (customer_id VARCHAR, date_order_placed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请告诉我在“2009-01-01”和“2010-01-01”之间下订单的客户的姓名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (date_order_placed INTEGER, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户在“2009-01-01”和“2010-01-01”之间发出订单？找出他们的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (date_order_placed INTEGER, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一张在“1975-01-01”和“1976-01-01”之间下订单的不同的产品ID的清单。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\""
      }
    ],
    "system": "CREATE TABLE orders (date_order_placed INTEGER, order_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“1975-01-01”和“1976－01-01”之间订购的产品有哪些不同的ID？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\""
      }
    ],
    "system": "CREATE TABLE orders (date_order_placed INTEGER, order_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出同时具有“在路上”和“装运”订单状态的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"在路上\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"装运\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户同时拥有“在路上”和“装运”作为订单状态？列出客户名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"在路上\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"装运\""
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出同时具有“在路上”和“装运”订单状态的客户的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"在路上\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"装运\""
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户同时拥有“在路上”和“装运”作为订单状态？列出客户ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"在路上\" INTERSECT SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"装运\""
      }
    ],
    "system": "CREATE TABLE customers (customer_id VARCHAR), CREATE TABLE orders (order_status VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "货物的追踪号码是3452是什么时候发出的？把日期告诉我。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, date_order_placed VARCHAR), CREATE TABLE shipments (order_id VARCHAR, shipment_tracking_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "货物的追踪号码是3452的订单是在那一天发出的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, date_order_placed VARCHAR), CREATE TABLE shipments (order_id VARCHAR, shipment_tracking_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发票号码是10的订单的邮寄日期是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, date_order_placed VARCHAR), CREATE TABLE shipments (order_id VARCHAR, invoice_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发票号码10的订单是在哪一天寄来的？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, date_order_placed VARCHAR), CREATE TABLE shipments (order_id VARCHAR, invoice_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有订单中每个产品的数量和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个产品，返回它的ID和它被订购的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) ,  T3.product_id FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有订单中每个产品的名称和数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个产品，显示它的名称和它被订购的次数。"
      },
      {
        "from": "assistant",
        "value": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“2000-01-01”之后被装运订单的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\""
      }
    ],
    "system": "CREATE TABLE shipments (order_id VARCHAR, shipment_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些订单在“2000-01-01”之后有装运？把订单ID给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id FROM shipments WHERE shipment_date > \"2000-01-01\""
      }
    ],
    "system": "CREATE TABLE shipments (order_id VARCHAR, shipment_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最近装运的订单ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)"
      }
    ],
    "system": "CREATE TABLE shipments (order_id VARCHAR, shipment_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近装运是哪个订单？把订单ID给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)"
      }
    ],
    "system": "CREATE TABLE shipments (order_id VARCHAR, shipment_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序列出所有不同产品的名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_name FROM products ORDER BY product_name"
      }
    ],
    "system": "CREATE TABLE products (product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按字母顺序排序所有不同的产品。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT product_name FROM products ORDER BY product_name"
      }
    ],
    "system": "CREATE TABLE products (product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出由放置日期排序的所有不同订单的ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, date_order_placed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按放置日期排序的不同订单的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT order_id FROM orders ORDER BY date_order_placed"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR, date_order_placed VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "订单中有最多项目的ID是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR), CREATE TABLE order_items (order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个订单处理最多的项目？返回订单ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE orders (order_id VARCHAR), CREATE TABLE order_items (order_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "订单数量最多的客户叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出订单最多的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“1989-09-03”之前或“2007-12-25”之后创建的发票号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
      }
    ],
    "system": "CREATE TABLE invoices (invoice_date INTEGER, invoice_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“1989-09-03”年之前或“2007-12-25”年之后创建的发票号码是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
      }
    ],
    "system": "CREATE TABLE invoices (invoice_date INTEGER, invoice_number VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“1989-09-03”年之前或“2007-12-25”年之后创建的发票号码的不同细节。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
      }
    ],
    "system": "CREATE TABLE invoices (invoice_details VARCHAR, invoice_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“1989-09-03”年之前或“2007-12-25”年之后创建的发票号码的不同细节是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT invoice_details FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\""
      }
    ],
    "system": "CREATE TABLE invoices (invoice_details VARCHAR, invoice_date INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "对于每个至少有两个订单的客户，查找客户名字和订单数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE orders (customer_id VARCHAR), CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个客户至少订了两个订单？给我每个客户的名字和订单数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE orders (customer_id VARCHAR), CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出最多两个订单的客户的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2"
      }
    ],
    "system": "CREATE TABLE orders (customer_id VARCHAR), CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有两个或更少订单的客户的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2"
      }
    ],
    "system": "CREATE TABLE orders (customer_id VARCHAR), CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出曾经购买产品“食物”的顾客的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"食物\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少一次购买“食品”的顾客的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"食品\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出曾经取消购买产品“食品”的客户的姓名（项目状态为“取消”）。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"取消\" AND T4.product_name = \"食品\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR, order_item_status VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些客户曾经取消购买产品“食品”（项目状态是“取消”）？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"取消\" AND T4.product_name = \"食品\" GROUP BY T1.customer_id HAVING count(*)  >=  1"
      }
    ],
    "system": "CREATE TABLE customers (customer_name VARCHAR, customer_id VARCHAR), CREATE TABLE orders (order_id VARCHAR, customer_id VARCHAR), CREATE TABLE order_items (product_id VARCHAR, order_id VARCHAR, order_item_status VARCHAR), CREATE TABLE products (product_id VARCHAR, product_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少建筑师是“女”性？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM architect WHERE gender  =  \"女\""
      }
    ],
    "system": "CREATE TABLE architect (gender VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按其姓名的字典顺序列出所有“男”性架构师的姓名、国籍和ID。"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  \"男\" ORDER BY name"
      }
    ],
    "system": "CREATE TABLE architect (gender VARCHAR, id VARCHAR, name VARCHAR, nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以米为单位桥梁的最大长度是多少？建筑师的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id"
      }
    ],
    "system": "CREATE TABLE bridge (length_meters INTEGER, architect_id VARCHAR), CREATE TABLE architect (id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "桥的平均长度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(length_feet) FROM bridge"
      }
    ],
    "system": "CREATE TABLE bridge (length_feet INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“风车”类型的工厂的名字和年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name ,  built_year FROM mill WHERE TYPE  =  \"风车\""
      }
    ],
    "system": "CREATE TABLE mill (built_year VARCHAR, name VARCHAR, TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "建造过工厂的不同的建筑师的名字和国籍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS t2 ON T1.id  =  T2.architect_id"
      }
    ],
    "system": "CREATE TABLE architect (id VARCHAR, name VARCHAR, nationality VARCHAR), CREATE TABLE mill (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不在“长沙”的工厂的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM mill WHERE LOCATION != \"长沙\""
      }
    ],
    "system": "CREATE TABLE mill (LOCATION VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“美国”或“加拿大”的建筑师建造的工厂有哪些类型？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  \"美国\" OR T2.nationality  =  \"加拿大\""
      }
    ],
    "system": "CREATE TABLE mill (type VARCHAR, architect_id VARCHAR), CREATE TABLE architect (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "建造至少3座桥梁的建筑师的ID和名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3"
      }
    ],
    "system": "CREATE TABLE architect (name VARCHAR, id VARCHAR), CREATE TABLE bridge (architect_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "建造工厂最多的建筑师的 ID 、姓名和国籍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE architect (name VARCHAR, id VARCHAR, nationality VARCHAR), CREATE TABLE mill (architect_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "建造两座桥或一座工厂的建筑师的 ID 、姓名和性别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1"
      }
    ],
    "system": "CREATE TABLE architect (name VARCHAR, id VARCHAR, gender VARCHAR), CREATE TABLE bridge (architect_id VARCHAR), CREATE TABLE mill (architect_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江大桥”或“赵州桥”的位置是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT LOCATION FROM bridge WHERE name  =  \"长江大桥\" OR name  =  \"赵州桥\""
      }
    ],
    "system": "CREATE TABLE bridge (LOCATION VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个工厂名称包含中文单词“江”？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM mill WHERE name LIKE \"%江%\""
      }
    ],
    "system": "CREATE TABLE mill (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "建造一座超过80米的桥梁的建筑师建造的工厂叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80"
      }
    ],
    "system": "CREATE TABLE mill (architect_id VARCHAR, name VARCHAR), CREATE TABLE architect (Id VARCHAR), CREATE TABLE bridge (length_meters INTEGER, architect_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最常见的工厂类型是什么，有多少个？"
      },
      {
        "from": "assistant",
        "value": "SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE mill (TYPE VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1850年以前有多少建筑师返回没有建造过工厂？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year  <  1850 );"
      }
    ],
    "system": "CREATE TABLE architect (architect_id VARCHAR, id VARCHAR, built_year INTEGER), CREATE TABLE mill (architect_id VARCHAR, id VARCHAR, built_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有由“美国”建筑师设计的桥梁的名称，并根据桥长度对结果进行排序。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM bridge AS t1 JOIN architect AS t2 ON t1.architect_id  =  t2.id WHERE t2.nationality  =  \"美国\" ORDER BY t1.length_feet"
      }
    ],
    "system": "CREATE TABLE bridge (architect_id VARCHAR, name VARCHAR, length_feet VARCHAR), CREATE TABLE architect (id VARCHAR, nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少读书俱乐部？"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM book_club"
      }
    ],
    "system": "CREATE TABLE book_club (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计读书俱乐部的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT count(*) FROM book_club"
      }
    ],
    "system": "CREATE TABLE book_club (Id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "展示1989年后所有书籍的书名、作者和编辑。"
      },
      {
        "from": "assistant",
        "value": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989"
      }
    ],
    "system": "CREATE TABLE book_club (book_title VARCHAR, YEAR INTEGER, author_or_editor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与1989年以后出版的书籍相对应的书名、作者或编辑是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989"
      }
    ],
    "system": "CREATE TABLE book_club (book_title VARCHAR, YEAR INTEGER, author_or_editor VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有不同的图书出版商。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT publisher FROM book_club"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是所有不同的图书出版商？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT publisher FROM book_club"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示按年份的顺序递减的所有图书的年份、书名和出版商。"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC"
      }
    ],
    "system": "CREATE TABLE book_club (book_title VARCHAR, publisher VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按年份递减，所有图书的年份、书名和出版商是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR ,  book_title ,  publisher FROM book_club ORDER BY YEAR DESC"
      }
    ],
    "system": "CREATE TABLE book_club (book_title VARCHAR, publisher VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有出版商和每个出版商的图书数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个出版商有多少本书？"
      },
      {
        "from": "assistant",
        "value": "SELECT publisher ,  count(*) FROM book_club GROUP BY publisher"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个出版商的图书数量最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回出版最多图书的出版商。"
      },
      {
        "from": "assistant",
        "value": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有图书类别和每类图书的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT category ,  count(*) FROM book_club GROUP BY category"
      }
    ],
    "system": "CREATE TABLE book_club (category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一类有多少本书？"
      },
      {
        "from": "assistant",
        "value": "SELECT category ,  count(*) FROM book_club GROUP BY category"
      }
    ],
    "system": "CREATE TABLE book_club (category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出至少在1989年后有两本书的类别。"
      },
      {
        "from": "assistant",
        "value": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE book_club (YEAR INTEGER, category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1989年以后两个或多个相应的书籍类别是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2"
      }
    ],
    "system": "CREATE TABLE book_club (YEAR INTEGER, category VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "向出版商展示一本1989年出版的书和1990年出版的书。"
      },
      {
        "from": "assistant",
        "value": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "出版商在1989年和1990年出版了什么书？"
      },
      {
        "from": "assistant",
        "value": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有在1989年后没有出版书籍的出版商。"
      },
      {
        "from": "assistant",
        "value": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些出版商在1989年没有出版过一本书？"
      },
      {
        "from": "assistant",
        "value": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989"
      }
    ],
    "system": "CREATE TABLE book_club (publisher VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按预算排序显示所有电影名称，年份和导演。"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, director VARCHAR, budget_million VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "以百万计的预算订购的所有电影的片名、年限和导演都有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  YEAR ,  director FROM movie ORDER BY budget_million"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, director VARCHAR, budget_million VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少电影导演？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT director) FROM movie"
      }
    ],
    "system": "CREATE TABLE movie (director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计不同导游的人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT (DISTINCT director) FROM movie"
      }
    ],
    "system": "CREATE TABLE movie (director VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年或以前全球总票房最高的电影的片名和导演是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, YEAR INTEGER, director VARCHAR, gross_worldwide VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年或更早时候发行的全球总票房最高的电影的片名和导演。"
      },
      {
        "from": "assistant",
        "value": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, YEAR INTEGER, director VARCHAR, gross_worldwide VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示有电影在1999年和2000年所有导演的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999"
      }
    ],
    "system": "CREATE TABLE movie (director VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些导演在1999年和2000年都有电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999"
      }
    ],
    "system": "CREATE TABLE movie (director VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有在1999年或2000年有电影的导演的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000"
      }
    ],
    "system": "CREATE TABLE movie (director VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪位导演在1999年或2000年有一部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT director FROM movie WHERE YEAR  =  1999 OR YEAR  =  2000"
      }
    ],
    "system": "CREATE TABLE movie (director VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2000年之前，所有电影的平均、最大和最小预算是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000"
      }
    ],
    "system": "CREATE TABLE movie (budget_million INTEGER, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2000年之前制作的电影的平均、最高和最低的百万级别预算。"
      },
      {
        "from": "assistant",
        "value": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000"
      }
    ],
    "system": "CREATE TABLE movie (budget_million INTEGER, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出由“中国社会科学出版社”出版的书的所有公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  \"中国社会科学出版社\""
      }
    ],
    "system": "CREATE TABLE culture_company (company_name VARCHAR, book_club_id VARCHAR), CREATE TABLE book_club (publisher VARCHAR, book_club_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“中国社会科学出版社”出版的一本书的公司名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  \"中国社会科学出版社\""
      }
    ],
    "system": "CREATE TABLE culture_company (company_name VARCHAR, book_club_id VARCHAR), CREATE TABLE book_club (publisher VARCHAR, book_club_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“中国”所有公司的电影片名和书名。"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  \"中国\""
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, movie_id VARCHAR), CREATE TABLE culture_company (book_club_id VARCHAR, incorporated_in VARCHAR, movie_id VARCHAR), CREATE TABLE book_club (book_title VARCHAR, book_club_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“中国”注册的公司的电影和书籍的名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  \"中国\""
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, movie_id VARCHAR), CREATE TABLE culture_company (book_club_id VARCHAR, incorporated_in VARCHAR, movie_id VARCHAR), CREATE TABLE book_club (book_title VARCHAR, book_club_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示所有在1999年导演电影的公司名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999"
      }
    ],
    "system": "CREATE TABLE movie (year VARCHAR, movie_id VARCHAR), CREATE TABLE culture_company (company_name VARCHAR, movie_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1999年导演相应电影的所有公司名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT T2.company_name FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id WHERE T1.year  =  1999"
      }
    ],
    "system": "CREATE TABLE movie (year VARCHAR, movie_id VARCHAR), CREATE TABLE culture_company (company_name VARCHAR, movie_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”那个城市人口最多"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”人口最多的地区在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”哪个城市人口最多"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”哪些城市公民人数最多"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”哪些城市人口最多"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”人口最多的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按人口算，“山东”最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”人口数量最多的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"山东\" ) AND state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些河流流经最大的城市"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, population INTEGER, traverse VARCHAR), CREATE TABLE city (state_name VARCHAR, river_name VARCHAR, population INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山西”有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state WHERE state_name  =  \"山西\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山西”的面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state WHERE state_name  =  \"山西\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山西”的大小有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state WHERE state_name  =  \"山西\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山西”的面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state WHERE state_name  =  \"山西\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山西”的面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state WHERE state_name  =  \"山西\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山西”的面积是多少平方公里？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state WHERE state_name  =  \"山西\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”有多少人"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人住在“浙江”？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”有多少居民居住"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”有多少人口"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”的人口是多少"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”的人口数是多少"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”省有多少人"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "你能告诉我“浙江”的人口吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”有多少人"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”有多少市民"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人留在“浙江”"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”有多少市民居住"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省人口最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最少的省是什么省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口数目最低的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我“四川”的城市"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "告诉我“四川”有什么城市"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”有哪些城市"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”有什么城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的城市有什么"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我位于“四川”的城市"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "省会是“郑州”的省的面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state WHERE capital  =  \"郑州\";"
      }
    ],
    "system": "CREATE TABLE state (area VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我位于“浙江”的湖泊"
      },
      {
        "from": "assistant",
        "value": "SELECT lake_name FROM lake WHERE state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE lake (state_name VARCHAR, lake_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”的主要湖泊名称"
      },
      {
        "from": "assistant",
        "value": "SELECT lake_name FROM lake WHERE area  >  750 AND state_name  =  \"浙江\";"
      }
    ],
    "system": "CREATE TABLE lake (state_name VARCHAR, lake_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出省的名字"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我所有的省的名称"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”流经哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”经过哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省在“黄河”边界"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省在“黄河”边界"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”流经了哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”在哪里"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”流经哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”喝水流经了哪些省份？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”经过哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”经历了哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省内有“黄河”流过"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省内有名字为“黄河”的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”是通过哪些省流动的？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”在什么省附近？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”是流经哪些省"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄河”经过哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE river_name  =  \"黄河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省人口最多"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的省是哪个省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省人口最多"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省人口最多"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省的人口数量最多"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省有最多的人？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省份的人口是最多的"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国人口最多的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个州人口最多"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黑龙江”最低海拔是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_elevation FROM highlow WHERE state_name  =  \"黑龙江\";"
      }
    ],
    "system": "CREATE TABLE highlow (lowest_elevation VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每一最低点是海平面的省的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point  ,  state_name FROM highlow WHERE lowest_elevation  =  0;"
      }
    ],
    "system": "CREATE TABLE highlow (lowest_elevation VARCHAR, state_name VARCHAR, highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最长河流的长度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长的河流有多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "流经“四川”最长的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"四川\" ) AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”最大的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"四川\" ) AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”最长的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"四川\" ) AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”最大的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"四川\" ) AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "流经“四川”最长的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"四川\" ) AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”最大的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"四川\" ) AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湖南”有多少条河流？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"湖南\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我“湖南”的数量"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"湖南\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湖南”有多少条河流？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"湖南\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湖南”有多少数量的河流？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"湖南\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少河流流过“湖南”"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"湖南\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湖南”被找出有多少条河流"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"湖南\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湖南”有多少条河流？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE traverse  =  \"湖南\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省与“陕西”临近"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省与“陕西”接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪什么省与“陕西”接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我“陕西”边境的省"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省与“陕西”接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“陕西”附近是什么省？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“陕西”周围是哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省与“陕西”接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“陕西”的邻近省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省毗邻“陕西”"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“陕西”接壤的省"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省与“陕西”接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“陕西”的毗邻省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "说出“广东”所有的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“广东”的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”所有的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“广东”的河流有什么"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”的河流有那些"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”有哪些河流"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流流经“广东”"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "河流流经“广东”有什么"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流经过“广东”"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”省有的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”河流的名字"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”有哪些河流"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪条河流流经“广东”"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "穿越“广东”的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流流经“广东”"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“昆明”在什么省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“昆明”在哪里"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“昆明”在什么省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省的城市命名为“昆明”"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省的城市命名为“昆明”"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“昆明”是在哪个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省有一个叫“昆明”的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有什么省有“昆明”这个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省有“昆明”这个市？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“昆明”位于什么省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“昆明”在哪个省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“昆明”所在的城市是哪个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的哪些省有“昆明”这个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"springfield\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "面积最大的国家的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大省的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”有多少人"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”的人口是多少"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人居住在“重庆”"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”的人口数"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”城的人口是多少"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”市有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”的人口"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”的人数"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”有多少人"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”有多少居民？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”公民人数"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”有多少市民"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"重庆\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“辽宁”最小的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name  =  \"辽宁\" ) AND state_name  =  \"辽宁\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省位于中国最大的河流上？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长的河流经过哪个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省有最长的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长的河流流经的省是什么省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长的河流穿过哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "面积最小的省的人口密度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小省的人口密度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省的地点高于“贵州”最高点？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"贵州\" );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省的地点高于“贵州”的最高点？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"贵州\" );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省的高点高于“贵州”？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  \"贵州\" );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“福建”最高海拔是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"福建\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“福建”最高点有多高？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"福建\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“福建”的最高地点有多高？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"福建\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“福建”的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"福建\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“福建”最高点的高度？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_elevation FROM highlow WHERE state_name  =  \"福建\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一条穿过中国的最长的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那条是中国最长的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最长的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最长的河流的名字"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流是中国最长的河流？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最长的河流是什那一条？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最长的河流叫什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的城市是哪个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省有最大的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省有最大的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的城市是哪个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大的城市中最小的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER), CREATE TABLE state (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大的省是什么省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大面积的省是什么省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省面积最大"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国大陆面积最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "描述最大面积的省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我最大的省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的省是哪一个？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”周边省的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR, border VARCHAR), CREATE TABLE border_info (state_name VARCHAR, highest_point VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”周边省的高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR, border VARCHAR), CREATE TABLE border_info (state_name VARCHAR, highest_point VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“贵州”接壤省的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"贵州\" ) ORDER BY highest_elevation DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR, border VARCHAR, highest_elevation VARCHAR), CREATE TABLE border_info (state_name VARCHAR, highest_point VARCHAR, border VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“贵州”接壤省的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"贵州\" ) ORDER BY highest_elevation DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR, border VARCHAR, highest_elevation VARCHAR), CREATE TABLE border_info (state_name VARCHAR, highest_point VARCHAR, border VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最低的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省市人口密度最低的？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省人口密度最低"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省人口密度最小"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最稀疏的省是什么省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省人口密度最稀疏？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最低的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省人口密度是最小的？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最小的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的最高点在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的最高地点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”最高的山是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "你能告诉我“四川”的最高点是什么吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省没有毗连状态？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR), CREATE TABLE border_info (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "周围没有其他省的省的名字"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR), CREATE TABLE border_info (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省的边界没有其他省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT state_name FROM border_info );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR), CREATE TABLE border_info (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最小的省面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "计算海拔比“宁夏”低的省。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM highlow WHERE lowest_elevation  <  ( SELECT lowest_elevation FROM highlow WHERE state_name  =  \"宁夏\" );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“珠穆朗玛峰”有多高？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"珠穆朗玛峰\";"
      }
    ],
    "system": "CREATE TABLE highlow (highest_point VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“珠穆朗玛峰”有多高？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"珠穆朗玛峰\";"
      }
    ],
    "system": "CREATE TABLE highlow (highest_point VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“珠穆朗玛峰”的最大海拔是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_elevation FROM highlow WHERE highest_point  =  \"珠穆朗玛峰\";"
      }
    ],
    "system": "CREATE TABLE highlow (highest_point VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最高点有多高？"
      },
      {
        "from": "assistant",
        "value": "SELECT MAX ( highest_elevation ) FROM highlow;"
      }
    ],
    "system": "CREATE TABLE highlow (highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最高海拔是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT MAX ( highest_elevation ) FROM highlow;"
      }
    ],
    "system": "CREATE TABLE highlow (highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最高点的海拔是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT MAX ( highest_elevation ) FROM highlow;"
      }
    ],
    "system": "CREATE TABLE highlow (highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最高点的高度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT MAX ( highest_elevation ) FROM highlow;"
      }
    ],
    "system": "CREATE TABLE highlow (highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湄公河”有多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE river_name  =  \"湄公河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湄公河”的长度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE river_name  =  \"湄公河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湄公河”是多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE river_name  =  \"湄公河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湄公河”有多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE river_name  =  \"湄公河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湄公河”的里程有多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE river_name  =  \"湄公河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湄公河”的河流长度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE river_name  =  \"湄公河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”最长的河流有多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"四川\" ) AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "贯穿“四川”的最长河流的长度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"四川\" ) AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“台湾”有多少市？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( capital ) FROM state WHERE state_name  =  \"台湾\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国有多少城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在中国有多少城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在中国的城市有多少"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国城市的数量有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的城市有多少"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少个大城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的城市有多少公民？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少条河名字叫“大靖河”"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"大靖河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有几条河叫“大靖河”"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE river_name  =  \"大靖河\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“北京”“大兴区”的人口是多少"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"大兴区\" AND state_name  =  \"北京\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人住在“北京”的“大兴区”？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  \"大兴区\" AND state_name  =  \"北京\";"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人住在“辽宁”省最大的城市"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"辽宁\" ) AND state_name  =  \"辽宁\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“辽宁”最大的城市有多大？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"辽宁\" ) AND state_name  =  \"辽宁\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”省会有多少人"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR, state_name VARCHAR, capital VARCHAR), CREATE TABLE state (population VARCHAR, city_name VARCHAR, state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的省会的面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE state_name  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR, state_name VARCHAR, capital VARCHAR), CREATE TABLE state (population VARCHAR, city_name VARCHAR, state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国有多少人居住？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( population ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这50个省的人口总和是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( population ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国有多少省"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那里有多少个省"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在中国有多少省份？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国有多少个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在中国省份的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国那边有多少省？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省与“陕西”接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“陕西”边界有多少个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“陕西”与多少省接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“陕西”接壤的省数"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“陕西”周边省的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  \"陕西\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省与人口最多的省接壤？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( border ) FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, population INTEGER), CREATE TABLE state (state_name VARCHAR, border VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省没有河流"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT state_name ) FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, traverse VARCHAR), CREATE TABLE river (state_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省的最高点高于中国首都最大的省会的最高点？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM highlow WHERE highest_elevation  >  ( SELECT highest_elevation FROM highlow WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  ( SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city ) ) ) );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, city_name VARCHAR, highest_elevation INTEGER, capital VARCHAR, population INTEGER), CREATE TABLE state (state_name VARCHAR, city_name VARCHAR, highest_elevation INTEGER, capital VARCHAR, population INTEGER), CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, highest_elevation INTEGER, capital VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "说出“广东”的主要河流"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”主要河流有哪些"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”主要河流是什么"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "贯穿“广东”的主要河流是什么"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”最长的河流是通过哪些省流动的？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”省的首都是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的首都是什么"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的首都是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "你能告诉我“四川”的省会吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“四川”相邻省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”接壤省的省会是什么省？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”边界省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“四川”边境的那些省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.capital FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”的流经的省有哪些城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (state_name VARCHAR, city_name VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "省内最高点的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, highest_elevation INTEGER), CREATE TABLE highlow (state_name VARCHAR, city_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有省的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow;"
      }
    ],
    "system": "CREATE TABLE highlow (highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“安徽”的主要城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"安徽\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“安徽”省的主要城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"安徽\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“安徽”的主要城市在哪里"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"安徽\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“安徽”的主要城市"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"安徽\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“安徽”主要城市的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"安徽\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“安徽”的主要城市有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"安徽\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“安徽”的主要城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  \"安徽\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经省内的主要城市有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 AND river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER, population INTEGER), CREATE TABLE river (state_name VARCHAR, city_name VARCHAR, river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的主要城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的重要城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的主要城市有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国各省的人口密度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state;"
      }
    ],
    "system": "CREATE TABLE state (density VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经省的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”经过的省人口数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经的省人口数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经省所在的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”经过的省的居民数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经的省人口是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流动过的省人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经的所有的省人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (population VARCHAR, state_name VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“四川”接壤的省的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.population FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“青海”主要城市的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"青海\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“青海”所有主要城市的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"青海\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“青海”主要城市的人口的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE population  >  150000 AND state_name  =  \"青海\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么城市有最多的人"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国什么城市人口密度最高"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个中国城市的人口密度最高"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市人口最多"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的城市是那个？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在中国最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的省会城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的省会城市是那个？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国人口最多的首都是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的资本是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个省会有最多的人口？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是最大的省会"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有城市“郑州”的省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.state_name  =  t1.state_name WHERE t1.city_name  =  \"郑州\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR), CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (capital VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最大的省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT capital FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (capital VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "居住人口最多的省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (capital VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "河流最长的省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR, traverse VARCHAR, LENGTH INTEGER), CREATE TABLE river (state_name VARCHAR, capital VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有省的面积之和是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( area ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有省的面积合计是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( area ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国有多少平方公里"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( area ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的总面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( area ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”的密度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state WHERE state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, density VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”的人口密度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state WHERE state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, density VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“山东”的密度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state WHERE state_name  =  \"山东\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, density VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最高的山是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
      }
    ],
    "system": "CREATE TABLE mountain (mountain_name VARCHAR, mountain_altitude INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在中国最高的山是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
      }
    ],
    "system": "CREATE TABLE mountain (mountain_name VARCHAR, mountain_altitude INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最高的山峰是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
      }
    ],
    "system": "CREATE TABLE mountain (mountain_name VARCHAR, mountain_altitude INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最高的山是那个？"
      },
      {
        "from": "assistant",
        "value": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
      }
    ],
    "system": "CREATE TABLE mountain (mountain_name VARCHAR, mountain_altitude INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "省会是“济南”省的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"济南\" );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR, capital VARCHAR), CREATE TABLE state (state_name VARCHAR, highest_point VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "省会为“济南”省的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"济南\" );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR, capital VARCHAR), CREATE TABLE state (state_name VARCHAR, highest_point VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的最高的地方是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (highest_point VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (highest_point VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "这个国家的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (highest_point VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的最高点在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (highest_point VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的最高的是什么地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (highest_point VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最小的国家的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_point FROM highlow WHERE state_name IN ( SELECT state_name FROM state WHERE density  =  ( SELECT MIN ( density ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR, density INTEGER), CREATE TABLE state (state_name VARCHAR, highest_point VARCHAR, density INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”经过的最小的省最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" ) AND area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" ) ) ) ORDER BY population DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, river_name VARCHAR, traverse VARCHAR, population VARCHAR, area INTEGER), CREATE TABLE state (state_name VARCHAR, city_name VARCHAR, river_name VARCHAR, traverse VARCHAR, population VARCHAR, area INTEGER), CREATE TABLE river (state_name VARCHAR, city_name VARCHAR, river_name VARCHAR, traverse VARCHAR, population VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最小的省内的最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER), CREATE TABLE state (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小的省中的最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER), CREATE TABLE state (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”临近的最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“浙江”接壤的最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”附近最大的省是哪一个省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大省内中最长的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER, area INTEGER), CREATE TABLE state (state_name VARCHAR, river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“新疆”边界最长的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "流经“新疆”接壤省的最长的河流是什么"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "流经“新疆”附近省的最长的河流是什么"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" ) ) AND traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "流经省内最主要城市的最长的河是那条"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse  =  ( SELECT state_name FROM city WHERE population  >  150000 GROUP BY state_name ORDER BY COUNT ( city_name ) DESC LIMIT 1 ) ORDER BY LENGTH DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, city_name VARCHAR, LENGTH VARCHAR, traverse VARCHAR, population INTEGER), CREATE TABLE city (state_name VARCHAR, river_name VARCHAR, city_name VARCHAR, LENGTH VARCHAR, traverse VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“甘肃”的最低点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE state_name  =  \"甘肃\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“甘肃”最低点是多少米？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE state_name  =  \"甘肃\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“甘肃”省的最低点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE state_name  =  \"甘肃\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“甘肃”最低点在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE state_name  =  \"甘肃\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“甘肃”的最低的地方是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE state_name  =  \"甘肃\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“甘肃”最低地区在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE state_name  =  \"甘肃\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的最低的点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (lowest_point VARCHAR, lowest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最低点是什么地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (lowest_point VARCHAR, lowest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的最低点在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (lowest_point VARCHAR, lowest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的最低点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (lowest_point VARCHAR, lowest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”穿过的所有省中最低的点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" ) ORDER BY lowest_elevation LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, river_name VARCHAR, traverse VARCHAR, lowest_elevation VARCHAR, lowest_point VARCHAR), CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, traverse VARCHAR, lowest_elevation VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个是“长江”穿过的省的最低点。"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_point FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" ) ORDER BY lowest_elevation LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, river_name VARCHAR, traverse VARCHAR, lowest_elevation VARCHAR, lowest_point VARCHAR), CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, traverse VARCHAR, lowest_elevation VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最密集的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省人口的密度是最高的"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省的密度最大？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最高的省是哪个省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最密集的省是什么省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最大的省是哪一个省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国人口密度最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省是密度最大的？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density INTEGER, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经的省中人口最多的省是哪一个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (traverse VARCHAR, state_name VARCHAR, population INTEGER, river_name VARCHAR), CREATE TABLE river (traverse VARCHAR, state_name VARCHAR, population INTEGER, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”所流经的省中什么省人口最多"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (traverse VARCHAR, state_name VARCHAR, population INTEGER, river_name VARCHAR), CREATE TABLE river (traverse VARCHAR, state_name VARCHAR, population INTEGER, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大省中的人口密度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "面积最大的省中人口最多的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE city (area INTEGER, state_name VARCHAR, population INTEGER), CREATE TABLE state (area INTEGER, state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小的省的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最高的国家的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, density INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口密度最大的省有多少人居住？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE density  =  ( SELECT MAX ( density ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, density INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最小的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在中国最小的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个城市的人口最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最少的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小与“四川”接壤的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”接壤的边界最小的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个与“四川”接壤的省的面积最小？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经的最小的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE state (traverse VARCHAR, state_name VARCHAR, area INTEGER, river_name VARCHAR), CREATE TABLE river (traverse VARCHAR, state_name VARCHAR, area INTEGER, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小面积的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个是最小的省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省是最小的"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最小的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "面积最小的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省的面积最小？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国所有河流的总长度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( LENGTH ) FROM river;"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流过最多个数的省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪条河流穿过最多个数的省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪条河流贯穿最多数省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "流经最多数省是哪条河流"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流横贯最多数省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "贯穿最多数省的河流是哪条"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流贯穿最多数省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river GROUP BY ( river_name ) ORDER BY COUNT ( DISTINCT traverse ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“宁夏”接壤省的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"宁夏\" );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些河流横贯“宁夏”的接壤省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"宁夏\" );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流流经与“宁夏”接近的省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"宁夏\" );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“新疆”接壤的省人口最多的是哪个省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" ) ORDER BY population DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, border VARCHAR), CREATE TABLE border_info (population VARCHAR, state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“新疆”接壤的哪个省的人口最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" ) ORDER BY population DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, border VARCHAR), CREATE TABLE border_info (population VARCHAR, state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“新疆”接壤的人口最多的省是哪一个省"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" ) ORDER BY population DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, border VARCHAR), CREATE TABLE border_info (population VARCHAR, state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“新疆”附近最多人口的省是那个？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"新疆\" ) ORDER BY population DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, border VARCHAR), CREATE TABLE border_info (population VARCHAR, state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省包含“大靖河”穿越的最高点？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"大靖河\" ) );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (state_name VARCHAR, highest_elevation INTEGER, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省拥有最大的省会"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省的省会是最大的？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省有最长的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( DISTINCT LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省拥有最小的城市人口？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省边境靠近“贵州”？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"贵州\" );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”都经过什么省？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (state_name VARCHAR, border VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经那些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (state_name VARCHAR, border VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流动时通过哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (state_name VARCHAR, border VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省与“四川”接壤并有一条大河？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM border_info WHERE border  =  \"四川\" AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  >  750 );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER), CREATE TABLE river (state_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省与人口最多的省接壤？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, population INTEGER), CREATE TABLE state (state_name VARCHAR, border VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与人口最多的省邻近的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, population INTEGER), CREATE TABLE state (state_name VARCHAR, border VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省与最小地区接壤？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE state (state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个省与最小地区接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE state (state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省至少有一条主要河流？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE LENGTH  >  750;"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "山在哪些省份"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM mountain;"
      }
    ],
    "system": "CREATE TABLE mountain (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最高的山在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
      }
    ],
    "system": "CREATE TABLE mountain (state_name VARCHAR, mountain_altitude INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省拥有全国最高的山峰"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain );"
      }
    ],
    "system": "CREATE TABLE mountain (state_name VARCHAR, mountain_altitude INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小的城市在哪里"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的河流穿过的省密度是什么"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, density VARCHAR, traverse VARCHAR, LENGTH INTEGER), CREATE TABLE river (state_name VARCHAR, density VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一个是不在“辽宁”最高的山峰"
      },
      {
        "from": "assistant",
        "value": "SELECT mountain_name FROM mountain WHERE mountain_altitude  =  ( SELECT MAX ( mountain_altitude ) FROM mountain WHERE state_name != \"辽宁\" );"
      }
    ],
    "system": "CREATE TABLE mountain (state_name VARCHAR, mountain_name VARCHAR, mountain_altitude INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些河流无法穿越“新疆”"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"新疆\" );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些河流不会穿过“新疆”"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE river_name NOT IN ( SELECT river_name FROM river WHERE traverse  =  \"新疆\" );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些河流不贯穿“中国” "
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE country_name != \"中国\";"
      }
    ],
    "system": "CREATE TABLE river (country_name VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些河流流经的省与省会是“成都”所在的省接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"成都\" ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, capital VARCHAR), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, capital VARCHAR), CREATE TABLE state (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流流经与省会是“成都”接壤的省？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE capital  =  \"成都\" ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, capital VARCHAR), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, capital VARCHAR), CREATE TABLE state (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省的人数最少？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( t1.population ) FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name );"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR, population INTEGER), CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省海拔最高"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省有最高的地点？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省的海拔是最高的"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的最高地点是在哪个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省有最高的海拔"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国海拔最高的省是什么省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "包含最高点的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "是什么省包含了中国的最高点？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省的海拔是最低的"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最低点的省的名字是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "存在最低地点的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, lowest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“湖南”省接壤的哪个省有最低地点"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"湖南\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"湖南\" );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, border VARCHAR, lowest_elevation INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, lowest_elevation INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省的城市人口平均是最小的"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city GROUP BY state_name ORDER BY AVG ( population ) LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“泰山”位于哪个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM mountain WHERE mountain_name  =  \"泰山\";"
      }
    ],
    "system": "CREATE TABLE mountain (state_name VARCHAR, mountain_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“泰山”在什么省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM mountain WHERE mountain_name  =  \"泰山\";"
      }
    ],
    "system": "CREATE TABLE mountain (state_name VARCHAR, mountain_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“泰山”在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM mountain WHERE mountain_name  =  \"泰山\";"
      }
    ],
    "system": "CREATE TABLE mountain (state_name VARCHAR, mountain_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“惠特尼山”位于哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM mountain WHERE mountain_name  =  \"whitney\";"
      }
    ],
    "system": "CREATE TABLE mountain (state_name VARCHAR, mountain_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省有一条河"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river;"
      }
    ],
    "system": "CREATE TABLE river (traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省有河流穿过它们？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river;"
      }
    ],
    "system": "CREATE TABLE river (traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省有一个名叫“长沙”的大城市"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE city_name  =  \"长沙\" AND population  >  150000;"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“浙江”临近省的最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, border VARCHAR, population INTEGER), CREATE TABLE border_info (state_name VARCHAR, city_name VARCHAR, border VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“浙江”接壤省的最大的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"浙江\" );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, border VARCHAR, population INTEGER), CREATE TABLE border_info (state_name VARCHAR, city_name VARCHAR, border VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少河流不穿越省会是“郑州”的省"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE traverse NOT IN ( SELECT state_name FROM state WHERE capital  =  \"郑州\" );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, capital VARCHAR, traverse VARCHAR), CREATE TABLE state (state_name VARCHAR, river_name VARCHAR, capital VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”最短的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river WHERE traverse  =  \"四川\" ) AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最小的省的主要城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER), CREATE TABLE state (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“长江”流经的最大省的省会的人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( t1.area ) FROM state AS t1 JOIN river AS t2 ON t1.state_name  =  t2.traverse WHERE t2.river_name  =  \"长江\" ) );"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR, area INTEGER, capital VARCHAR), CREATE TABLE state (state_name VARCHAR, area INTEGER), CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最短的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最短的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国距离最短的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在中国最短的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪条河流最短"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“四川”接壤的省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" ) );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR, border VARCHAR), CREATE TABLE border_info (state_name VARCHAR, capital VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最小的省中的最小的城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  =  ( SELECT MIN ( population ) FROM city WHERE state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER), CREATE TABLE state (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“四川”临近的最大的省人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE border_info (population VARCHAR, state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南昌”是什么省的省会？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE capital  =  \"南昌\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省的省会是“南昌”？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE capital  =  \"南昌\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南昌”是哪个省的省会"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE capital  =  \"南昌\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "首都是“南昌”的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE capital  =  \"南昌\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流流经人口数最多的省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, population INTEGER, traverse VARCHAR), CREATE TABLE state (state_name VARCHAR, river_name VARCHAR, population INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与人口最多的省接壤的最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) ) ) AND state_name IN ( SELECT state_name FROM border_info WHERE border IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, border VARCHAR, population INTEGER, area INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, population INTEGER, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国有多少条的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river;"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "说出中国的所有的省会"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT capital FROM state;"
      }
    ],
    "system": "CREATE TABLE state (capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个省有一个名字叫“昆明”的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少个省有一个叫做“昆明”的城市"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省有名字叫“昆明”的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“昆明”有多少个省有城镇？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( state_name ) FROM city WHERE city_name  =  \"昆明\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省与人口最少的省接壤？"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, population INTEGER), CREATE TABLE state (state_name VARCHAR, border VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“四川”接壤省的湖泊是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lake_name FROM lake WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE lake (state_name VARCHAR, lake_name VARCHAR, border VARCHAR), CREATE TABLE border_info (state_name VARCHAR, lake_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”有多少个主要城市"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”有多少大城市"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”有多少主要的大城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有省的最高点有多高？"
      },
      {
        "from": "assistant",
        "value": "SELECT highest_elevation FROM highlow;"
      }
    ],
    "system": "CREATE TABLE highlow (highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“珠江”经历了多少个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"珠江\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“珠江”流经多少省？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"珠江\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省流经“珠江”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( traverse ) FROM river WHERE river_name  =  \"珠江\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最小的河流中最长的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) ) ) AND traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER, area INTEGER), CREATE TABLE state (state_name VARCHAR, river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黑龙江”平均每平方公里人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population / area FROM state WHERE state_name  =  \"黑龙江\";"
      }
    ],
    "system": "CREATE TABLE state (population VARCHAR, area VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省的边境是“河南”"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"河南\" ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省至少有一个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT state_name ) FROM border_info;"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”最高的山峰是什么高度？"
      },
      {
        "from": "assistant",
        "value": "SELECT MAX ( DISTINCT highest_elevation ) FROM highlow WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省划界“贵州”和“湖南”边界"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( border ) FROM border_info WHERE border IN ( SELECT border FROM border_info WHERE state_name  =  \"贵州\" ) AND state_name  =  \"湖南\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“四川”省接壤的省有多少个主要城市"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city WHERE population  >  150000 AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, border VARCHAR, population INTEGER), CREATE TABLE border_info (state_name VARCHAR, city_name VARCHAR, border VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“四川”接壤的省的总人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t2.population ) FROM state AS t2 JOIN border_info AS t1 ON t2.state_name  =  t1.border WHERE t1.state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的主要湖泊是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT lake_name FROM lake WHERE area  >  750;"
      }
    ],
    "system": "CREATE TABLE lake (lake_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我看看中国所有的主要湖泊"
      },
      {
        "from": "assistant",
        "value": "SELECT lake_name FROM lake WHERE area  >  750;"
      }
    ],
    "system": "CREATE TABLE lake (lake_name VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "说出我们所有的湖泊"
      },
      {
        "from": "assistant",
        "value": "SELECT lake_name FROM lake;"
      }
    ],
    "system": "CREATE TABLE lake (lake_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湖北”有多少条主要河流"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE LENGTH  >  750 AND traverse  =  \"湖北\";"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省有最短的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "主要河流旁边有多少个省"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  >  750;"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“黄山”的高度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT mountain_altitude FROM mountain WHERE mountain_name  =  \"黄山\";"
      }
    ],
    "system": "CREATE TABLE mountain (mountain_altitude VARCHAR, mountain_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最短的河流经过哪些省？"
      },
      {
        "from": "assistant",
        "value": "SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最小的国家的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, population INTEGER), CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些河流流经中国海拔最低的省？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, lowest_elevation INTEGER, traverse VARCHAR), CREATE TABLE highlow (state_name VARCHAR, river_name VARCHAR, lowest_elevation INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流流经中国最低点所在的省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM highlow WHERE lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, lowest_elevation INTEGER, traverse VARCHAR), CREATE TABLE highlow (state_name VARCHAR, river_name VARCHAR, lowest_elevation INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“辽宁”有什么山"
      },
      {
        "from": "assistant",
        "value": "SELECT mountain_name FROM mountain WHERE state_name  =  \"辽宁\";"
      }
    ],
    "system": "CREATE TABLE mountain (state_name VARCHAR, mountain_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省有主要河流？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( traverse ) FROM river WHERE LENGTH  >  750;"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最长的河流运行的最小状态是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) ) ) AND state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"
      }
    ],
    "system": "CREATE TABLE state (traverse VARCHAR, state_name VARCHAR, area INTEGER, LENGTH INTEGER), CREATE TABLE river (traverse VARCHAR, state_name VARCHAR, area INTEGER, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湄公河”最大的省是哪一个省？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"湄公河\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"湄公河\" );"
      }
    ],
    "system": "CREATE TABLE state (traverse VARCHAR, state_name VARCHAR, area INTEGER, river_name VARCHAR), CREATE TABLE river (traverse VARCHAR, state_name VARCHAR, area INTEGER, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湄公河”所经历的最大的省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"湄公河\" ) ) AND state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"湄公河\" );"
      }
    ],
    "system": "CREATE TABLE state (traverse VARCHAR, state_name VARCHAR, area INTEGER, river_name VARCHAR), CREATE TABLE river (traverse VARCHAR, state_name VARCHAR, area INTEGER, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少河流流经“贵州”接壤的省"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( river_name ) FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name  =  \"贵州\" );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么省没有河流"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT traverse FROM river );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, traverse VARCHAR), CREATE TABLE river (state_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "面积最大的省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (capital VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (capital VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”有多少城市"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的城市数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city WHERE state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "所有省的面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state;"
      }
    ],
    "system": "CREATE TABLE state (area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国有多少省流经最短的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT traverse ) FROM river WHERE LENGTH  =  ( SELECT MIN ( DISTINCT LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流流经人口最多的省？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT border FROM border_info WHERE state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, population INTEGER), CREATE TABLE border_info (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, population INTEGER), CREATE TABLE state (state_name VARCHAR, river_name VARCHAR, border VARCHAR, traverse VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大城市的主要城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER), CREATE TABLE state (state_name VARCHAR, city_name VARCHAR, area INTEGER, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小省的面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT area FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省接近中国最长的河流"
      },
      {
        "from": "assistant",
        "value": "SELECT border FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE LENGTH  =  ( SELECT MAX ( LENGTH ) FROM river ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER), CREATE TABLE river (state_name VARCHAR, border VARCHAR, traverse VARCHAR, LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最少的省的人口密度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state WHERE population  =  ( SELECT MIN ( population ) FROM state );"
      }
    ],
    "system": "CREATE TABLE state (density VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省临近“长江”"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT border ) FROM border_info WHERE state_name IN ( SELECT traverse FROM river WHERE river_name  =  \"长江\" );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, traverse VARCHAR, river_name VARCHAR), CREATE TABLE river (state_name VARCHAR, border VARCHAR, traverse VARCHAR, river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省的资本是国家的最高点？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.state_name FROM state AS t1 JOIN highlow AS t2 ON t1.capital  =  t2.highest_point;"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, capital VARCHAR), CREATE TABLE highlow (highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小省的省会人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MIN ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR, area INTEGER, capital VARCHAR), CREATE TABLE state (population VARCHAR, city_name VARCHAR, area INTEGER, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大省的省会人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM city WHERE city_name  =  ( SELECT capital FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE city (population VARCHAR, city_name VARCHAR, area INTEGER, capital VARCHAR), CREATE TABLE state (population VARCHAR, city_name VARCHAR, area INTEGER, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大面积的省的最低点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.lowest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER), CREATE TABLE highlow (state_name VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省与人口最多的省接壤？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name WHERE t2.state_name IN ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR), CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最大的省的大小是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT MAX ( area ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大省的面积是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT MAX ( area ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省会不是主要城市"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.capital FROM state AS t2 JOIN city AS t1 ON t2.capital  =  t1.city_name WHERE t1.population  <=  150000;"
      }
    ],
    "system": "CREATE TABLE state (capital VARCHAR), CREATE TABLE city (city_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我中国的城市"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city;"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "面积最大的国家的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.highest_point FROM state AS t1 JOIN highlow AS t2 ON t1.state_name  =  t2.state_name WHERE t1.state_name IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, area INTEGER), CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“广东”省在哪里"
      },
      {
        "from": "assistant",
        "value": "SELECT country_name FROM state WHERE state_name  =  \"广东\";"
      }
    ],
    "system": "CREATE TABLE state (country_name VARCHAR, state_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个国家拥有最大的城市人口？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city GROUP BY state_name ORDER BY SUM ( population ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的主要河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river;"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国有多少个叫“长沙”的城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( city_name ) FROM city WHERE city_name  =  \"长沙\";"
      }
    ],
    "system": "CREATE TABLE city (city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人生活在与“山东”接壤的最小的省？"
      },
      {
        "from": "assistant",
        "value": "SELECT population FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state WHERE state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"山东\" ) ) AND state_name IN ( SELECT border FROM border_info WHERE state_name  =  \"山东\" );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, border VARCHAR, population INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”的“金沙江” 的长度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE river_name  =  \"金沙江\" AND traverse  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE river (traverse VARCHAR, river_name VARCHAR, LENGTH VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "省会是“长沙”的省份的人口密度是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT density FROM state WHERE capital  =  \"长沙\";"
      }
    ],
    "system": "CREATE TABLE state (capital VARCHAR, density VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国最短的河流有多长？"
      },
      {
        "from": "assistant",
        "value": "SELECT LENGTH FROM river WHERE LENGTH  =  ( SELECT MIN ( LENGTH ) FROM river );"
      }
    ],
    "system": "CREATE TABLE river (LENGTH INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“衡山”的海拔是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT lowest_elevation FROM highlow WHERE lowest_point  =  \"衡山\";"
      }
    ],
    "system": "CREATE TABLE highlow (lowest_elevation VARCHAR, lowest_point VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中国的平均人口是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG ( population ) FROM state;"
      }
    ],
    "system": "CREATE TABLE state (population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么河流流过最大的省"
      },
      {
        "from": "assistant",
        "value": "SELECT river_name FROM river WHERE traverse IN ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE river (state_name VARCHAR, river_name VARCHAR, area INTEGER, traverse VARCHAR), CREATE TABLE state (state_name VARCHAR, river_name VARCHAR, area INTEGER, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省与“四川”省接壤"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.border FROM border_info AS t2 JOIN border_info AS t1 ON t2.border  =  t1.state_name JOIN border_info AS t3 ON t3.border  =  t2.state_name JOIN border_info AS t4 ON t4.border  =  t3.state_name WHERE t4.state_name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省与省会是“杭州”的省份划界？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE capital  =  \"杭州\" );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, capital VARCHAR), CREATE TABLE state (state_name VARCHAR, border VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“湖北”省主要河流经的省内主要城市有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT city_name FROM city WHERE population  >  150000 AND state_name IN ( SELECT traverse FROM river WHERE river_name IN ( SELECT river_name FROM river WHERE LENGTH  >  750 AND traverse  =  \"湖北\" ) );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER, population INTEGER), CREATE TABLE river (state_name VARCHAR, city_name VARCHAR, river_name VARCHAR, traverse VARCHAR, LENGTH INTEGER, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些省不与“四川”接壤？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM state WHERE state_name NOT IN ( SELECT border FROM border_info WHERE state_name  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE state (state_name VARCHAR, border VARCHAR), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少省与最大的省接壤？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( border ) FROM border_info WHERE state_name  =  ( SELECT state_name FROM state WHERE area  =  ( SELECT MAX ( area ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE border_info (state_name VARCHAR, border VARCHAR, area INTEGER), CREATE TABLE state (state_name VARCHAR, border VARCHAR, area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个省最大的城市是“南宁”？"
      },
      {
        "from": "assistant",
        "value": "SELECT state_name FROM city WHERE population  =  ( SELECT MAX ( population ) FROM city WHERE state_name  =  \"南宁\" ) AND state_name  =  \"南宁\";"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最低点的省会是那个"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ;"
      }
    ],
    "system": "CREATE TABLE highlow (lowest_elevation INTEGER), CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有河的省中最大的中国城市是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.city_name FROM city AS t1 JOIN river AS t2 ON t2.traverse  =  t1.state_name WHERE t1.population  =  ( SELECT MAX ( t1.population ) FROM river AS t2 JOIN city AS t1 ON t2.traverse  =  t1.state_name );"
      }
    ],
    "system": "CREATE TABLE city (state_name VARCHAR, city_name VARCHAR, population INTEGER), CREATE TABLE river (traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "人口最多的省有多少条河流"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( t2.river_name ) FROM river AS t2 JOIN state AS t1 ON t1.state_name  =  t2.traverse WHERE t1.state_name  =  ( SELECT state_name FROM state WHERE population  =  ( SELECT MAX ( population ) FROM state ) );"
      }
    ],
    "system": "CREATE TABLE river (river_name VARCHAR, traverse VARCHAR), CREATE TABLE state (state_name VARCHAR, population INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与最低点所在省接壤的最大省是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.state_name FROM highlow AS t3 JOIN border_info AS t1 ON t3.state_name  =  t1.border JOIN state AS t2 ON t2.state_name  =  t1.border WHERE t3.lowest_elevation  =  ( SELECT MIN ( lowest_elevation ) FROM highlow ) ORDER BY t2.area DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE highlow (lowest_elevation INTEGER), CREATE TABLE border_info (state_name VARCHAR, border VARCHAR), CREATE TABLE state (state_name VARCHAR, area VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高点所在的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (highest_elevation INTEGER), CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "拥有最高海拔省的省会是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.capital FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (highest_elevation INTEGER), CREATE TABLE state (state_name VARCHAR, capital VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最小省的最高点是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.highest_point FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MIN ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_point VARCHAR), CREATE TABLE state (area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在最高点的省有多少条河流。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( t1.river_name ) FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow );"
      }
    ],
    "system": "CREATE TABLE highlow (highest_elevation INTEGER), CREATE TABLE river (river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最大省的最高点有多高？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.highest_elevation FROM highlow AS t2 JOIN state AS t1 ON t1.state_name  =  t2.state_name WHERE t1.area  =  ( SELECT MAX ( area ) FROM state );"
      }
    ],
    "system": "CREATE TABLE highlow (state_name VARCHAR, highest_elevation VARCHAR), CREATE TABLE state (area INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最高点所在省的最长的河流是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.river_name FROM highlow AS t2 JOIN river AS t1 ON t1.traverse  =  t2.state_name WHERE t2.highest_elevation  =  ( SELECT MAX ( highest_elevation ) FROM highlow ) ORDER BY t1.length DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE highlow (highest_elevation INTEGER), CREATE TABLE river (length VARCHAR, river_name VARCHAR, traverse VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”共同撰写的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”合著的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”合著的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”写了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”在一起写什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”一起写论文了吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者是“彼得·梅尔滕斯”和“迪娜·巴比安”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”合作写的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者是“彼得·梅尔滕斯”和“迪娜·巴比安”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者为“彼得·梅尔滕斯”和“迪娜·巴比安”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”什么时候合作的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”的合作的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”一起合作写论文了吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”与“迪娜·巴比安”作为合著"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”合作过吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些论文是“彼得·梅尔滕斯”和“迪娜·巴比安”合著的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”合作的共同撰写的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”写了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”共同合作写了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”和“迪娜·巴比安”写了哪些论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"彼得·梅尔滕斯\" AND t1.authorname  =  \"迪娜·巴比安\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁写了最多的“句法分析”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是最常见的“句法分析”作者？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“句法分析”领域中谁的出版物最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁写了最多篇的“句法分析”论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列举“句法分析”方向的著名学者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁写的“句法分析”论文最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是发表“句法分析”论文最多的作者？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最好的“句法分析”领域作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“句法分析”领域最好的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在“句法分析”方向中发表最多的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在“句法分析”领域发表了最多数量的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"句法分析\" GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”有多少引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "统计“诺亚·史密斯”的引用数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”用了多少引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”的引用数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”论文的引用数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者是“诺亚·史密斯”的文章有多少次引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”被引用了多少次？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”有多少次被引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“CHI”会议的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"CHI\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发表在“CHI”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"CHI\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“CHI”会议的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"CHI\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "发表在“CHI”会议的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"CHI\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于“CHI”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"CHI\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示“CHI”的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"CHI\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“CHI”会议上发表了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"CHI\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“CHI”发表的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"CHI\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“CHI”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"CHI\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米蕾拉·拉帕塔”在2016写过论文吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t2.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"米蕾拉·拉帕塔\" AND t3.year  =  2016 GROUP BY t2.authorid;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”写了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些论文的作者是“莎朗·戈德华特”？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”写了什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者是“莎朗·戈德华特”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”创作的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”发表的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者为“莎朗·戈德华特”的所有论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”编写的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”写了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”投稿的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”出版了什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”发表论文了吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”发表的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我看“莎朗·戈德华特”的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”写了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“莎朗·戈德华特”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"莎朗·戈德华特\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾伦·埃齐奥尼”的最新论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"艾伦·埃齐奥尼\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾伦·埃齐奥尼”最新的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"艾伦·埃齐奥尼\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾伦·埃齐奥尼”的最新论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"艾伦·埃齐奥尼\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾伦·埃齐奥尼”最新发表的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"艾伦·埃齐奥尼\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾伦·埃齐奥尼”的最新投稿论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"艾伦·埃齐奥尼\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾伦·埃齐奥尼”最近的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"艾伦·埃齐奥尼\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "自2011年以来，有没有“蒙特卡罗模拟”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"蒙特卡罗模拟\" AND t3.year  >  2011;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2011年以后的“蒙特卡罗模拟”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"蒙特卡罗模拟\" AND t3.year  >  2011;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2011年后出现的“蒙特卡罗模拟”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"蒙特卡罗模拟\" AND t3.year  >  2011;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2011年后发表的“蒙特卡罗模拟”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"蒙特卡罗模拟\" AND t3.year  >  2011;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2011以来发表的“蒙特卡罗模拟”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"蒙特卡罗模拟\" AND t3.year  >  2011;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“拉丝·布蒂克”出版了很多论文吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( t3.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"拉丝·布蒂克\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大卫·贝尔”在“AISTATS”出版了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"大卫·贝尔\" AND t4.venuename  =  \"<AISTATS>\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大卫·贝尔”在“AISTATS”有多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"大卫·贝尔\" AND t4.venuename  =  \"<AISTATS>\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大卫·贝尔”已经在在“AISTATS”出版了多少论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"大卫·贝尔\" AND t4.venuename  =  \"<AISTATS>\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大卫·贝尔”在“AISTATS”投稿了多少论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"大卫·贝尔\" AND t4.venuename  =  \"<AISTATS>\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大卫·贝尔”在“AISTATS”发了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"大卫·贝尔\" AND t4.venuename  =  \"<AISTATS>\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大卫·贝尔”在“AISTATS”的论文数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"大卫·贝尔\" AND t4.venuename  =  \"<AISTATS>\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大卫·贝尔”发布在AISATS的论文有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"大卫·贝尔\" AND t4.venuename  =  \"<AISTATS>\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“大卫·贝尔”有多少论文是投稿在“AISTATS”？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"大卫·贝尔\" AND t4.venuename  =  \"<AISTATS>\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出关于“机器网络一次学习”方面的所有学术论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT paperid FROM paper WHERE title  =  \"机器网络一次学习\";"
      }
    ],
    "system": "CREATE TABLE paper (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“机器网络一次学习”方面的所有论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT paperid FROM paper WHERE title  =  \"机器网络一次学习\";"
      }
    ],
    "system": "CREATE TABLE paper (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2010年的EMNLP哪一篇论文引用数最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2010年的EMNLP哪一篇论文被引用最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2010年的EMNLP引用最多论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2010年的EMNLP哪一篇论文有最多数量的引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citedpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2010 AND t2.venuename  =  \"EMNLP\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2016年在CVPR上发表了哪些关于“类一致多模态融合和二进制特征”应用于“RGB-D对象数据集”的文章？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"RGB-D对象数据集\" AND t3.title  =  \"类一致多模态融合和二进制特征\" AND t3.year  =  2016 AND t4.venuename  =  \"CVPR\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, title VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在CVPR 2016上发表了哪些关于“类一致多模态融合和二进制特征”应用于“RGB-D对象数据集”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"RGB-D对象数据集\" AND t3.title  =  \"类一致多模态融合和二进制特征\" AND t3.year  =  2016 AND t4.venuename  =  \"CVPR\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, title VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少论文是在“深度学习”领域？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于“深度学习”的论文有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少论文是关于“深度学习”的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“深度学习”相关的论文有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”写了几篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”有几篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”发了几篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”发表了多少论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”发表的论文数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”有发表过论文吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "多少论文事“克里斯托弗·曼宁”发表的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有几篇论文是“克里斯托弗·曼宁”发的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”的论文发表数？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”有多少论文出版物？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”有那几篇论文发表了？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯托弗·曼宁”撰写的论文数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯托弗·曼宁\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”发表什么类型的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”使用的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”的论文中有哪些关键词？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”使用那些关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”使用的关键词语"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”论文的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出“卢克·泽特莫耶尔”用过的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”写了什么主题？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”发表什么主题？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”笔下的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”论文出现的关键短语。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”使用的主题"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"卢克·泽特莫耶尔\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“达尼拉·科埃略”发表了什么会议？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"达尼拉·科埃略\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“达尼拉·科埃略”发表的会议"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"达尼拉·科埃略\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“达尼拉·科埃略”通常在哪些会议上发表文章？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"达尼拉·科埃略\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“达尼拉·科埃略”发表了哪些会议？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"达尼拉·科埃略\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“达尼拉·科埃略”发表的会议有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"达尼拉·科埃略\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“达尼拉·科埃略”投稿了哪些会议？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"达尼拉·科埃略\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“达尼拉·科埃略”在哪些会议提交了论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"达尼拉·科埃略\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少份论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT paperid ) FROM paper;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾德·德斯蒙德”有多少篇论文包含关键词组“语义解析”？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"艾德·德斯蒙德\" AND t4.keyphrasename  =  \"语义解析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾德·德斯蒙德”在“语义分析”领域有多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"艾德·德斯蒙德\" AND t4.keyphrasename  =  \"语义解析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾德·德斯蒙德”撰写了多少“语义分析”论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"艾德·德斯蒙德\" AND t4.keyphrasename  =  \"语义解析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾德·德斯蒙德”写了多少篇关于“语义分析”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperkeyphrase AS t1 JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t1.paperid JOIN author AS t2 ON t3.authorid  =  t2.authorid WHERE t2.authorname  =  \"艾德·德斯蒙德\" AND t4.keyphrasename  =  \"语义解析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李东”在2016年提交了什么会议？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"李东\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2016年“李东”发表了那些会议"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"李东\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李东”在2016发表了什么会议？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"李东\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李东”在2016发表了什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"李东\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2012年ACL的“句法分析”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2012在ACL中发表了那些关于“句法分析”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "去年ACL发出的关于“句法分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2012的“句法分析”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2012的关于“句法分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2012年的“句法分析”的ACL论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于“句法分析”的ACL论文2012"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2012在ACL发表的那些论文是关于“句法分析”的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2012年发表在ACL会议上关于“句法分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2012有多少篇关于“句法分析”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在ACL 2012发表了“句法分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2012中的哪些包含“句法分析”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ACL 2012有哪些是基于“句法分析”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2012 AND t4.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出关于“依存类型”的优秀出版论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"依存类型\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我应该读哪一篇关于“依存类型”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"依存类型\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最好的“依存类型”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"依存类型\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出包含关键词“问答”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“问答”研究论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“问答”领域有关的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“问答”相关论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "研究“问答”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“问答”系统的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“问答”领域发表的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“问答”问题相关实验"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我看“问答”相关的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用“问答”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提到“问答”相关的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“问答”系统领域的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出“问答”系统领域相关的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“问答”相关的出版论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我一些关于“问答”领域的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“问答”实验领域的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么论文与“问答”系统相关？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于“问答”的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些论文是关于“问答”的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出使用“问答”系统的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“问答”系统领域的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出具有关键词为“问答”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关键词带有“问答”的相关论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”每年使用的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.keyphraseid  ,  t3.year FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"卢克·泽特莫耶尔\" ORDER BY t3.year  ,  t2.keyphraseid;"
      }
    ],
    "system": "CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“桑杰夫·阿罗拉”的研究近况"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"桑杰夫·阿罗拉\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“桑杰夫·阿罗拉”新近发表的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"桑杰夫·阿罗拉\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“桑杰夫·阿罗拉”撰写的近期论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphrasename  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"桑杰夫·阿罗拉\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“巴拉克利什南·普拉巴卡伦”出的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"巴拉克利什南·普拉巴卡伦\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“扎卡里·塔洛克”的论文引用统计"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"扎卡里·塔洛克\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者是“亚当斯·乔杜里”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"亚当斯·乔杜里\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“亚当斯·乔杜里”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"亚当斯·乔杜里\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出作者是“亚当斯·乔杜里”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"亚当斯·乔杜里\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“亚当斯·乔杜里”发表的会议论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"亚当斯·乔杜里\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ACL 2014中的有多少“句法分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ACL 2014中出现了多少篇“句法分析”领域的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ACL 2014中关于“句法分析”论文发表了多少篇？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"句法分析\" AND t3.year  =  2014 AND t4.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”的“卷积”相关论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”发表的“卷积”领域论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”关于“卷积”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”关于“卷积”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”关于“卷积”的论文是哪个？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”关于“卷积”领域的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”与“卷积”相关的研究论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”与“卷积”相关的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”关于“卷积”主题的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我想要“布瑞恩·克莱斯”发表的论文关键字是“卷积”的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”“卷积”相关研究的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”写的那篇论文是关于“卷积”的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”编写的有关“卷积”的论文有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”编写的“卷积”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布瑞恩·克莱斯”做“卷积”相关领域么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"布瑞恩·克莱斯\" AND t5.keyphrasename  =  \"卷积\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“熊立文”在2015年写了什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年度“熊立文”发布论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“熊立文”在2015发表了什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2015年“熊立文”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年“熊立文”发的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“熊立文”2015年的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“熊立文”在2015年发表的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“熊立文”过去的2015年发了那些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“熊立文”在2015年度发表了什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“熊立文”作为作者在2015发表论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2015“熊立文”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年作者是“熊立文”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年“熊立文”的出版"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年度“熊立文”创作的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2015年度作者是“熊立文”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“熊立文”在2015发表了什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"熊立文\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在NIPS中发表的关于“低频”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"低频\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出在NIPS中发表的关于“低频”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"低频\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在NIPS有关“低频”领域的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"低频\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于NIPS中的“低频”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"低频\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“低频”有关的NIPS的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"低频\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在NIPS会议上发表的“低频”相关的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"低频\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "NIPS中“低频”相关的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"低频\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于“低频”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"低频\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在NIPS中提到“低频”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"低频\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“马克斯·蒂德曼”发表的论文中有多少个合著者？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t1.authorid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname != \"马克斯·蒂德曼\" AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"马克斯·蒂德曼\" );"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯蒂夫·达勒马斯”在2000年使用的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯蒂夫·达勒马斯\" AND t3.year  =  2000;"
      }
    ],
    "system": "CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年“克里斯蒂夫·达勒马斯”使用的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯蒂夫·达勒马斯\" AND t3.year  =  2000;"
      }
    ],
    "system": "CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯蒂夫·达勒马斯”在去年论文中使用的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯蒂夫·达勒马斯\" AND t3.year  =  2000;"
      }
    ],
    "system": "CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯蒂夫·达勒马斯”在2000年使用的关键词是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"克里斯蒂夫·达勒马斯\" AND t3.year  =  2000;"
      }
    ],
    "system": "CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者最引人注意的是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname  ,  COUNT ( t3.citingpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.authorname ORDER BY COUNT ( t3.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“穆罕默德·拉斯特加里”的期刊论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"穆罕默德·拉斯特加里\" AND t3.journalid  >=  0;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (journalid INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者是“穆罕默德·拉斯特加里”期刊论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"穆罕默德·拉斯特加里\" AND t3.journalid  >=  0;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (journalid INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "TACL 2014中的最佳论文是那些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "TACL 2014最好的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在ACL 2016发表过文章？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2016的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2016的论文作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2016作者名单"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ACL 2016发表的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在ACL 2016有论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2016作者列表"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "今年在“多用户接收机的决策反馈领域”中写了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"多用户接收机的决策反馈领域\" AND t3.year  =  2016 GROUP BY t3.paperid HAVING COUNT ( DISTINCT t1.keyphrasename )  >  1;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少篇论文在ImageNet上进行实验？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"%ImageNet%\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用ImageNet数据集的论文有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"%ImageNet%\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于ImageNet写了多少论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"%ImageNet%\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "基于ImageNet的论文有多少篇"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"%ImageNet%\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少论文使用ImageNet？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"%ImageNet%\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米莱拉·拉帕塔”引用了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"米莱拉·拉帕塔\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米莱拉·拉帕塔”共有多少篇论文引用"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"米莱拉·拉帕塔\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米莱拉·拉帕塔”已经引用了多少论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"米莱拉·拉帕塔\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“迈克尔·斯通布雷克”什么时候出版第一篇VLDB的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"迈克尔·斯通布雷克\" AND t4.venuename  =  \"VLDB\" ORDER BY t3.year;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“语义分析”数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“语义分析”的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出用于“语义分析”的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用来做“语义分析”的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "具有“语义分析”信息的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“语义分析”论文中使用的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“语义分析”论文中的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可用为“语义分析”数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“语义分析”论文中的用过的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可被用于用于“语义分析”的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“语义分析”中的大规模数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可以在“语义分析”使用的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "可被用于“语义分析”的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"语义分析\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”在哪里的会议上有过出版？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"彼得·梅尔滕斯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR, journalid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”在什么会议出版？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"彼得·梅尔滕斯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR, journalid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“彼得·梅尔滕斯”在哪里出版？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"彼得·梅尔滕斯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR, journalid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "去年有多少论文发表在“自然通讯”上"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年“自然通讯”有多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“自然通讯”在2015年有接受论文数是多少"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“自然通讯”在2015年发表了多少数量论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年度“自然通讯”发表的论文有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2015年“自然通讯”发布的论文篇数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“自然通讯”杂志2015年度有多少论文被接受？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年的“自然通讯”中有多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“自然通讯”杂志于2015出版了论文数量有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“自然通讯”一共在2015年度发表了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "杂志“自然通讯”在2015年会议发表了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年度“自然通讯”总共发表的论文有多少篇"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"自然通讯\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "第一篇“深度学习”的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"深度学习\" ORDER BY t4.year ASC;"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "第一歌的“深度学习”的论文发表在哪一年？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"深度学习\" ORDER BY t4.year ASC;"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL中提到的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL中的论文使用最多的数据集是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李东”在2016年度ACL“语义分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN paper AS t2 ON t2.paperid  =  t5.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"李东\" AND t3.keyphrasename  =  \"语义分析\" AND t2.year  =  2016 AND t6.venuename  =  \"acl\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于“卷积神经网络”的方向在过去的一年里写了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"卷积神经网络\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2016年发表了多少篇有关“卷积神经网络”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"卷积神经网络\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2016中“卷积神经网络”方面写了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"卷积神经网络\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "今年“卷积神经网络”方向是上写了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"卷积神经网络\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在过去的一年里，已经发表了多少关于“卷积神经网络”领域的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"卷积神经网络\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "今年有关的“问答”方向写了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一年的NIPS论文最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一年发表的NIPS论文最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪一年的NIPS论文数量最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么时候发表了最新的NIPS论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁和“诺亚·史密斯”一起写论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是“诺亚·史密斯”的合著者？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”的合著者是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁与“诺亚·史密斯”一起合著论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”的合著者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“诺亚·史密斯”撰写论文的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“诺亚·史密斯”合作的作家"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”与谁一起写的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是“诺亚·史密斯”的合著者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”的合著者是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”和谁一起工作？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”和谁合作？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”的合著者是哪个人？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“诺亚·史密斯”的合著研究作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"诺亚·史密斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“吉特德拉·马利克”使用的数据集是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"吉特德拉·马利克\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "吉特德拉·“吉特德拉·马利克”的论文中使用了哪些数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"吉特德拉·马利克\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“吉特德拉·马利克”在他的论文中使用了什么数据集？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"吉特德拉·马利克\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“吉特德拉·马利克”使用了哪些数据集？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"吉特德拉·马利克\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“吉特德拉·马利克”的论文中被用到的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"吉特德拉·马利克\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“吉特德拉·马利克”所用的数据集"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"吉特德拉·马利克\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“吉特德拉·马利克”使用的数据集有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"吉特德拉·马利克\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "近期“深度学习”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "新的“深度学习”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于“深度学习”的最新出版物是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近的“深度学习”会议"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出一些关于“深度学习”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近的一些“深度学习”方向的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最新的“深度学习”论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最近的与“深度学习”相关的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深度学习”的研究现状"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最新“深度学习”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最新“深度学习”方向的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“佩德罗·多明格斯”在几年发表论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"佩德罗·多明格斯\" GROUP BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“佩德罗·多明格斯”在那一年发表了一篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"佩德罗·多明格斯\" GROUP BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“杰米·卡兰”每年发表的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"杰米·卡兰\" ORDER BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“杰米·卡兰”每年出版多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"杰米·卡兰\" GROUP BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“杰米·卡兰”每一年的论文数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"杰米·卡兰\" GROUP BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“杰米·卡兰”每年出版多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"杰米·卡兰\" GROUP BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾伦·埃齐奥尼”引用了谁"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"艾伦·埃齐奥尼\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾伦·埃齐奥尼”引用什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"艾伦·埃齐奥尼\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "引用“丹尼尔·朱拉斯凯”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"丹尼尔·朱拉斯凯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那写论文引用了“丹尼尔·朱拉斯凯”？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"丹尼尔·朱拉斯凯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪篇论文引用了“丹尼尔·朱拉斯凯”的工作？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"丹尼尔·朱拉斯凯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "引用“丹尼尔·朱拉斯凯”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"丹尼尔·朱拉斯凯\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“实例分类”相关的期刊论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"实例分类\" AND t3.journalid  >=  0;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (journalid INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在2005年之后“语义分析”的论文最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"语义分析\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "自2005以来，谁撰写了有关“语义分析”的论文最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"语义分析\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在2005之后发表了最多数量的“语义分析”论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"语义分析\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丹·马库姆比”的“基因识别”相关的论文有多少引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN cite AS t5 ON t4.paperid  =  t5.citedpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"丹·马库姆比\" AND t3.keyphrasename  =  \"基因识别\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "早于2010年的“字符识别”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"字符识别\" AND t3.year  <  2010;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010以前的关于“字符识别”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"字符识别\" AND t3.year  <  2010;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010以前的“字符识别”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"字符识别\" AND t3.year  <  2010;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于2010年以前“字符识别”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"字符识别\" AND t3.year  <  2010;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010之前的“字符识别”方向的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"字符识别\" AND t3.year  <  2010;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“艾伦·埃齐奥尼”写了什么话题？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.keyphraseid )  ,  t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"艾伦·埃齐奥尼\" GROUP BY t2.keyphraseid ORDER BY COUNT ( t2.keyphraseid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少与“深度学习”相关的论文引用了ImageNet数据集？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid ) FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN paperkeyphrase AS t1 ON t4.paperid  =  t1.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t2.datasetname  =  \"ImageNet\" AND t5.keyphrasename  =  \"深度学习\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被引用最多的“句法分析”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“句法分析”最好的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“句法分析”的顶级论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "引用次数最多的“句法分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“句法分析”方向的哪篇论文最多的引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多引用“句法分析”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "引用数量最多的“句法分析”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多引用数量的“句法分析”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么样的“句法分析”论文被引用的次数最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "高引用数量的“句法分析”方向论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被引用最多次的“句法分析”领域论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被引用最多的关于“句法分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"句法分析\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“迈克尔·阿姆斯特朗在”90年代写了什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year  ,  t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"迈克尔·阿姆斯特朗在\" AND t3.year LIKE \"%199%\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“奥哈德·萨米尔”论文中被引用次数最高的是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"奥哈德·萨米尔\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“奥哈德·萨米尔”最多次被引用的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"奥哈德·萨米尔\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“奥哈德·萨米尔”拥有最多引用数量的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"奥哈德·萨米尔\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "引用最多的“奥哈德·萨米尔”的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"奥哈德·萨米尔\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“奥哈德·萨米尔”的那一篇论文有最多的引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"奥哈德·萨米尔\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“奥哈德·萨米尔”最多引用的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"奥哈德·萨米尔\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "最多次被引用的“奥哈德·萨米尔”的论文是那一篇？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"奥哈德·萨米尔\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“迈克尔·乔丹”在2016出版了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"迈克尔·乔丹\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“迈克尔·乔丹”在2016有多少论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"迈克尔·乔丹\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“迈克尔·乔丹”在2016出版了论文篇数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"迈克尔·乔丹\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "按作者统计ACL的论文数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "多少作者有ACL论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "根据作者统计ACL的论文数量"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁写了最多数量的CVPR 2007的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在CVPR 2007发表过论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在2007年写了最多数量的CVPR论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "CVPR 2007出版数最高的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在2007年的CVPR发表了最多数量的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2007年谁在CVPR出版了最多的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2015中有多少论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2015发表的论文数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2014年论文数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;"
      }
    ],
    "system": "CREATE TABLE paper (YEAR VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2014发表的论文篇数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;"
      }
    ],
    "system": "CREATE TABLE paper (YEAR VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“理查德·兰德尔”在“CHI”上有什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"理查德·兰德尔\" AND t4.venuename  =  \"chi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“理查德·兰德尔”在“CHI”期刊上发表了什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"理查德·兰德尔\" AND t4.venuename  =  \"chi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“CHI”中“理查德·兰德尔”发表了那些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"理查德·兰德尔\" AND t4.venuename  =  \"chi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“理查德·兰德尔”发表的在“CHI”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"理查德·兰德尔\" AND t4.venuename  =  \"chi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“理查德·兰德尔”在“CHI”上有出版吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"理查德·兰德尔\" AND t4.venuename  =  \"chi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“理查德·兰德尔”在“CHI”上发表了什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"理查德·兰德尔\" AND t4.venuename  =  \"chi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“理查德·兰德尔”写了“CHI”中的什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"理查德·兰德尔\" AND t4.venuename  =  \"chi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“理查德·兰德尔”作为作者在“CHI”发表了哪篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"理查德·兰德尔\" AND t4.venuename  =  \"chi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于“人工智能”的引用最多的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"人工智能\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我引用最多次数的“人工智能”出版物"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"人工智能\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL 2014的主题"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2014 AND t4.venuename  =  \"ACL\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在NIPS 2015中最常见的话题"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在NIPS 2015上最受欢迎的话题"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "NIPS 2015的热门话题"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年的NIPS的热门话题"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些话题在NIPS 2015最受欢迎？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在NIPS 2015会议中流行的话题"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与NIPS中与“深度强化学习”相关的论文有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"深度强化学习\" AND t4.venuename  =  \"nips\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于WebKB的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪篇论文用过WebKB？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "于WebKB相关的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出使用WebKB数据集的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用WebKB的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "用过WebKB的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "WebKB的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用了WebKB相关的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用WebKB数据集的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2013的会议"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT venueid FROM paper WHERE YEAR  =  2013;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "CVPR中被引用最多的作者是怎样的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是CVPR会议中最多被引用的作者？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“克里斯·戴尔”没有写的“句法分析”论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"克里斯·戴尔\" AND t5.keyphrasename  =  \"句法分析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有没有不是“克里斯·戴尔”写的“句法分析”论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"克里斯·戴尔\" AND t5.keyphrasename  =  \"句法分析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "作者不是“克里斯·戴尔”的“句法分析”相关论文是那些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"克里斯·戴尔\" AND t5.keyphrasename  =  \"句法分析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "不是“克里斯·戴尔”写的的“句法分析”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"克里斯·戴尔\" AND t5.keyphrasename  =  \"句法分析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "去年出版的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  ( SELECT MAX ( YEAR ) FROM paper );"
      }
    ],
    "system": "CREATE TABLE paper (YEAR INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“本杰明·马克希尔”的第一次出版论文是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"本杰明·马克希尔\" GROUP BY t3.year ORDER BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“本杰明·马克希尔”的第一篇论文是什么时候写的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"本杰明·马克希尔\" GROUP BY t3.year ORDER BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“索米特”什么时候出论文的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"索米特\" GROUP BY t3.year ORDER BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁引用“丹尼尔·里德尔”次数最多"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"丹尼尔·里德尔\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "引用“丹尼尔·里德尔”次数最多的是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"丹尼尔·里德尔\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "SIGIR有多少份论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "SIGIR会议的论文数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在SIGIR中发表了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在SIGIR会议发表的论文数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "少于5次引用的ACL论文有那些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "引用不到5次的ACL论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些ACL论文有少于5次的引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ACL会议的论文中那些引用次数不到5？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米莱拉·拉帕塔”最近的5篇论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"米莱拉·拉帕塔\" ORDER BY t3.year DESC LIMIT 5;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "PLDI 2015发表的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "PLDI 2015的会议论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年PLDI会议发表的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "PLDI 2015的论文有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年PLDI的接受论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些论文在PLDI 2015中被接受？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在PLDI 2015会议期间发表了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "PLDI 2015的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列表PLDI 2015的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年PLDI会议上论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在PLDI 2015中发表的论文是什么"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "PLDI 2015中接受的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2015年的PLDI论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "PLDI 2015会议"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年PLDI最佳论文奖"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "PLDI 2015的论文列表"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出2011年所有的期刊"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;"
      }
    ],
    "system": "CREATE TABLE paper (YEAR VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出2011年3月出版的期刊"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;"
      }
    ],
    "system": "CREATE TABLE paper (YEAR VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2016 ACL论文的标题中包含“神经注意力”"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.title LIKE \"%neural attention%\" AND t1.year  =  2016 AND t2.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, title VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在“机器学习”方向中写了最多的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename  =  \"机器学习\" GROUP BY t1.authorname ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁写过“传感器融合”相关论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"%传感器融合%\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“传感器融合”论文的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"%传感器融合%\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“传感器融合”的研究人员"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"%传感器融合%\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在“传感器融合”中发表过论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"%传感器融合%\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁发表了关于“传感器融合”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"%传感器融合%\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR, authorname VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丹·克莱因”引用“迈克尔·乔丹”的论文数有多少"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"迈克尔·乔丹\" AND t1.authorname  =  \"丹·克莱因\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丹·克莱因”的论文中引用了多少“迈克尔·乔丹”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"迈克尔·乔丹\" AND t1.authorname  =  \"丹·克莱因\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁与“阿密特·索尼”和“拉丝·布迪克”合著一篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t5.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"阿密特·索尼\" AND t1.authorname  =  \"拉丝·布迪克\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用ImageNet的2014年的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014;"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“松本隆”的文章发表在什么期刊上？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"松本隆\" GROUP BY t3.journalid;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (paperid VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“松本隆”发表了哪些期刊？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"松本隆\" GROUP BY t3.journalid;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (paperid VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“松本隆”发表了哪些学术期刊？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"松本隆\" GROUP BY t3.journalid;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (paperid VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那个作者在2016撰写了有关“青枯病”的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"青枯病\" AND t4.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁写了2016的“青枯病”话题的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"青枯病\" AND t4.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”的论文是什么时候出版的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"卢克·泽特莫耶尔\" ORDER BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2016年关于“问答”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2016年关于“问答”的话题写了哪些论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\" AND t3.year  =  2016;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么关键词能得到最多的引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.citingpaperid )  ,  t1.keyphrasename FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.keyphrasename ORDER BY COUNT ( t3.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出关于“时态数据”的期刊。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"时态数据\" GROUP BY t3.journalid;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出与“时态数据”有关的期刊"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"时态数据\" GROUP BY t3.journalid;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那篇关于“句法分析”的ACL 2014的论文使用了“幸运52”的问题？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"幸运52\" AND t1.keyphrasename  =  \"句法分析\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ACL2014发表的使用“幸运52”问题用于“句法分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"幸运52\" AND t1.keyphrasename  =  \"句法分析\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在ACL2014使用“幸运52”问题解决“句法分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"幸运52\" AND t1.keyphrasename  =  \"句法分析\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "来自ACL 2014使用“幸运52”问题的“句法分析”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"幸运52\" AND t1.keyphrasename  =  \"句法分析\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“幸运52”问题用于“句法分析”并发表在ACL 2014的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"幸运52\" AND t1.keyphrasename  =  \"句法分析\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“琳达·夏皮罗”在哪些期刊上发表文章？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"琳达·夏皮罗\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR, journalid VARCHAR), CREATE TABLE journal (journalid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“琳达·夏皮罗”提交了哪些期刊？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"琳达·夏皮罗\";"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR, journalid VARCHAR), CREATE TABLE journal (journalid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "NIPS的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在NIPS发表过论文的作者都是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "被NIPS接受论文的作者是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在NIPS上出版过论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在NIPS发表过论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个会议出版了关于“深度学习”最多的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t4.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"深度学习\" GROUP BY t4.venueid ORDER BY COUNT ( t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "今年有多少出版物被添加到“细胞”杂志上？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"细胞\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE paper (journalid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE journal (journalname VARCHAR, journalid VARCHAR), CREATE TABLE paperkeyphrase (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“细胞”杂志在2015发表了多少文章？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"细胞\" AND t3.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE paper (journalid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE journal (journalname VARCHAR, journalid VARCHAR), CREATE TABLE paperkeyphrase (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“唐纳德·克努斯”为作者的所有出版刊物是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"唐纳德·克努斯\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (title VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“阿里·法拉迪”发表在ECCV 2016的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"阿里·法拉迪\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“阿里·法拉迪”在2016年的ECCV会议有论文吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"阿里·法拉迪\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“阿里·法拉迪”于2016年的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"阿里·法拉迪\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "处理“YAGO”的“语义数据”有哪些文章？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paperkeyphrase AS t2 ON t2.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid WHERE t1.datasetname  =  \"YAGO\" AND t4.keyphrasename  =  \"语义数据\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在“CHI”发表了更多的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"CHI\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在“CHI”发布了最多数量的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"CHI\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“CHI”最高产的作者是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"CHI\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在“CHI”出版论文数量最多"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"CHI\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“曹烨”在哪一年发表了最多的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"%曹烨%\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那一年“曹烨”出版了最多数量论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"%曹烨%\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "提到ImageNet的会议"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "第一“深度学习”相关论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" GROUP BY t3.year ORDER BY t3.year ASC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "第一篇关于“深度学习”的论文是什么的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" GROUP BY t3.year ORDER BY t3.year ASC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深度学习”是什么时候提出的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" GROUP BY t3.year ORDER BY t3.year ASC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "第一篇“深度学习”论文是什么时候出版的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"深度学习\" GROUP BY t3.year ORDER BY t3.year ASC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1995在“放射学期刊”上发表了什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paper AS t2 JOIN journal AS t1 ON t2.journalid  =  t1.journalid WHERE t1.journalname  =  \"放射学期刊\" AND t2.year  =  1995;"
      }
    ],
    "system": "CREATE TABLE paper (journalid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE journal (journalname VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“句法分析”方向的论文通常引用的是什么论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"句法分析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“句法分析”论文通常引用的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"句法分析\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“营养级联”的场所"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"营养级联\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“营养级联”相关会议"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"营养级联\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些会议与“营养级联”有关"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"营养级联\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "批准的“营养级联”的会议名称是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"营养级联\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2011到2016年间有多少关于“问答”领域的论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"问答\" AND t3.year  >=  2011;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么是最好的“NLP”会议？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"NLP\" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每个作者的ACL会议"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "引用超过10篇的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >  10;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些作者在2015年发表了论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在2015年写论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布莱恩·德兰奇”的那个关键词来获得最多的引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"布莱恩·德兰奇\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (numcitedby INTEGER, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“布莱恩·德兰奇”的主要主题"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"布莱恩·德兰奇\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (numcitedby INTEGER, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有5篇论文的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid GROUP BY t1.authorid HAVING COUNT ( t2.paperid )  >=  5;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE paper (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "去年没有发表的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;"
      }
    ],
    "system": "CREATE TABLE paper (YEAR VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“迈克尔·斯通布雷克”的“GIS数据”是什么时候发布的？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"迈克尔·斯通布雷克\" AND t5.keyphrasename  =  \"GIS数据\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“迈克尔·斯通布雷克”什么时候发布了他的“GIS数据”文件？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"迈克尔·斯通布雷克\" AND t5.keyphrasename  =  \"GIS数据\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“迈克尔·斯通布雷克”什么时候出版了“GIS数据”文件？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"迈克尔·斯通布雷克\" AND t5.keyphrasename  =  \"GIS数据\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年什么期刊发表了关于“营养级联”的文章？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"营养级联\" AND t3.year  =  2010 GROUP BY t3.journalid;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "今年CVPR会议最流行的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2016 AND t2.venuename  =  \"CVPR\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“卢克·泽特莫耶尔”每一年有多少引用？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.citedpaperid )  ,  t3.year FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"卢克·泽特莫耶尔\" GROUP BY t3.year;"
      }
    ],
    "system": "CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ImageNet的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t2 ON t2.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t2.paperid;"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "自2006年以来，关于“提取液对癌症患者的影响”发表了哪些文章？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT paperid  ,  title FROM paper WHERE title LIKE \"%提取液对癌症患者的影响%\" AND YEAR  >  2006;"
      }
    ],
    "system": "CREATE TABLE paper (title VARCHAR, YEAR INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“埃里克·克拉甘”的“液体”相关的“Automatica”论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname  =  \"埃里克·克拉甘\" AND t3.keyphrasename  =  \"液体\" AND t6.venuename  =  \"Automatica\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“谢尔盖·莱文”在哪里发表了他的最后一篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.venueid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"谢尔盖·莱文\" GROUP BY t3.venueid  ,  t3.year ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丹·克莱因”在EMNLP论文中使用的关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid JOIN writes AS t5 ON t5.paperid  =  t3.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid WHERE t1.authorname  =  \"丹·克莱因\" AND t4.venuename  =  \"emnlp\";"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2012年“中和抗体”研究的主要研究者是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"中和抗体\" AND t4.year  =  2012 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2014年使用ImageNet数据集的ECCV论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "ECCV 2014中的哪些论文使用了ImageNet？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "使用ImageNet的ECCV 2014会议的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "引用发表在NIPS论文的关于“欧几里德距离”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t5 ON t2.paperid  =  t5.citingpaperid JOIN paper AS t3 ON t3.paperid  =  t5.citedpaperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"欧几里德距离\" AND t4.venuename  =  \"NIPS\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "研究ImageNet的顶级作者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t2.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (paperid VARCHAR), CREATE TABLE writes (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少ACL 2012的论文引用超过7次？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT ( t1.paperid )  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2012 AND t2.venuename  =  \"ACL\" GROUP BY t1.paperid HAVING COUNT ( t3.citingpaperid )  >  7;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2012年度EnnLL-CONLL最佳论文的题目是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.keyphraseid  ,  t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid  =  t1.paperid JOIN venue AS t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  \"EMNLP-CoNLL\" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "自2009以来“诺亚·史密斯”共同参与创作了多少篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname != \"诺亚·史密斯\" AND t3.year  >  2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname LIKE \"%诺亚·史密斯%\" );"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "超过2各引用的ACL论文数"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  >  2;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“埃里克·克拉甘”的在“Automatica”会议上发表的“液体”相关的论文叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname LIKE \"%埃里克·克拉甘%\" AND t3.keyphrasename  =  \"液体\" AND t6.venuename  =  \"Automatica\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE paper (venueid VARCHAR, title VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“CVPR”中使用ImageNet数据集的论文有多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t4.venuename  =  \"CVPR\";"
      }
    ],
    "system": "CREATE TABLE paperdataset (datasetid VARCHAR, paperid VARCHAR), CREATE TABLE dataset (datasetname VARCHAR, datasetid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“神经科学”的会议是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT venueid FROM venue WHERE venuename  =  \"神经科学\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“玛丽·克莱因”上一次发表论文是什么时候？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"玛丽·克莱因\";"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“菲利普·可汗”的“机器翻译输出”的论文合著者"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.authorid FROM paperkeyphrase AS t6 JOIN keyphrase AS t3 ON t6.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t6.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid JOIN author AS t2 ON t4.authorid  =  t2.authorid WHERE t2.authorname  =  \"菲利普·可汗\" AND t3.keyphrasename  =  \"机器翻译输出\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“塞缪尔·马登”在“PVLDB”以外的会议发表了多少论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"塞缪尔·马登\" AND t4.venuename != \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“唐纳德·克努斯”在哪一个期刊上发表了他的最后一篇论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.journalid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"唐纳德·克努斯\" GROUP BY t3.journalid  ,  t3.year ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR, journalid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丙烯酸骨水泥断裂”发表的会议是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT venueid FROM paper WHERE title  =  \"丙烯酸骨水泥断裂\";"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, title VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010在“SigCSE”有多少作者发表了论文？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t2.paperid ) FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2010 AND t3.venuename  =  \"SigCSE\";"
      }
    ],
    "system": "CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR), CREATE TABLE paper (venueid VARCHAR, year VARCHAR, paperid VARCHAR), CREATE TABLE writes (paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“ISDN交换架构”发布的年份是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT title  ,  YEAR FROM paper WHERE title  =  \"ISDN交换架构\";"
      }
    ],
    "system": "CREATE TABLE paper (title VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“UIST”论文使用哪些关键词"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"UIST\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR), CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我2012年以前“李素音”写的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"李素音\" AND t3.year  <  2012;"
      }
    ],
    "system": "CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR), CREATE TABLE paper (year INTEGER, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出每一年“语义分析”的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"语义分析\" GROUP BY t3.year ORDER BY t3.year DESC;"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE paper (year VARCHAR, paperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少5篇引用的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "至少有5篇其他论文引用的论文"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;"
      }
    ],
    "system": "CREATE TABLE paper (paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“SigCOMM”引用量最多的论文是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"SigCOMM\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;"
      }
    ],
    "system": "CREATE TABLE paper (venueid VARCHAR, paperid VARCHAR), CREATE TABLE cite (citedpaperid VARCHAR, citingpaperid VARCHAR), CREATE TABLE venue (venueid VARCHAR, venuename VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“兰吉特·贾拉”的发表的关于“LH”的论文叫什么名字？"
      },
      {
        "from": "assistant",
        "value": "SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN paper AS t3 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname LIKE \"%兰吉特·贾拉%\" AND t5.keyphrasename  =  \"LH\";"
      }
    ],
    "system": "CREATE TABLE paperkeyphrase (keyphraseid VARCHAR, paperid VARCHAR), CREATE TABLE keyphrase (keyphraseid VARCHAR, keyphrasename VARCHAR), CREATE TABLE writes (authorid VARCHAR, paperid VARCHAR), CREATE TABLE paper (title VARCHAR, paperid VARCHAR), CREATE TABLE author (authorname VARCHAR, authorid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出超过4.5颗星的所有餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM business WHERE rating  >  4.5;"
      }
    ],
    "system": "CREATE TABLE business (name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有评级为3.5的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM business WHERE rating  =  3.5;"
      }
    ],
    "system": "CREATE TABLE business (rating VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出名字是“米雪”的所有用户ID"
      },
      {
        "from": "assistant",
        "value": "SELECT user_id FROM USER WHERE name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有有“汉堡王”的省份"
      },
      {
        "from": "assistant",
        "value": "SELECT state FROM business WHERE name  =  \"汉堡王\";"
      }
    ],
    "system": "CREATE TABLE business (name VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出有一个叫“海盗船自助餐”的“餐厅”的所有的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"海盗船自助餐\" AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (name VARCHAR, business_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出低于1.5的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM business WHERE rating  <  1.5;"
      }
    ],
    "system": "CREATE TABLE business (city VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有有“南京大牌档”的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT city FROM business WHERE name  =  \"南京大牌档\";"
      }
    ],
    "system": "CREATE TABLE business (name VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有相关餐厅少于1个的评论"
      },
      {
        "from": "assistant",
        "value": "SELECT text FROM review WHERE rating  <  1;"
      }
    ],
    "system": "CREATE TABLE review (text VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有超过3.5的“餐馆”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"餐馆\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有拥有“南京大牌档”“餐厅”的城市"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"南京大牌档\" AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (name VARCHAR, business_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“王岩”的所有评论"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"王岩\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE review (text VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有由“王岩”评论的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t3.name  =  \"王岩\";"
      }
    ],
    "system": "CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“王岩”评级5的所有业务"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.rating  =  5 AND t3.name  =  \"王岩\";"
      }
    ],
    "system": "CREATE TABLE review (rating VARCHAR, business_id VARCHAR, user_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“米雪”为“意大利”“餐馆”所做的所有评论"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN review AS t4 ON t4.business_id  =  t1.business_id JOIN USER AS t5 ON t5.user_id  =  t4.user_id WHERE t2.category_name  =  \"意大利\" AND t3.category_name  =  \"餐馆\" AND t5.name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR), CREATE TABLE review (text VARCHAR, business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“云南”的“星巴克”“餐厅”的评论数量"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.text ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"星巴克\" AND t1.state  =  \"云南\" AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, state VARCHAR), CREATE TABLE review (text VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出5星级“意大利”“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.rating  =  5 AND t2.category_name  =  \"意大利\" AND t3.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (rating VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出在“成都”的“意大利”“餐厅”的街区"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"成都\" AND t3.category_name  =  \"意大利\" AND t4.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, city VARCHAR), CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“成都”所有拥有评级低于2.5的“意大利”“餐厅”的街区"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  <  2.5 AND t3.category_name  =  \"意大利\" AND t4.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, city VARCHAR, rating INTEGER), CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“黑龙江”所有的“餐馆”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"黑龙江\" AND t2.category_name  =  \"餐馆\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有在“黑龙江”的“餐馆”。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"黑龙江\" AND t2.category_name  =  \"餐馆\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有超过100个评论的“宠物梳理师”"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.review_count  >  100 AND t2.category_name  =  \"宠物梳理师\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, review_count INTEGER), CREATE TABLE review (text VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“东莞”的“啤酒厂”有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"东莞\" AND t2.category_name  =  \"啤酒厂\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“东莞”的所有“啤酒厂”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"东莞\" AND t2.category_name  =  \"啤酒厂\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "中找处在“厦门”所有的“啤酒厂”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"厦门\" AND t2.category_name  =  \"啤酒厂\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有评论“沙县小吃”“餐厅”的用户"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"沙县小吃\" AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出在“东莞”所有“沃尔玛”的地址"
      },
      {
        "from": "assistant",
        "value": "SELECT full_address FROM business WHERE city  =  \"东莞\" AND name  =  \"沃尔玛\";"
      }
    ],
    "system": "CREATE TABLE business (name VARCHAR, city VARCHAR, full_address VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“赵毅”评论的所有在“重庆”的“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"重庆\" AND t2.category_name  =  \"餐厅\" AND t4.name  =  \"赵毅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR), CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“重庆”的哪些“餐厅”被“赵毅”评论过？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"重庆\" AND t2.category_name  =  \"餐厅\" AND t4.name  =  \"赵毅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR), CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“赵毅”评论的所有的“酒吧”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"酒吧\" AND t4.name  =  \"赵毅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有由“赵毅”评论的至少有3颗星的“酒吧”。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  \"酒吧\" AND t4.name  =  \"赵毅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在2015年所有为“喜茶”写过评论的用户"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"喜茶\" AND t2.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE tip (year VARCHAR, business_id VARCHAR, user_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“云南”找出所有低于2分的企业"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM business WHERE rating  <  2 AND state  =  \"云南\";"
      }
    ],
    "system": "CREATE TABLE business (state VARCHAR, name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有在“厦门”的“海鲜”“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"厦门\" AND t2.category_name  =  \"海鲜\" AND t3.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“厦门”所有的“海鲜”“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"厦门\" AND t2.category_name  =  \"海鲜\" AND t3.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“厦门”供应“海鲜”的“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"厦门\" AND t2.category_name  =  \"海鲜\" AND t3.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出评分高于4分的“赵毅”的所有评论，"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.rating  >  4 AND t2.name  =  \"赵毅\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE review (text VARCHAR, rating INTEGER, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“厦门”中找出所有“苹果店”"
      },
      {
        "from": "assistant",
        "value": "SELECT business_id FROM business WHERE city  =  \"厦门\" AND name  =  \"苹果店\";"
      }
    ],
    "system": "CREATE TABLE business (name VARCHAR, business_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出评级高于4.5分的“成都”“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t1.rating  >  4.5 AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“海底捞”附近的“餐馆”是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.name  =  \"海底捞\" AND t3.category_name  =  \"餐馆\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出关于收到超过9个赞的“便宜坊”的所有提示"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"便宜坊\" AND t2.likes  >  9;"
      }
    ],
    "system": "CREATE TABLE tip (text VARCHAR, business_id VARCHAR, likes INTEGER), CREATE TABLE business (business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出2014年度“探鱼”的所有评论"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"探鱼\" AND t2.year  =  2014;"
      }
    ],
    "system": "CREATE TABLE review (year VARCHAR, text VARCHAR, business_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有写在“成都”的餐馆的评论的用户"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"成都\";"
      }
    ],
    "system": "CREATE TABLE tip (business_id VARCHAR, user_id VARCHAR), CREATE TABLE business (business_id VARCHAR, city VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“云南”省的所有城市里找出一家名为“海盗船自助餐”的“餐厅”。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"海盗船自助餐\" AND t1.state  =  \"云南\" AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (name VARCHAR, business_id VARCHAR, city VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“宠物梳理师”评论的用户"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN tip AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"宠物梳理师\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR), CREATE TABLE tip (business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“云南”“星巴克”的所有评论。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"星巴克\" AND t1.state  =  \"云南\";"
      }
    ],
    "system": "CREATE TABLE tip (text VARCHAR, business_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有审查“餐馆”业务的用户。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"餐馆\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR), CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出2010在“黑龙江”的“星巴克”的所有提示。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"星巴克\" AND t1.state  =  \"黑龙江\" AND t2.year  =  2010;"
      }
    ],
    "system": "CREATE TABLE tip (year VARCHAR, text VARCHAR, business_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有在2010的做“餐馆”生意的用户。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"餐馆\" AND t3.year  =  2010;"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR), CREATE TABLE review (year VARCHAR, business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在2012编写评论的用户的所有提示"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.text FROM USER AS t3 JOIN review AS t1 ON t3.user_id  =  t1.user_id JOIN tip AS t2 ON t3.user_id  =  t2.user_id WHERE t1.year  =  2012;"
      }
    ],
    "system": "CREATE TABLE USER (user_id VARCHAR), CREATE TABLE review (year VARCHAR, user_id VARCHAR), CREATE TABLE tip (text VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找所有评分为2.5的企业的评论"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  =  2.5;"
      }
    ],
    "system": "CREATE TABLE review (text VARCHAR, business_id VARCHAR), CREATE TABLE business (rating VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“成都”找出“逃生游戏”的数量"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t2.category_name  =  \"逃生游戏\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成都”“逃生游戏”的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t2.category_name  =  \"逃生游戏\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成都”有多少“逃生游戏”"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t2.category_name  =  \"逃生游戏\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“成都”中“逃生游戏”的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t2.category_name  =  \"逃生游戏\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成都”有多少家“逃生游戏”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t2.category_name  =  \"逃生游戏\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出评分超过3.5的“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“厦门”的“摩洛哥”“餐厅”总访问数"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"厦门\" AND t2.category_name  =  \"餐厅\" AND t3.category_name  =  \"摩洛哥\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, city VARCHAR), CREATE TABLE checkin (business_id VARCHAR, count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“星期五”在“厦门”“摩洛哥”“餐厅”的总访问数"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"厦门\" AND t2.category_name  =  \"摩洛哥\" AND t3.category_name  =  \"餐厅\" AND t4.day  =  \"星期五\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, city VARCHAR), CREATE TABLE checkin (business_id VARCHAR, day VARCHAR, count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每天在“厦门”“摩洛哥”“餐厅”的总访问数"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.day  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"厦门\" AND t2.category_name  =  \"摩洛哥\" AND t3.category_name  =  \"餐厅\" GROUP BY t4.day;"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, city VARCHAR), CREATE TABLE checkin (business_id VARCHAR, day VARCHAR, count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“星期日”在每一个省的“意大利”“餐厅”的总访问数"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.state  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t2.category_name  =  \"意大利\" AND t3.category_name  =  \"餐馆\" AND t4.day  =  \"星期日\" GROUP BY t1.state;"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, state VARCHAR), CREATE TABLE checkin (business_id VARCHAR, day VARCHAR, count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在2015年“王岩”写了多少评论"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2015 AND t2.name  =  \"王岩\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE review (year VARCHAR, text VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米雪”的评论中的平均评级是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG ( t1.rating ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE review (user_id VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“星巴克”在“星期五”的访问数数是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"星巴克\" AND t2.day  =  \"星期五\";"
      }
    ],
    "system": "CREATE TABLE checkin (count VARCHAR, business_id VARCHAR, day VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“杭州”有多少网友评论“外婆家”"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"杭州\" AND t1.name  =  \"外婆家\";"
      }
    ],
    "system": "CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE business (name VARCHAR, business_id VARCHAR, city VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“杭州”4.5分的“餐厅”的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"杭州\" AND t1.rating  =  4.5 AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (rating VARCHAR, city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "写在2015年的评论有多少"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;"
      }
    ],
    "system": "CREATE TABLE tip (text VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“王岩”提示的总赞数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t1.likes ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"王岩\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE tip (likes INTEGER, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "关于“星巴克”提示的总赞数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"星巴克\";"
      }
    ],
    "system": "CREATE TABLE tip (likes INTEGER, business_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“王岩”关于“星巴克”提示的总赞数是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"星巴克\" AND t3.name  =  \"王岩\";"
      }
    ],
    "system": "CREATE TABLE tip (likes INTEGER, business_id VARCHAR, user_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米雪”在2010写了多少提示？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE tip (year VARCHAR, text VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2010“米雪”写的提示的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE tip (year VARCHAR, text VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米雪”在“四月”写了多少提示？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"四月\" AND t2.name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE tip (text VARCHAR, month VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“云南”“餐馆”的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"云南\" AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成都”有多少“酒吧”的评分在3.5以上？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t1.rating  >  3.5 AND t2.category_name  =  \"酒吧\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“成都”有多少间“酒吧”的评级在3.5以上？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t1.rating  >  3.5 AND t2.category_name  =  \"酒吧\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人评论了在“四川”“成都”的“小龙坎”“餐厅”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"成都\" AND t1.name  =  \"小龙坎\" AND t1.state  =  \"四川\" AND t2.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (name VARCHAR, business_id VARCHAR, city VARCHAR, state VARCHAR), CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人在2015年评论了“全聚德”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"全聚德\" AND t2.year  =  2015;"
      }
    ],
    "system": "CREATE TABLE review (year VARCHAR, business_id VARCHAR, user_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成都”“中心区”有多少家“餐厅”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t3.category_name  =  \"餐厅\" AND t2.neighbourhood_name  =  \"中心区\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR), CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”“成都”有多少“星巴克”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"成都\" AND name  =  \"星巴克\" AND state  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE business (name VARCHAR, business_id VARCHAR, city VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“一点点”有多少评论？"
      },
      {
        "from": "assistant",
        "value": "SELECT review_count FROM business WHERE name  =  \"一点点\";"
      }
    ],
    "system": "CREATE TABLE business (review_count VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“餐厅”“喜茶”每天的平均访问数量"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG ( t3.count )  ,  t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN checkin AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"喜茶\" AND t2.category_name  =  \"餐厅\" GROUP BY t3.day;"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE checkin (business_id VARCHAR, day VARCHAR, count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成都”的“星巴克”附近有多少家企业？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t2.neighbourhood_name  =  \"星巴克\";"
      }
    ],
    "system": "CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“忆安”写了多少评论？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"忆安\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE review (text VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米雪”在2014年“3月”写了多少评论？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"3月\" AND t1.year  =  2014 AND t2.name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE review (year VARCHAR, text VARCHAR, month VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“米雪”在2010评论了多少企业？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.year  =  2010 AND t3.name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE review (year VARCHAR, business_id VARCHAR, user_id VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年“忆安”评论了多少在“嘉兴”的企业？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"嘉兴\" AND t2.year  =  2010 AND t3.name  =  \"忆安\";"
      }
    ],
    "system": "CREATE TABLE review (year VARCHAR, business_id VARCHAR, user_id VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”有多少个“目标”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"厦门\" AND name  =  \"目标\";"
      }
    ],
    "system": "CREATE TABLE business (name VARCHAR, business_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少用户在评论了“成都”的“爱尔兰酒吧”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"成都\" AND t2.category_name  =  \"爱尔兰酒吧\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, city VARCHAR), CREATE TABLE review (business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2014年度的平均点评量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT AVG ( rating ) FROM review WHERE YEAR  =  2014;"
      }
    ],
    "system": "CREATE TABLE review (rating INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少人在2010点评过“餐厅”“便宜坊”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"便宜坊\" AND t2.category_name  =  \"餐厅\" AND t3.year  =  2010;"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR), CREATE TABLE review (year VARCHAR, business_id VARCHAR, user_id VARCHAR), CREATE TABLE USER (name VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找位于“便宜坊”附近的企业评论的数量"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  \"便宜坊\";"
      }
    ],
    "system": "CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR), CREATE TABLE business (business_id VARCHAR), CREATE TABLE review (text VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找名字为“米雪”的用户数"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT name ) FROM USER WHERE name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回给我“餐馆”的企业数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.category_name  =  \"餐馆\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回给有“复兴号”的城市。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"复兴号\";"
      }
    ],
    "system": "CREATE TABLE business (name VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“米雪”写的提示的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"米雪\";"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE tip (text VARCHAR, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“星巴克”附近的总访问数"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t3.count ) FROM checkin AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t2.neighbourhood_name  =  \"星巴克\";"
      }
    ],
    "system": "CREATE TABLE checkin (business_id VARCHAR, count INTEGER), CREATE TABLE business (business_id VARCHAR), CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找“3月”份撰写的评论总数"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"3月\";"
      }
    ],
    "system": "CREATE TABLE review (MONTH VARCHAR, text VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出每个月的提示数"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT text )  ,  MONTH FROM tip GROUP BY MONTH;"
      }
    ],
    "system": "CREATE TABLE tip (MONTH VARCHAR, text VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“成都”有多少个社区拥有评分是5的企业？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.neighbourhood_name ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"成都\" AND t2.rating  =  5;"
      }
    ],
    "system": "CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR), CREATE TABLE business (rating VARCHAR, business_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给我“云南”所有的“摩洛哥”“餐馆”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.state  =  \"云南\" AND t2.category_name  =  \"摩洛哥\" AND t3.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个企业访问的次数最多"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE checkin (business_id VARCHAR, count INTEGER), CREATE TABLE business (business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成都”哪个街区的企业最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"成都\" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR), CREATE TABLE business (name VARCHAR, business_id VARCHAR, city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“成都”找出评分至少是3.5的“墨西哥”“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t1.rating  >  3.5 AND t2.category_name  =  \"墨西哥\" AND t3.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“成都”找出评分超过3.5的“墨西哥”“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t1.rating  >  3.5 AND t2.category_name  =  \"墨西哥\" AND t3.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR, rating INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“四川”“成都”找出所有“代客服务”的“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t1.state  =  \"四川\" AND t2.category_name  =  \"代客服务\" AND t3.category_name  =  \"餐厅\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR, state VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“成都”的“星巴克”附近找出“意大利”“餐厅”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN category AS t4 ON t4.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"成都\" AND t3.category_name  =  \"意大利\" AND t4.category_name  =  \"餐厅\" AND t2.neighbourhood_name  =  \"星巴克\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR), CREATE TABLE neighbourhood (neighbourhood_name VARCHAR, business_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“厦门”找出所有拥有至少30条评论且平均评级高于3分的“酒吧”"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"厦门\" AND t1.rating  >  3 AND t1.review_count  >  30 AND t2.category_name  =  \"酒吧\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, rating INTEGER, name VARCHAR, city VARCHAR, review_count INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“武汉”有多少家“埃及”“餐馆”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"武汉\" AND t2.category_name  =  \"餐厅\" AND t3.category_name  =  \"埃及\";"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (city VARCHAR, business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出平均评论分数低于3的用户"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id GROUP BY t2.name HAVING AVG ( t1.rating )  <  3;"
      }
    ],
    "system": "CREATE TABLE USER (name VARCHAR, user_id VARCHAR), CREATE TABLE review (rating INTEGER, user_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“四月”最多的商业评论"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.month  =  \"四月\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE review (text VARCHAR, business_id VARCHAR, month VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找最多数量类别的业务"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE category (business_id VARCHAR, category_name VARCHAR), CREATE TABLE business (business_id VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“PVLDB”的主页。"
      },
      {
        "from": "assistant",
        "value": "SELECT homepage FROM journal WHERE name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE journal (homepage VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”的主页。"
      },
      {
        "from": "assistant",
        "value": "SELECT homepage FROM author WHERE name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE author (homepage VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回文章“使数据库可用”的摘要。"
      },
      {
        "from": "assistant",
        "value": "SELECT abstract FROM publication WHERE title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, abstract VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回文章“使数据库可用”的发行年份"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR FROM publication WHERE title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回文章“使数据库可用”发行年。"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR FROM publication WHERE title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年以后的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM publication WHERE YEAR  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“VLDB”会议的主页。"
      },
      {
        "from": "assistant",
        "value": "SELECT homepage FROM conference WHERE name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE conference (homepage VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有的关键词。"
      },
      {
        "from": "assistant",
        "value": "SELECT keyword FROM keyword;"
      }
    ],
    "system": "CREATE TABLE keyword (keyword VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有的组织的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM organization;"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“中国北方”的所有组织。"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM organization WHERE continent  =  \"中国北方\";"
      }
    ],
    "system": "CREATE TABLE organization (continent VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“北京理工大学”的网站主页。"
      },
      {
        "from": "assistant",
        "value": "SELECT homepage FROM organization WHERE name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (homepage VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回论文“使数据库可用”的参考资料数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT reference_num FROM publication WHERE title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, reference_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回论文“使数据库可用”的参考资料。"
      },
      {
        "from": "assistant",
        "value": "SELECT reference_num FROM publication WHERE title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, reference_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回论文“使数据库可用”的引用数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT citation_num FROM publication WHERE title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, citation_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回论文“使数据库可用”的引用。"
      },
      {
        "from": "assistant",
        "value": "SELECT citation_num FROM publication WHERE title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, citation_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回有200个以上引用的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM publication WHERE citation_num  >  200;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, citation_num INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回那些在“PVLDB” 2010中有论文的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  =  2010;"
      }
    ],
    "system": "CREATE TABLE publication (year VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2010年后在“PVLDB”会议上发表过论文的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  >  2010;"
      }
    ],
    "system": "CREATE TABLE publication (year INTEGER, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2002年的“VLDB”会议上有发表论文的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  =  2002;"
      }
    ],
    "system": "CREATE TABLE publication (year VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2002年前在“VLDB”会议上有论文的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002;"
      }
    ],
    "system": "CREATE TABLE publication (cid VARCHAR, year INTEGER, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在1995年之后2002年之前“VLDB”会议上发表过论文的作者名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002 AND t4.year  >  1995;"
      }
    ],
    "system": "CREATE TABLE publication (cid VARCHAR, year INTEGER, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回给我“PVLDB”的领域。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM DOMAIN AS t3 JOIN domain_journal AS t1 ON t3.did  =  t1.did JOIN journal AS t2 ON t2.jid  =  t1.jid WHERE t2.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE domain_journal (jid VARCHAR, did VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“PVLDB”有论文的作者名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”所在的机构。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”的发表过论文的会议。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE publication (cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”的发表过论文的期刊。。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE publication (jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”集中工作的领域。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM domain_author AS t3 JOIN author AS t1 ON t3.aid  =  t1.aid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE domain_author (aid VARCHAR, did VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“使数据库可用”的作者给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回发表了“使数据库可用”的会议。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t2.title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”发表的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议上发表的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回给我发表在“PVLDB”上的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2000年后发表在“PVLDB”上的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, year INTEGER), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把在2000年之后的“VLDB”会议的论文返回给我。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, year INTEGER), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”在“PVLDB”上发表的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议上“李政道”发表过的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”在2000年以后发表的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"李政道\" AND t3.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”在2000年以后在“PVLDB”上发表的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, year INTEGER, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2000年以后“李政道”在“VLDB”会议上上发表的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, year INTEGER, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“VLDB”会议的领域返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM domain_conference AS t3 JOIN conference AS t1 ON t3.cid  =  t1.cid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE domain_conference (cid VARCHAR, did VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回那些在“VLDB”会议上发表过论文的作者的名字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“数据库”领域的所有关键字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"数据库\";"
      }
    ],
    "system": "CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE domain_keyword (kid VARCHAR, did VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回把所有包含“自然语言”这个关键词的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"自然语言\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“使数据库可用”的关键词。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回与“李政道”相关的关键词。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“VLDB”会议中的关键词。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“PVLDB”的关键词返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“北京理工大学”发表的论文中的关键词。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (pid VARCHAR), CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回包含“用户研究”关键词的“李政道”编写的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t5.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"李政道\" AND t1.keyword  =  \"用户研究\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“PVLDB”会议中包含关键字“关键词搜索”的文件。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"关键词搜索\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“VLDB”会议上包含关键字“信息检索”的论文返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"信息检索\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把那些有包含关键词“关系型数据库”的论文的作者返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"关系型数据库\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“数据库”领域中所有的机构名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"数据库\";"
      }
    ],
    "system": "CREATE TABLE domain_author (aid VARCHAR, did VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE organization (name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有位于“中国北方”的“数据库”领域内的所有机构。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"数据库\" AND t2.continent  =  \"中国北方\";"
      }
    ],
    "system": "CREATE TABLE domain_author (aid VARCHAR, did VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE organization (continent VARCHAR, name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回所有在“北京理工大学”的研究人员。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“北京理工大学”“数据库”领域的所有研究人员。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"数据库\" AND t2.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE domain_author (aid VARCHAR, did VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR, oid VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE organization (name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“北京理工大学”的所有论文都返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年以后“北京理工大学”的所有论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"北京理工大学\" AND t4.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“北京理工大学”的在“VLDB”会议上的所有论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t5.title FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“PVLDB”上所有“北京理工大学”的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年后在“PVLDB”会议上所有“北京理工大学”发表的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"北京理工大学\" AND t5.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, year INTEGER, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回给在“数据库”方向引用超过200个的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"数据库\" AND t3.citation_num  >  200;"
      }
    ],
    "system": "CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE domain_publication (pid VARCHAR, did VARCHAR), CREATE TABLE publication (title VARCHAR, citation_num INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回引用超过200个的“PVLDB”的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, citation_num INTEGER, jid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议发表过的且引用超过200个的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, citation_num INTEGER), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回引用超过200个的作者是“李政道”的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"李政道\" AND t3.citation_num  >  200;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, citation_num INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回引用超过200个的作者是“李政道”且发表在“PVLDB”的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"PVLDB\" AND t4.citation_num  >  200;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, citation_num INTEGER, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回发表在“VLDB”会议的引用超过200个的作者是“李政道”的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"VLDB\" AND t4.citation_num  >  200;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, citation_num INTEGER, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年后引用超过200篇的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM publication WHERE citation_num  >  200 AND YEAR  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, citation_num INTEGER, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年后在“数据库”领域引用超过200篇的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"数据库\" AND t3.citation_num  >  200 AND t3.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE domain_publication (pid VARCHAR, did VARCHAR), CREATE TABLE publication (title VARCHAR, citation_num INTEGER, year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年后在“PVLDB”上的引用超过200篇的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, citation_num INTEGER, jid VARCHAR, year INTEGER), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回于2000年后在“VLDB”会议上的引用超过200篇的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, citation_num INTEGER, year INTEGER), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回拥有“李政道”的论文的会议的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE publication (cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”的论文所在期刊的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE publication (jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每年“李政道”投稿的论文数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"李政道\" GROUP BY t3.year;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, year VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回论文“使数据库可用”的作者的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每一年的“使数据库可用”的引用数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT YEAR  ,  SUM ( citation_num ) FROM publication WHERE title  =  \"使数据库可用\" GROUP BY YEAR;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, citation_num INTEGER, YEAR VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2010年之前文章“使数据库可用”的引用数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t3 JOIN cite AS t1 ON t3.pid  =  t1.cited JOIN publication AS t2 ON t2.pid  =  t1.citing WHERE t3.title  =  \"使数据库可用\" AND t2.year  <  2010;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, year INTEGER, pid VARCHAR), CREATE TABLE cite (citing VARCHAR, cited VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回作者是“李政道”的论文数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“VLDB”会议论文的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“PVLDB”上的论文数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年后所有论文的数目。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT title ) FROM publication WHERE YEAR  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, YEAR INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2000年之后“PVLDB”会议的论文数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, year INTEGER), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年后在“VLDB”会议发表的论文的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, year INTEGER), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”在“PVLDB”上发表的论文数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议上“李政道”的论文数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“李政道”于2000年后发表的论文返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"李政道\" AND t3.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2000年后在“PVLDB”这个会议上“李政道”发表的论文数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, year INTEGER, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年以后“李政道”在“VLDB”会议上发表的论文数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, year INTEGER, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回关键字的个数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT keyword ) FROM keyword;"
      }
    ],
    "system": "CREATE TABLE keyword (keyword VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“数据库”领域中关键字的个数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.keyword ) FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"数据库\";"
      }
    ],
    "system": "CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE domain_keyword (kid VARCHAR, did VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把包含“自然语言”关键词的论文返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"自然语言\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把论文“使数据库可用”的关键词数目返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"使数据库可用\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回与“李政道”相关的关键词的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议中的关键字个数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“PVLDB”会议中的关键字个数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“北京理工大学”发表论文中的关键词个数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.keyword ) FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (pid VARCHAR), CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回包含关键词“用户研究”且作者是“李政道”的论文号码。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t5.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"李政道\" AND t1.keyword  =  \"用户研究\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“PVLDB”中包含关键字“关键词搜索”的论文的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"关键词搜索\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请将“VLDB”会议包含关键字“信息检索”的论文数量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"信息检索\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请返回论文中包含关键字“关系型数据库”的作者的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.name ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"关系型数据库\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把包含关键词“自然语言”的论文的全部引用返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t3.citation_num ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"自然语言\";"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (citation_num INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把机构的数量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT name ) FROM organization;"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把在“中国北方”机构的数量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent  =  \"中国北方\";"
      }
    ],
    "system": "CREATE TABLE organization (continent VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“数据库”方向的中的机构数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"数据库\";"
      }
    ],
    "system": "CREATE TABLE domain_author (aid VARCHAR, did VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE organization (name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回位于“中国北方”的“数据库”领域中的机构数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"数据库\" AND t2.continent  =  \"中国北方\";"
      }
    ],
    "system": "CREATE TABLE domain_author (aid VARCHAR, did VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE organization (continent VARCHAR, name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回机构是“北京理工大学”的发表论文数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“北京理工大学”在“数据库”领域中的论文数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title ) FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN domain_publication AS t2 ON t3.did  =  t2.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN publication AS t4 ON t4.pid  =  t2.pid WHERE t3.name  =  \"数据库\" AND t5.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE domain_author (aid VARCHAR, did VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE domain_publication (pid VARCHAR, did VARCHAR), CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“北京理工大学”在2000年后发表的论文数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"北京理工大学\" AND t4.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“北京理工大学”在“VLDB”会议上发表的论文数量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“北京理工大学”在“PVLDB”的论文数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年后“北京理工大学”在“PVLDB”上发表的论文数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"北京理工大学\" AND t5.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (title VARCHAR, year INTEGER, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“北京理工大学”发表的论文的总引用返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t4.citation_num ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (citation_num INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“北京理工大学”研究人员的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“北京理工大学”在“数据库”领域的研究人员人数。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"数据库\" AND t2.name  =  \"北京理工大学\";"
      }
    ],
    "system": "CREATE TABLE domain_author (aid VARCHAR, did VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR, oid VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE organization (name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把在“PVLDB”有论文的作者的数量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议上有论文的作者的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年前在“PVLDB”上发表的论文的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, year INTEGER), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把在“VLDB”会议上2000年以前发表的论文的数量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2000;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, year INTEGER), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“PVLDB”所有论文的总引用返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (citation_num INTEGER, jid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“PVLDB”的每一篇论文的引用数返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.citation_num FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (jid VARCHAR, citation_num VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回给我在2005年“PVLDB”论文论文的总引用。"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  =  2005;"
      }
    ],
    "system": "CREATE TABLE publication (year VARCHAR, citation_num INTEGER, jid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把在2005年之前发表在“PVLDB”中的论文的总引用量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2005;"
      }
    ],
    "system": "CREATE TABLE publication (citation_num INTEGER, jid VARCHAR, year INTEGER), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“PVLDB”中的每年的论文总引用。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;"
      }
    ],
    "system": "CREATE TABLE publication (year VARCHAR, citation_num INTEGER, jid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每一年在“PVLDB”发表的论文数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, year VARCHAR, jid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议的所有论文的总引用。"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (citation_num INTEGER, cid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议上的每一篇论文的引用。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.citation_num FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (cid VARCHAR, citation_num VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2005年的“VLDB”会议上发表的论文的总引用。"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  =  2005;"
      }
    ],
    "system": "CREATE TABLE publication (year VARCHAR, citation_num INTEGER, cid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2005年之前“VLDB”会议上的论文的总引用。"
      },
      {
        "from": "assistant",
        "value": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2005;"
      }
    ],
    "system": "CREATE TABLE publication (citation_num INTEGER, year INTEGER, cid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每年发表在“VLDB”会议上的论文的总引用。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;"
      }
    ],
    "system": "CREATE TABLE publication (year VARCHAR, citation_num INTEGER, cid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回每年在“VLDB”会议上发表的论文的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, year VARCHAR, cid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回那些与“李政道”和“杨振宁”合作的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t1.name  =  \"李政道\" AND t3.name  =  \"杨振宁\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年后与“李政道”合作的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"李政道\" AND t5.year  >  2000;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”和“杨振宁”合著的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"李政道\" AND t1.name  =  \"杨振宁\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2005年后由“李政道”和“杨振宁”撰写的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"李政道\" AND t1.name  =  \"杨振宁\" AND t5.year  >  2005;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“PVLDB”上“李政道”和“杨振宁”合著的的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"李政道\" AND t1.name  =  \"杨振宁\" AND t4.name  =  \"PVLDB\";"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2005年后发表在“PVLDB”上由“李政道”和“杨振宁”撰写的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"李政道\" AND t1.name  =  \"杨振宁\" AND t4.name  =  \"PVLDB\" AND t6.year  >  2005;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, year INTEGER, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回与“李政道”合作的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回2000年以前由“李政道”和“杨振宁”撰写的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"李政道\" AND t1.name  =  \"杨振宁\" AND t5.year  <  2000;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把那些引用“李政道”的论文的作者返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE publication (pid VARCHAR), CREATE TABLE cite (citing VARCHAR, cited VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把由“李政道”和“杨振宁”写的论文数量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"李政道\" AND t1.name  =  \"杨振宁\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把2000年以前由“李政道”和“杨振宁”撰写的论文数量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"李政道\" AND t1.name  =  \"杨振宁\" AND t5.year  <  2000;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把由“李政道”、“杨振宁”和“丁肇中”写的论文的号码返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t7.title ) FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t2.name  =  \"丁肇中\" AND t1.name  =  \"李政道\" AND t3.name  =  \"杨振宁\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回与“李政道”合作的作者的数量。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.name ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把引用“李政道”论文的作者数量返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"李政道\";"
      }
    ],
    "system": "CREATE TABLE publication (pid VARCHAR), CREATE TABLE cite (citing VARCHAR, cited VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把由“李政道”和“杨振宁”撰写的引用超过200的论文返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"李政道\" AND t1.name  =  \"杨振宁\" AND t5.citation_num  >  200;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, citation_num INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把论文包含关键字“关系型数据库”的数量最多的作者返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"关系型数据库\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回包含关键字“关系型数据库”的论文数量最多的会议名称。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"关系型数据库\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把包含关键字“关系型数据库”的论文数量最多的会议返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"关系型数据库\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把包含关键字“关系型数据库”的论文数量最多的期刊返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"关系型数据库\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回里包含关键字“关系型数据库”的论文最多的期刊。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"关系型数据库\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“VLDB”会议论文最多的关键词返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把“PVLDB”中论文包含的最多数量的关键词返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”发表的论文中包含最多数量的关键字。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"李政道\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回论文被引用数量最多的“北京理工大学”的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"北京理工大学\" GROUP BY t1.name ORDER BY SUM ( t4.citation_num ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (citation_num INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“数据库”领域的论文被引用最多的“北京理工大学”的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM DOMAIN AS t4 JOIN domain_publication AS t2 ON t4.did  =  t2.did JOIN publication AS t5 ON t5.pid  =  t2.pid JOIN writes AS t3 ON t3.pid  =  t5.pid JOIN author AS t1 ON t3.aid  =  t1.aid JOIN organization AS t6 ON t6.oid  =  t1.oid WHERE t4.name  =  \"数据库\" AND t6.name  =  \"北京理工大学\" GROUP BY t1.name ORDER BY SUM ( t5.citation_num ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE domain_publication (pid VARCHAR, did VARCHAR), CREATE TABLE publication (citation_num INTEGER, pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR, oid VARCHAR), CREATE TABLE organization (name VARCHAR, oid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把那些“李政道”和“杨振宁”写的被引用次数最多的论文返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"杨振宁\" AND t1.name  =  \"李政道\" ORDER BY t5.citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, citation_num VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回那些“李政道”发表了超过10篇论文的会议。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”发表了最多数量论文的会议。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回由“李政道”发表超过10篇论文的杂志。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”发表了最多数量论文的期刊。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"李政道\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把引用最多的论文返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, citation_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“数据库”领域中引用最多的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"数据库\" ORDER BY t3.citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE domain_publication (pid VARCHAR, did VARCHAR), CREATE TABLE publication (title VARCHAR, citation_num VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“PVLDB”中被引用最多的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" ORDER BY t2.citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, citation_num VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议中被引用最多的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" ORDER BY t2.citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, citation_num VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把作者是“李政道”且被引用数量最多的论文返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"李政道\" ORDER BY t3.citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR), CREATE TABLE publication (title VARCHAR, citation_num VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2000年后发表的引用最多的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM publication WHERE YEAR  >  2000 ORDER BY citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, YEAR INTEGER, citation_num VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2000年后在“数据库”领域中引用次数最多的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"数据库\" AND t3.year  >  2000 ORDER BY t3.citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE domain_publication (pid VARCHAR, did VARCHAR), CREATE TABLE publication (title VARCHAR, citation_num VARCHAR, year INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在2000年后发表在“PVLDB”上的被引用最多的论文。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, year INTEGER, jid VARCHAR, citation_num VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把2000年后在“VLDB”会议上发表论文中拥有最多数量引用的论文返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, year INTEGER, citation_num VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把在“PVLDB”有超过10篇论文的作者返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“PVLDB”中有最多论文的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回有超过10篇论文包含关键字“关系型数据库”的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"关系型数据库\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  10;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把超过60篇包含关键词“关系型数据库”的论文投放的会议返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"关系型数据库\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  60;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回超过60篇包含关键词“关系型数据库”的论文的期刊。"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"关系型数据库\" GROUP BY t3.name HAVING COUNT ( DISTINCT t2.title )  >  60;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“VLDB”会议上超过100篇论文中所包含的关键词。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  100;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“PVLDB”中超过100篇论文中包含的关键词。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t2.title )  >  100;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, jid VARCHAR, pid VARCHAR), CREATE TABLE journal (name VARCHAR, jid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回“李政道”发表的论文中超过10篇都包含的关键词。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"李政道\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  10;"
      }
    ],
    "system": "CREATE TABLE publication_keyword (kid VARCHAR, pid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, kid VARCHAR), CREATE TABLE publication (title VARCHAR, pid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回那些在“VLDB”会议上有超过10篇论文的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "把在“VLDB”会议上拥有最多论文的作者返回。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE publication (title VARCHAR, cid VARCHAR, pid VARCHAR), CREATE TABLE conference (cid VARCHAR, name VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“北京理工大学”有5000多篇论文总引用的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"北京理工大学\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;"
      }
    ],
    "system": "CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (citation_num INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "返回在“北京理工大学”“数据库”领域的有5000多篇论文总引用的作者。"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN writes AS t2 ON t2.aid  =  t1.aid JOIN publication AS t4 ON t2.pid  =  t4.pid WHERE t3.name  =  \"数据库\" AND t5.name  =  \"北京理工大学\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;"
      }
    ],
    "system": "CREATE TABLE domain_author (aid VARCHAR, did VARCHAR), CREATE TABLE author (aid VARCHAR, name VARCHAR, oid VARCHAR), CREATE TABLE DOMAIN (name VARCHAR, did VARCHAR), CREATE TABLE organization (name VARCHAR, oid VARCHAR), CREATE TABLE writes (aid VARCHAR, pid VARCHAR), CREATE TABLE publication (citation_num INTEGER, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“霸王别姬”是哪一年的？"
      },
      {
        "from": "assistant",
        "value": "SELECT release_year FROM movie WHERE title  =  \"霸王别姬\";"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“霸王别姬”是哪一年制作的？"
      },
      {
        "from": "assistant",
        "value": "SELECT release_year FROM movie WHERE title  =  \"霸王别姬\";"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“张家辉”出生于哪一年？"
      },
      {
        "from": "assistant",
        "value": "SELECT birth_year FROM actor WHERE name  =  \"张家辉\";"
      }
    ],
    "system": "CREATE TABLE actor (birth_year VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“张家辉”出生在哪一年？"
      },
      {
        "from": "assistant",
        "value": "SELECT birth_year FROM actor WHERE name  =  \"张家辉\";"
      }
    ],
    "system": "CREATE TABLE actor (birth_year VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演员“王凯”的国籍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT nationality FROM actor WHERE name  =  \"王凯\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "演员“王凯”来自哪个国家？"
      },
      {
        "from": "assistant",
        "value": "SELECT nationality FROM actor WHERE name  =  \"王凯\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出2015制作的所有电影"
      },
      {
        "from": "assistant",
        "value": "SELECT title FROM movie WHERE release_year  =  2015;"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有在“武汉”出生的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_city  =  \"武汉\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有在“武汉”出生的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_city  =  \"武汉\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪些演员出生在“武汉”？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_city  =  \"武汉\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有来自“阿富汗”的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE nationality  =  \"阿富汗\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“阿富汗”籍的所有演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE nationality  =  \"阿富汗\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出“阿富汗”所有演员的名字"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE nationality  =  \"阿富汗\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出1984出生的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_year  =  1984;"
      }
    ],
    "system": "CREATE TABLE actor (birth_year VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成龙”是什么时候出生的？"
      },
      {
        "from": "assistant",
        "value": "SELECT birth_year FROM actor WHERE name  =  \"成龙\";"
      }
    ],
    "system": "CREATE TABLE actor (birth_year VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成龙”出生在哪一年？"
      },
      {
        "from": "assistant",
        "value": "SELECT birth_year FROM actor WHERE name  =  \"成龙\";"
      }
    ],
    "system": "CREATE TABLE actor (birth_year VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成龙”的出生地在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT birth_city FROM director WHERE name  =  \"成龙\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成龙”出生在哪个城市？"
      },
      {
        "from": "assistant",
        "value": "SELECT birth_city FROM director WHERE name  =  \"成龙\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成龙”的国籍是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT nationality FROM director WHERE name  =  \"成龙\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“让子弹飞”的预算是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT budget FROM movie WHERE title  =  \"让子弹飞\";"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, budget VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有由“顾长卫”在2006后导演的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"顾长卫\" AND t3.release_year  >  2006;"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是电影“陆小凤”的导演？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"陆小凤\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁导演了电影“陆小凤”？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"陆小凤\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“陆小凤”的导演"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"陆小凤\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在电影“霸王别姬”中扮演“程蝶衣”的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"程蝶衣\" AND t3.title  =  \"霸王别姬\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, role VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在电影“霸王别姬”中扮演“程蝶衣”？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"程蝶衣\" AND t3.title  =  \"霸王别姬\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, role VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在电影“霸王别姬”中扮演“程蝶衣”的演员是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"程蝶衣\" AND t3.title  =  \"霸王别姬\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, role VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“霸王别姬”中扮演“程蝶衣”的演员是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"程蝶衣\" AND t3.title  =  \"霸王别姬\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, role VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“霸王别姬”中扮演“程蝶衣”的男演员是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"程蝶衣\" AND t3.title  =  \"霸王别姬\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, role VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“无间道”的体裁是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.genre FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"无间道\";"
      }
    ],
    "system": "CREATE TABLE genre (genre VARCHAR, gid VARCHAR), CREATE TABLE classification (msid VARCHAR, gid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015岁的电影“欢乐”的导演是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.release_year  =  2015 AND t3.title  =  \"欢乐\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有由“莫言”写的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.title FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t2.name  =  \"莫言\";"
      }
    ],
    "system": "CREATE TABLE written_by (wid VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR), CREATE TABLE writer (name VARCHAR, wid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有由“许鞍华”创作和制作的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM movie AS t2 JOIN made_by AS t3 ON t2.mid  =  t3.msid JOIN producer AS t1 ON t1.pid  =  t3.pid JOIN written_by AS t5 ON t5.msid  =  t2.mid JOIN writer AS t4 ON t5.wid  =  t4.wid WHERE t1.name  =  \"许鞍华\" AND t4.name  =  \"许鞍华\";"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, mid VARCHAR), CREATE TABLE made_by (pid VARCHAR, msid VARCHAR), CREATE TABLE producer (name VARCHAR, pid VARCHAR), CREATE TABLE written_by (wid VARCHAR, msid VARCHAR), CREATE TABLE writer (name VARCHAR, wid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有“李易峰”作为重要角色出演的所有电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"李易峰\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李易峰”作为重要角色出演的所有电影有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"李易峰\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有出现“李易峰”的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"李易峰\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2007年电影“盲山”的预算是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT budget FROM movie WHERE release_year  =  2007 AND title  =  \"盲山\";"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, budget VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出2010年度所有的“科幻”作品"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"科幻\" AND t3.release_year  =  2010;"
      }
    ],
    "system": "CREATE TABLE genre (genre VARCHAR, gid VARCHAR), CREATE TABLE classification (msid VARCHAR, gid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出2010发布的所有“科幻”电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"科幻\" AND t3.release_year  =  2010;"
      }
    ],
    "system": "CREATE TABLE genre (genre VARCHAR, gid VARCHAR), CREATE TABLE classification (msid VARCHAR, gid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出1980年后出生在“长沙”的所有演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_city  =  \"长沙\" AND birth_year  >  1980;"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, birth_year INTEGER, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1980年后出生在“长沙”的演员是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_city  =  \"长沙\" AND birth_year  >  1980;"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, birth_year INTEGER, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“长沙”1980年后出生的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_city  =  \"长沙\" AND birth_year  >  1980;"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, birth_year INTEGER, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“厦门”出生导演的所有电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.birth_city  =  \"厦门\";"
      }
    ],
    "system": "CREATE TABLE director (did VARCHAR, birth_city VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出1984年出生在“广州”的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_city  =  \"广州\" AND birth_year  =  1984;"
      }
    ],
    "system": "CREATE TABLE actor (birth_year VARCHAR, name VARCHAR, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有关于“核武器”的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"核武器\";"
      }
    ],
    "system": "CREATE TABLE tags (kid VARCHAR, msid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, id VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "与“核武器”有关的电影是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"核武器\";"
      }
    ],
    "system": "CREATE TABLE tags (kid VARCHAR, msid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, id VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“冯小刚”导演了哪些电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"冯小刚\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "查找由“冯小刚”导演的、“葛优”为主要角色的所有电影。"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"葛优\" AND t3.name  =  \"冯小刚\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE director (name VARCHAR, did VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "由“冯小刚”导演的、以“葛优”为主要角色的电影都有哪些？"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"葛优\" AND t3.name  =  \"冯小刚\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE director (name VARCHAR, did VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "有多少部电影是由“冯小刚”导演并且主演是“葛优”的？"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"葛优\" AND t3.name  =  \"冯小刚\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE director (name VARCHAR, did VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出“葛优”出演的“冯小刚”导演的所有电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"葛优\" AND t3.name  =  \"冯小刚\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE director (name VARCHAR, did VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“金庸”创作的电视连续剧是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM producer AS t1 JOIN made_by AS t3 ON t1.pid  =  t3.pid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"金庸\";"
      }
    ],
    "system": "CREATE TABLE producer (name VARCHAR, pid VARCHAR), CREATE TABLE made_by (pid VARCHAR, msid VARCHAR), CREATE TABLE tv_series (title VARCHAR, sid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁在电视剧“三国演义”中扮演“曹操”？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t3.role  =  \"曹操\" AND t2.title  =  \"三国演义\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, role VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE tv_series (title VARCHAR, sid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“三国演义”的作者是谁？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"三国演义\";"
      }
    ],
    "system": "CREATE TABLE written_by (wid VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR), CREATE TABLE writer (name VARCHAR, wid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是“三国演义”的作者"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"三国演义\";"
      }
    ],
    "system": "CREATE TABLE written_by (wid VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR), CREATE TABLE writer (name VARCHAR, wid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成龙”作为主要角色的电影是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"成龙\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE tv_series (title VARCHAR, sid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“成龙”出演的电影是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"成龙\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE tv_series (title VARCHAR, sid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“杨幂”出演电影的导演"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"杨幂\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (mid VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE director (name VARCHAR, did VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“杨幂”出演电影的所有电影制片人"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t3 JOIN actor AS t2 ON t3.aid  =  t2.aid JOIN movie AS t5 ON t5.mid  =  t3.msid JOIN made_by AS t4 ON t5.mid  =  t4.msid JOIN producer AS t1 ON t1.pid  =  t4.pid WHERE t2.name  =  \"杨幂\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (mid VARCHAR), CREATE TABLE made_by (pid VARCHAR, msid VARCHAR), CREATE TABLE producer (name VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁是2013年度电视剧“还珠格格”的导演？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN tv_series AS t3 ON t3.sid  =  t1.msid WHERE t3.release_year  =  2013 AND t3.title  =  \"还珠格格\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE tv_series (title VARCHAR, sid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“长沙”的所有“女”演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_city  =  \"长沙\" AND gender  =  \"女\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, gender VARCHAR, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出1980后出生的“意大利”演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_year  >  1980 AND nationality  =  \"意大利\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, nationality VARCHAR, birth_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出1980岁后出生在“广州”的“女”演员"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM actor WHERE birth_city  =  \"广州\" AND birth_year  >  1980 AND gender  =  \"女\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, gender VARCHAR, birth_year INTEGER, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出电影“上甘岭”中的所有“女”演员"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.gender  =  \"女\" AND t3.title  =  \"上甘岭\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR, gender VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有来自“阿富汗”的导演"
      },
      {
        "from": "assistant",
        "value": "SELECT name FROM director WHERE nationality  =  \"阿富汗\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, nationality VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出电影“战狼”中的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"战狼\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“韩国”演员在“陆小凤”电影中扮演的角色"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"韩国\" AND t3.title  =  \"陆小凤\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR, nationality VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有“刘德华”扮演“狄仁杰”的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"刘德华\" AND t3.role  =  \"狄仁杰\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, role VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“钢的琴”的导演在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.birth_city FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"钢的琴\";"
      }
    ],
    "system": "CREATE TABLE director (did VARCHAR, birth_city VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "谁扮演“狄仁杰”的角色"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid WHERE t2.role  =  \"狄仁杰\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, role VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“冯小刚”导演的电影流派是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.genre FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN classification AS t1 ON t4.mid  =  t1.msid JOIN genre AS t3 ON t3.gid  =  t1.gid WHERE t5.name  =  \"冯小刚\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (mid VARCHAR), CREATE TABLE classification (gid VARCHAR, msid VARCHAR), CREATE TABLE genre (genre VARCHAR, gid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪部电影有“喜羊羊”这个角色"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.title FROM movie AS t1 JOIN CAST AS t2 ON t1.mid  =  t2.msid WHERE t2.role  =  \"喜羊羊\";"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, mid VARCHAR), CREATE TABLE CAST (role VARCHAR, msid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“无极”中的主要角色是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.role FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"无极\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, role VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "列出所有关于“核武器”的电影的导演"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN tags AS t5 ON t5.msid  =  t4.mid JOIN keyword AS t1 ON t5.kid  =  t1.id WHERE t1.keyword  =  \"核武器\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (mid VARCHAR), CREATE TABLE tags (kid VARCHAR, msid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“刘诗诗”在2010年后的电影数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"刘诗诗\" AND t2.release_year  >  2010;"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“上甘岭”中演员的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"上甘岭\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "电影“上甘岭”中有多少演员？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"上甘岭\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“顾长卫”导演了多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"顾长卫\";"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2013年制作了多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2013电影的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;"
      }
    ],
    "system": "CREATE TABLE movie (title VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "每年由“许鞍华”导演的电影数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title  )  ,  t3.release_year FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"许鞍华\" GROUP BY t3.release_year;"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“胡军”演了多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"胡军\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“胡军”演的电影数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"胡军\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“胡军”主演电影的数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"胡军\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“胡军”演了多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"胡军\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2000年后，“厦门”有多少演员出生？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"厦门\" AND birth_year  >  2000;"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, birth_year INTEGER, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“舒淇”在2002之前演过多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"舒淇\" AND t2.release_year  <  2002;"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“吴彦祖”每年表演的电影数量是多少？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t2.title  )  ,  t2.release_year FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"吴彦祖\" GROUP BY t2.release_year;"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2015年关于“伊拉克战争”有多少电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"伊拉克战争\" AND t3.release_year  =  2015;"
      }
    ],
    "system": "CREATE TABLE tags (kid VARCHAR, msid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, id VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在1990年之后发行了多少部关于“波斯人”的电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"波斯人\" AND t3.release_year  >  1990;"
      }
    ],
    "system": "CREATE TABLE tags (kid VARCHAR, msid VARCHAR), CREATE TABLE keyword (keyword VARCHAR, id VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "2010年后“李安”导演了多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"李安\" AND t3.release_year  >  2010;"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李安”在2010之前导演了多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"李安\" AND t3.release_year  <  2010;"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year INTEGER)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“李安”在2002前和2010后导演了多少部电影？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t4.title  ) FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid WHERE t3.name  =  \"李安\" AND t4.release_year  <  2010 AND t4.release_year  >  2002;"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year INTEGER), CREATE TABLE made_by (pid VARCHAR, msid VARCHAR), CREATE TABLE producer (pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "1980年后，有多少“女”演员“广州”在出生？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"广州\" AND birth_year  >  1980 AND gender  =  \"女\";"
      }
    ],
    "system": "CREATE TABLE actor (name VARCHAR, gender VARCHAR, birth_year INTEGER, birth_city VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“日本”演员在“姜文”电影中扮演的演员数量"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.nationality  =  \"日本\" AND t3.name  =  \"姜文\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR, nationality VARCHAR), CREATE TABLE movie (mid VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE director (name VARCHAR, did VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“中国”有多少演员在“尖峰时刻”中扮演角色？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"中国\" AND t3.title  =  \"尖峰时刻\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR, nationality VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有是“张晋”和“甄子丹”主演的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"张晋\" AND t2.name  =  \"甄子丹\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“张晋”和“甄子丹”是主要角色的所有电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"张晋\" AND t2.name  =  \"甄子丹\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有的“张晋”和“甄子丹”都是主要角色的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"张晋\" AND t2.name  =  \"甄子丹\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“甄子丹”和“张晋”是主要角色的所有电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"张晋\" AND t2.name  =  \"甄子丹\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出所有和“周润发”出演同一部电影的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN CAST AS t3 ON t5.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"周润发\";"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "什么电影和电影“上甘岭”有同样的导演？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN directed_by AS t1 ON t5.did  =  t1.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t4.title  =  \"上甘岭\";"
      }
    ],
    "system": "CREATE TABLE director (did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出被分类为最多数量的流派的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid GROUP BY t3.title ORDER BY COUNT ( DISTINCT t2.genre  ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE genre (genre VARCHAR, gid VARCHAR), CREATE TABLE classification (msid VARCHAR, gid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪部电影“中国”演员最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.nationality  =  \"中国\" GROUP BY t2.title ORDER BY COUNT ( DISTINCT t1.name  ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR, nationality VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出在“李安”的最新电影中出演的演员"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t3.name  =  \"李安\" ORDER BY t5.release_year DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (mid VARCHAR, release_year VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE director (name VARCHAR, did VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "通过“李安”导演的最新电影的名字和预算"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.budget  ,  t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"李安\" ORDER BY t3.release_year DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, budget VARCHAR, mid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“姜文”的最新电影是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"姜文\" ORDER BY t3.release_year DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (title VARCHAR, mid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "哪个制片人的导演数量最多？"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid GROUP BY t1.name ORDER BY COUNT ( DISTINCT t3.name  ) DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE director (name VARCHAR, did VARCHAR), CREATE TABLE directed_by (did VARCHAR, msid VARCHAR), CREATE TABLE movie (mid VARCHAR), CREATE TABLE made_by (pid VARCHAR, msid VARCHAR), CREATE TABLE producer (name VARCHAR, pid VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "找出“黄渤”表演最新的电影"
      },
      {
        "from": "assistant",
        "value": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.name  =  \"黄渤\" ORDER BY t3.release_year DESC LIMIT 1;"
      }
    ],
    "system": "CREATE TABLE CAST (aid VARCHAR, msid VARCHAR), CREATE TABLE actor (aid VARCHAR, name VARCHAR), CREATE TABLE movie (mid VARCHAR, release_year VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”有多少“日本料理”？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.name  =  \"日本料理\";"
      }
    ],
    "system": "CREATE TABLE restaurant (name VARCHAR, id VARCHAR), CREATE TABLE LOCATION (city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”有多少家“四川”餐馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, city_name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”有多少吃“四川”菜的地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, city_name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”有多少饭店做“四川”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, city_name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”有多少吃“四川”餐的地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, city_name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“洛阳”有多少种“四川”菜肴？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"洛阳\" AND t1.name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE restaurant (city_name VARCHAR, name VARCHAR), CREATE TABLE geographic (city_name VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“四川”菜在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”最好的“淮南”餐馆是哪家？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”最好的“淮南”餐是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”吃“淮南”菜最好的地方是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”最好的“淮南”餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”最好的“淮南”菜在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”最好吃的“淮南”菜"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”评价最高的“淮南”餐馆在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出“深圳”吃“淮南”菜最好的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”口碑最好的“淮南”餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”最好的“淮南”餐馆是哪一家？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”最好的“淮南”餐馆的地址在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.food_type  =  \"淮南\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“丹尼尔”餐厅在“厦门”哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.name  =  \"丹尼尔\";"
      }
    ],
    "system": "CREATE TABLE restaurant (city_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“鼓浪屿”“龙头路”有什么好餐馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"鼓浪屿\" AND t2.street_name  =  \"龙头路\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "该出地址是“鼓浪屿”“龙头路”的好口碑餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"鼓浪屿\" AND t2.street_name  =  \"龙头路\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出一家在“鼓浪屿”“龙头路”的好吃的餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"鼓浪屿\" AND t2.street_name  =  \"龙头路\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“鼓浪屿”“龙头路”的好评餐馆是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"鼓浪屿\" AND t2.street_name  =  \"龙头路\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们在哪里可以找出在“泉州”的餐馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"泉州\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出在“泉州”的餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"泉州\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们可以找的“泉州”的餐馆在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"泉州\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "位于“泉州”的餐馆在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"泉州\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些在“泉州”的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"泉州\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些“淮南”菜出名的餐馆好吗？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "那些餐馆“淮南”菜好吃？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“苏州”有多少地方吃“淮南”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"苏州\" AND t1.food_type  =  \"淮南\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR), CREATE TABLE LOCATION (city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“苏州”有多少家“淮南”餐馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"苏州\" AND t1.food_type  =  \"淮南\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR), CREATE TABLE LOCATION (city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“苏州”有多少做“淮南”菜的餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"苏州\" AND t1.food_type  =  \"淮南\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR), CREATE TABLE LOCATION (city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“苏州”有多少家吃“淮南”菜的餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"苏州\" AND t1.food_type  =  \"淮南\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR), CREATE TABLE LOCATION (city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“昆山”有多少“鲁”餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"昆山\" AND t1.food_type  =  \"鲁\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, city_name VARCHAR), CREATE TABLE geographic (city_name VARCHAR, county VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南山”哪里可以吃“淮南”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"淮南\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”有多少“海鲜”餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.name  =  \"海鲜\";"
      }
    ],
    "system": "CREATE TABLE restaurant (city_name VARCHAR, name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“泉州”一家好餐馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"泉州\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“泉州”有什么好的餐馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"泉州\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“泉州”的好餐馆是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"泉州\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "能一些在“泉州”的好饭店"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"泉州\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”“福田”哪里有一家好的“东北”餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”的“福田”哪里有好的“东北”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”“福田”好的“东北”餐厅在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”“福田”有哪些吃“东北”菜的好地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个关于“深圳”“福田”的“东北”餐厅好吗"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请一些“深圳”“福田”好评的“东北”餐馆好吗"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个在“深圳”“福田”吃“东北”食物的好餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”，“福田”在“东北”美食的好地方是哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”的“福田”我可以在哪里吃到“东北”食物？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些在“深圳”“福田”地区吃“东北”食物的好地方"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”“福田”的“东北”餐厅在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出在“深圳”的“福田”提供美味的“东北”食品的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”“福田”的一家吃“东北”菜的不错的餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”的“福田”那个餐厅供应好的“东北”食品？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”“福田”的一些吃“东北”菜不错的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些“深圳”的“福田”吃“东北”菜的好地方"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我在“深圳”“福田”哪里可以吃到的美味的“东北”食品呢？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”“福田”哪里有好的“东北”食物？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”“福田”的“东北”食物有哪些餐馆做的很好吃？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“福田”在“深圳”哪里有吃“东北”菜的不错的地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出在“深圳”“福田”的一家不错的“东北”餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出位于“深圳”的“福田”的一些好的“东北”餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t2.street_name  =  \"福田\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我可以在“厦门”哪里吃“淮南”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"淮南\";"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, city_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些在“鼓浪屿”“龙头路”餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"鼓浪屿\" AND t2.street_name  =  \"龙头路\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一家位置是“鼓浪屿”“龙头路”的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"鼓浪屿\" AND t2.street_name  =  \"龙头路\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们在哪里可以找到在“鼓浪屿”“龙头路”上的餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"鼓浪屿\" AND t2.street_name  =  \"龙头路\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我们在哪里可以找出位置在“鼓浪屿”“龙头路”的一些餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"鼓浪屿\" AND t2.street_name  =  \"龙头路\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR, street_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”最好的吃的“四川”菜餐馆在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”吃“四川”菜最好的餐馆在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”最好的“四川”菜餐厅是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”最好的“四川”餐馆是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”最好的“四川”餐馆在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”最好的“四川”餐厅是哪一个？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出“厦门”最好的吃“四川”菜的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "位置是“厦门”的“四川”菜最好的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”最好的中餐厅是哪一家？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”最好的“四川”菜餐厅在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”评价最好的“四川”菜馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”最好的“四川”餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"厦门\" AND t1.food_type  =  \"四川\" );"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些在“西湖”地区适合吃“淮南”菜的餐馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“西湖”有哪些好地方可以吃“淮南”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“西湖”地区的一家吃“淮南”菜的好餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“西湖”地区一家好的“淮南”餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“西湖”哪里有“淮南”菜的好地方？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“西湖”区哪里有适合吃“淮南”菜的餐馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“西湖”区吃“淮南”菜的不错的地方"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“西湖”附近的好吃的“淮南”餐厅在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“西湖”地区有什么可以吃“淮南”菜的好餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“西湖”区域的优秀的“淮南”餐厅在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“西湖”，我在哪里可以吃到好的“淮南”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"西湖\" AND t1.food_type  =  \"淮南\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (rating INTEGER, city_name VARCHAR, name VARCHAR, food_type VARCHAR, id VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“南山”有哪些餐馆适合吃“东北”食品？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“南山”中有什么好地方可以吃“东北”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南山”中哪里有好的“东北”餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "显示在“南山”好的“东北”餐厅吗"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“南山”地区一个好的“东北”菜餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "给出位置在“南山”的一家好的“东北”餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请一个在“南山”的吃“东北”菜的好地方"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南山”中哪里有好的“东北”食物？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“南山”有什么餐厅可以吃到好吃的“东北”食品呢？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南山”地区有什么好的餐馆可以吃到“东北”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "请一些“南山”地区好的“东北”餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我能在“南山”附近的什么地方吃些好吃的“东北”菜呢？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些在“南山”附近吃“东北”菜的好地方"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南山”这边有哪里有好的“东北”菜餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一家在“南山”的供应美味的“东北”食品的餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“南山”地区一些好的“东北”餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“南山”品尝“东北”菜的好地方在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“南山”中一些味道好的“东北”餐厅"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个在“南山”口碑好的餐馆吃“东北”菜"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南山”什么位置有好的“东北”餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南山”地区吃“东北”菜哪些地方比较好？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“南山”中的哪家餐馆能吃到可口的“东北”菜？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“南山”附近要品尝“东北”食物的一个合适的地方是哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"南山\" AND t1.food_type  =  \"东北\" AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE restaurant (food_type VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“深圳”哪里可以找出“四川”菜肴？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”的“四川”菜餐馆在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“深圳”的“四川”美食在哪里？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"深圳\" AND t1.name  =  \"四川\";"
      }
    ],
    "system": "CREATE TABLE restaurant (id VARCHAR, name VARCHAR), CREATE TABLE LOCATION (house_number VARCHAR, city_name VARCHAR, restaurant_id VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "在“厦门”我们可以在哪里找出一些餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"厦门\" );"
      }
    ],
    "system": "CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR), CREATE TABLE restaurant (city_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些在“厦门”的餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"厦门\" );"
      }
    ],
    "system": "CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR), CREATE TABLE restaurant (city_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一个位于“厦门”的饭店"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"厦门\" );"
      }
    ],
    "system": "CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR), CREATE TABLE restaurant (city_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "我在哪里可以找到“厦门”的餐厅？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"厦门\" );"
      }
    ],
    "system": "CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR), CREATE TABLE restaurant (city_name VARCHAR, id VARCHAR, name VARCHAR), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一家在“厦门”的好餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"厦门\" ) AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR), CREATE TABLE restaurant (city_name VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”有什么好的餐馆？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"厦门\" ) AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR), CREATE TABLE restaurant (city_name VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "一些地址在“厦门”的好餐馆"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"厦门\" ) AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR), CREATE TABLE restaurant (city_name VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  },
  {
    "conversations": [
      {
        "from": "user",
        "value": "“厦门”的一家好餐馆是什么？"
      },
      {
        "from": "assistant",
        "value": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"厦门\" ) AND t1.rating  >  2.5;"
      }
    ],
    "system": "CREATE TABLE LOCATION (house_number VARCHAR, restaurant_id VARCHAR), CREATE TABLE restaurant (city_name VARCHAR, id VARCHAR, name VARCHAR, rating INTEGER), CREATE TABLE geographic (region VARCHAR, city_name VARCHAR)"
  }
]